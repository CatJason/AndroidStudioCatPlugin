iteratorgetset3hackToForceKotlinBuiltinsForKotlinCoroutinesPackagecontainsnextgetOrDefault	retainAllisEmptysetValueputAllcontainsValueaddhasPrevioushasNextcontainsAllremoveAtcontainsKeypreviousIndexaddAllremove	removeAlllastIndexOf	nextIndexclearindexOfprevioussubListlistIteratorputnotshltoBytebooleanArrayOfcharArrayOf
intArrayOf
enumValuesplussubSequencelongArrayOfenumValueOfdoubleArrayOf
unaryMinustimestoLongrangeTobyteArrayOfdivfloatArrayOfremtoShort
rangeUntilinvdec	compareTo	unaryPlustoFloatorxorushrminusshrcloneinc
emptyArrayshortArrayOftoCharequalsarrayOfandtoStringtoInthashCodetoDoublearrayOfNullsr8profilesflatDirmavenCentralregisterBindingwithArtifactsgetCredentialssetEnvironmenttimeRunnableresettimetimeCallable	executionsetComponentVersionsListersetMetadataSupplierallalwaysmaybeCreategetAt	hasPluginwithNormalizerlogNowlogAtsetPropertiesdir
attributesregisterIfAbsentdefaultImplementationinternalViewmodelfacetdefine!getCanQueryProjectModelInParallel	findModel	afterEach
beforeEachdomainObjectSetdomainObjectContainernamedDomainObjectListnamedDomainObjectSetwhenElementKnownwhenElementFinalizedconfigureEachinitializeTrackerWritercleanAfterTestingsetMaxJournalTimedeinitializesetWriterForTestinitializeIfNotPresentrunIfUsageTrackerUsabletryFlushswitchTrackFilescheduleFlush	flushImplcloseTrackFilecloseAsBrokennewTrackFilefromNamefindCompileDependencygetArtifactId	stubbable	anonymizedefaultVariantgetInactiveSourceProvidersfindVariantisInitializedgetAndroidSettingsHomegetEnvOrPropValuegetAndEnsureAndroidSettingsHomesetSystemEnvironment$setCustomAndroidPrefsRootEnvironmentsetNoEnvironmentVariablesetMapsetSingleProperty
printFilesprintAttributeprintStrings	printName	printFilewriteSourceProviderindentwriteSourceProviderstoByteArrayOfLength24isPrivatePathVariabletoPathStringIfMatchedanysortcheckPathVariableNamestartsWithVariable	isRosetta
getStringsgetFiles	finishTagtoApiVersionisNumbergetLocationunexpectedTagmissingDatagetRequiredAttributegetOptionalBooleangetOptionalOutputFilereadSourceProvidersgetRequiredFilereadSourceProvider	expectTagtoMavenCoordinategetOptionalFilegetNamegetOptionalAttributefromUrichooseEncoderupdateOffsetFromDatenanoTime+updateServerTimestampFromExistingConnectionreadDateHeaderWithHeadRequest$updateServerTimestampWithHeadRequestautoRejectConflicts	toXmlNamefromXmlSimpleNamewriteSeverityOverrideswriteVariantReferencewriteLintOptionsreadLintOptionsreadSeveritiesreadVariantReference	cloneNodecloneAndTransform	parseDateparseSettingsDatasetAndroidAttributesetManifestAndroidAttributerecordTestLibrary$applicationBinaryInterfaceFromStringparseVmOptionSizecpuArchitectureFromStringparseVmOptionisTest	getReadergetDependenciesFileNamegetLibrariesFileName	getWritergetVariantFileNameloadSettingsDatacreateNewAnalyticsSettingsDatasetInstanceForTestrunIfAnalyticsSettingsUsableisValid
daysInYearhasUserBeenPromptedForOptinresetUserIdcurrentSaltSkewwriteArtifactwriteManifestPlaceholderswriteResValueswriteBuildFeaturesreadResValuesreadBuildFeaturesreadJavaArtifactreadAndroidArtifactreadVariantreadResValuereadManifestPlaceholdersreadArtifacttoWriterreadLibrarywriteLibrarywriteDependencyGraphwriteDependencyaddDependenciesreadDependencyGraphreadGraphItem	appliesTorecursiveSizevalueOfaddToprocessDeepLinksperformPlaceholderSubstitutiongetNavigationXmlIdsconvertToDatagetDeepLinkscreateOrGetElementaddToElementInAndroidNSrecordElementInjectionActioncreateOrGetElementInManifestaddToElementrecordXmlAttributeAdditionfindDeepLinksgetDeepLinkUrisexpandNavGraphsrecordXmlElementAdditiongetDeepLinkUriBodyexpandNavGraphdeviceToHostisTruthyhostToDeviceblock	writeBytepad
writeShortwriteInt	readShortreadIntreadBytealign4	nextBlockdecodeStringdecodeStyleparseHexstringToFloatparseUnitTypestringToIntgetFlagValuefindmatchestoListserializeStyleToPbserializePluralTypeToPbserializeMacroToPbserializeArrayToPbserializeVisibilityToPbserializeReferenceToPbserializeStyledStrToPbserializeStyleableToPbserializePluralToPbserializeOverlayableToPbserializeFileRefToPbserializeConfigToPbserializeStringToPbserializeSourceToPbserializePoolToPbserializeItemToPbserializeFileTypeToPbserializeAttrToPbserializeRawToPbserializeCompiledFileToPbserializeBinPrimitiveToPbserializeReferenceTypeToPbserializeTableToPbserializeValueToPbbuildtoULongtoUShorttoUBytetoUIntdeserializeVisibilityFromPbdeserializeStringFromPbdeserializeItemFromPbdeserializePluralTypeFromPbdeserializeMacroFromPbdeserializeBinPrimitiveFromPbdeserializeSourceFromPbdeserializePluralFromPbdeserializeOverlayableFromPbdeserializeReferenceTypeFromPbdeserializeReferenceFromPbdeserializeStyleFromPbdeserializeFileRefFromPbdeserializeConfigFromPbdeserializeRawFromPbdeserializeTableFromPbdeserializePackageFromPbdeserializeStyledStrFromPbdeserializeFileTypeFromPbdeserializeArrayFromPbdeserializeAttrFromPbdeserializeStyleableFromPbdeserializeValueFromPbensureCapacityreverse
plusAssignwithLineextractPackageFromUritransformPackageAliaswalkToEndOfElementresolvePackageconstructPackageUriaddFileEntryImplwritePaddingaddResTableEntrycloseIfFinishedaddFileEntryaddXmlEntryisAlphainitFromPartsinitFromBcp47TaginitFromBcp47TagImplgetScreenTypescreenHeightDpFromScreenSizeDpisMoreSpecificThan	getLocaleuiModeFromScreenConfigappendDirLocaleuiModeNightgetBcp47LocalepackLanguageOrRegionisBetterThan%smallestScreenWidthDpFromScreenConfigmccFromImsiscreenWidthFromScreenSizecompareLocalesnavigationFromInputisLocaleMoreSpecificThandensityFromScreenTypeorientationFromScreenTypeunpackRegionscreenWidthDpFromScreenSizeDpkeyboardFromInputgetScreenSizeDplangsAreEquivalentgetImportanceScoreOfLocalelanguageFromLocalemncFromImsicompareArraysgetScreenSizehdrscreenHeightFromScreenSize
uiModeType
packRegioncreateConfigisLocaleBetterThan
layoutLongunpackLanguage
layoutSizeminorVersionFromVersionunpackLanguageOrRegionscreenLayoutFromScreenConfiginputFlagsFromInputgetScreenConfig2layoutRoundpackLanguagetouchscreenFromScreenTypescreenLayout2FromScreenConfig2wideColorGamutcolorModeFromScreenConfig2countryFromLocalegetInputsdkVersionFromVersiongetScreenConfiggetImsireadResolvetoSpanisSpanisUntranslatablerewritetoStringNotationtoStringNotationWithoutVersionareVersionsMatchinggetReversedvalidateVersionblameSourcegetOriginalSourcequietgetOutputSourcetoSourceFilePositionfromSourceFilePosition	lifecycleparseFloatHexparseFloatDec
parseFloatgetScalarShiftgetShiftgetAllRepoPackagePrefixesgetRepoPackagePrefixfindOrCreateValuemangleEntryisValidResourceEntryNameisXidContinuefindCharacterPropertiesisJavaIdentifier
isXidStart	getTypeId
getEntryIdresourceIdFromParts	isValidIdgetPackageIdisValidDynamicIdgetStyleablefindOrCreateEntryprocessAaptAttroutlineAttribute	gatherIdsprocessTextisAaptAttributeprocessCommentgetNextAttrResourceFileprocessElementreplaceVersionIfAnyapplyOnConfigPomDepparseFromVersionSetTypeIdapplyOnVersionRef	setMethod	getMethod
isInstanceuriForPrefixnamespacePrefixestryParseNullOrEmptyandroidTypeToAttributeTypeMaskparseStyleParentReferenceextractResourceNameparseReferencetryParseFloatparseXmlAttributeNameparseAttributeReferenceparseAsBoolmakeNulltryParseColortryParseItemForAttributeparseResourceId	makeEmptyparseResourceNameverifyJavaStringFormattryParseBooltryParseReferencetryParseFlagSymboltryParseIntconsumeDigitsmaskToStringhasInnerTyperemapWithNewRootTypegetParentTypegetRootTypeewvsetLeveli
encodeSpanreAssignIndicesmakeRefImplentryAtgetLengthUtf16
sortStylesflattenUtf8encodeLengthUtf16sortEntriesencodeLengthUtf8encodeHeadercontextflattenUtf16makeRefencodeStringgetLengthUtf8parseFormatAttributeshouldIgnoreElementparseFormatTypeparseFormatNoEnumsOrFlags getIntermediateContainerFilenamewriteToStringloadDefaultConfigloadConfigOrFailloadConfigFileInternalappendRulesmodgetVisibilitycompileTablecompileResource
compilePng
compileXmlcompileFilegetCompileMethodcanCompileResourceInJvmisPreprocessorOnlyIgnoreRuleisRuntimeIgnoreRuleisIgnoreRuledoesThisIgnoreProGuard	isTrivialfromDotNotationneedsExpansion
expandWith
toJavaType
compatibleisPossiblePlaceHolderEndpseudoLocalizereverseMapOrDiematchOldProguardForNewTypesgetClassMappingsfindAllTypesPrefixedWithtoComponentsconvertaddFilescanFilegenerateMapscanLibraryresourceTypeFromTagcompilationRenameextractPathDatagetFirstCharhandleEscapegetLastCharappendUnicodeEscapeSequenceendSpan	startSpangetFlattenedXmlresetTextStateendUntranslatablestartUntranslatableapplyVersionForCompatibilityisCompatibleWithpseudoGenerateExpansionprocessHtmlprocessMaybePlaceholder	isXmlFileisClassFile
isJavaFile	isPomFileisProGuardFileisNullOrEmptycontentEquals
reverseMapisTypeSupportedcreateClassRemappercreateTypesMapcreateDocumentFromByteArraycreateDependencyFromconvertDocumentToByteArrayaddStringNodeToNodefindOrCreateGroup	findGroupupdateRelativePathsetNewDataSilently
setNewDatasetIsSingleFiletoXmlElementsetAllowNewImpladdFileReferenceaddResourceMangledaddResourceImpladdResourceWithIdcreatePackageresourceNameValidatorsetAllowNewsetAllowNewMangledsetVisibilityresolveValueCollisionsetOverlayableImpl#createPackageAllowingDuplicateNamesvalidateNamefindPackageByIdaddResourceWithIdMangledsetOverlayableaddFileReferenceMangledsetVisibilityWithIdsetVisibilityImplsetOverlayableMangledsetVisibilityWithIdMangledsetVisibilityMangledfindOrCreatePackageaddFileReferenceImplskipNameValidatorfindPackageparseOverlayableparseAddResourceflattenXmlSubTreeextractResourceparseStringparsePoliciesFromElementparsePublicparsePluralparseStyleItemparseSymbolImpladdResourceToTable
parseArrayparseStyleImplparseAttrImpl	parseItemparseConfigVaryingparseEnumOrFlagItemparseArrayImplparseSymbol
parseStyleextractResourceValuesparseIntegerArrayparseOverlayableItem
parseMacroparseStringArrayparsePublicGroupgetPackageForsumpseudolocalizeIfNeededmodifyForLocaleconsumeisPseudolocalizableshiftmapPackageNamemapValuescanArchiveForPomFilewasErrorFoundfinishTextState
addCommentaddNamespaceDeclarationaddTextfindAttributesaveBackToFileIfNeededlogDocumentDetailsgetAsPomDependencytryRewriteOwnArtifactInfoloadFrom
applyRulesshuffledapplyReplacers	writeSelfaddItemextractFilecopySelfFromOriginToTarget
removeItemextractArchivesetTargetPath	isArchivewriteSelfToFilepseudolocalizeBasicStringpseudolocalizePluralpseudolocalizeStyledString
mergeSpansrunReplacementsrewritePath&tryResolveWildcardsAndRemapAndSimplifyreplaceMethodArgsreplaceTypegenerateProguardRulesFromTypeparseWideColorGamutparseMccparseUiModeTypeparseScreenSizeparseScreenHeightDpparseOrientationparseVersionparseUiModeNightparseScreenWidthDpparseDensityparseScreenLayoutLongparseKeyboardparseNavigationparseMncparseScreenLayoutSizeparseKeysHiddenparseNavHiddenparseSmallestScreenWidthDpparseTouchscreenparseHdrparseGrammaticalInflectionparseScreenRoundparseLayoutDirectionmaskAndApplyrewriteBodyGrouprewriteClassFilterreplaceTypeInClassFilterjetifySourceFiletransformSourcekeyOfisSignatureFiletryMergeFilesInArchivemergeAnnotationFilescartesianProductcartesianProductInternalgetModifiedTimetoConfigisEligibleForRewriteInternal	setNewMapfromOptionalisEligibleForRewrite#reportNoProGuardMappingFoundFailure"reportNoPackageMappingFoundFailurereportNoMappingFoundFailureerrorsTotal
getCharsetrewritePackagereplaceWithPatterns!tryToRewriteTypesInAnnotationFilerewriteAnnotationsXmlPath	isPackagenextByte	nextShortisNewDependencyFile	transformscanPomFilesfilterOutLibrariesWithAndroidXcreateSLTransformerscreateProcessortransformLibrarycreateProcessor3createProcessor4loadLibrariescreateProcessor2getDependenciesMapisOldDependencyFiletransformPomFilesrunSignatureDetectionFor
transform2createTransformersfilltoTypedArray
writeImage	readImagegetApiNameAndDetailsgetFullReleaseNamegetFullApiNamecomputeApiNameAndDetailscomputeFullApiNamegetReleaseNameAndDetailscomputeFullReleaseNamecomputeReleaseNameAndDetails
nonClosingarg
fromTargetfromKindregisterAssembleTaskfromVersionfindIgnoringCasetoCompilerArgfindLocalName
findPrefixannotationProcessorsjavacOptionsgetJavacOptions
setModulescreateArtifact	addModule
fromPolicy	FrameworkLibraryFatFrameworkXCFrameworkcustomhasSubFolderisSdkRootWithoutDotAndroidvalidateAndroidSdkHomeValuefirstPathOfgatherPaths	queryPathsinglePathOfbinaryOptionmodescreateForHomeLocation combineLocationValuesIntoMessageexplicitApiWarningexplicitApiresetPathsForTestcomputeAndroidFolderprogressReaderpostProgresscreateLinuxBehaviorcreateWindowsBehaviorgetExecutableExtensionsgetEnvironmentPathscreateOsBehaviorremoveExtensionIfPresentfirstIndexOfNameendsWithIgnoreCasestartsWithIgnoreCaseareEqualIgnoreCasenameWithoutExtension	extensionhasExtensionIgnoreCasefilenameStartsWithIgnoreCaseindexOfExtensionDotfilenameEndsWithIgnoreCaselastIndexOfNameassignPropertyValuegetRule
assignRulestreamUnescapedNinjastreamNinjaBuildTokensstreamNinjaStatementscompilerOptions	setSourcesafeTypefromPropertystreamNinjaBuildCommandsmapEachjoinToCamelCaseAsVarjoinToCamelCasegetPropertyexpandWithResponseFileclassifyLine
regexFieldregexFieldOrNulldeconflictSourceFileswriteCompileCommandsJsonBin
stripFlagsisToolchainTooltoClassName	classSpecparameterSpecconstructorSpecparseLayoutClassName
methodSpec	fieldSpecversionedLazybrtoCamelCaseAsVarparseXmlResourceReferencecleanLazyPropsdecapitalizeUSstripNonJava
toTypeNamesplitTemplateParameterscapitalizeUS
toJavaCodelazyProp
getByValuelistAndSortFilessendCurrentapplyLockedOutputFileMessage"makePathRelativeToWorkingDirectory	glslcArgsglslcScopedArgsstringOrNullintbyteisEndOfMessagesstringListOrNullavailableForembedBitcodeensureAtLeastencodeLongZero	encodeIntencodeMagicwriteCompileCommandwriteSectionIndexEntry
encodeUTF8flushBuffer
encodeBytefromAbsoluteFilefromRelativeFilecodeTransparencystoreArchivelanguage	ellipsizetoCommaSeparatedListstreamCompileCommandsindexCompileCommandsreadStringTablestripArgsForIdehasBug201754404readUTF8 readCompileCommandsVersionNumberreadStringListsTablepositionAfterMagicAndVersionseekSection#compileCommandsFileIsCurrentVersionstreamCompileCommandsV1extractFlagArgumentignoreExternalDependenciesignoreAllExternalDependenciescompilerOptspackageNameincludeDirsheaderdefFileheaderFilterOnly	extraOptsheaders
allHeaders
linkerOptsmavenPublicationcreateTargetlanguageSettingsaddCustomSourceFilesExtensionsrequiresVisibilityOf	dependsOnvcsInfopostprocessingaddCompilerPluginDependencycreateKotlinJvmOptionsregisterKotlinJvmCompileTaskcreateCompilerJvmOptionsregisterKaptTaskgetCompilerPluginsregisterKaptGenerateStubsTasksetupAttributesMatchingStrategy
doNotStrip	pickFirstmergedextoMillisAndNanossleepbyArgumentOrNull
byArgument
allOptionsgetAsTaskInputArgsaddPluginArgumentcomputeForSubpluginIdqualifiedNamedefaultSourceSetsingleVariant"testInstrumentationRunnerArgumentssetTestHandleProfilingvectorDrawables!testInstrumentationRunnerArgumentsetTestFunctionalTest%setTestInstrumentationRunnerArgumentssetMinSdkVersion
resConfigs	resConfigminSdkVersiongetLayoutsThatDependOngetDependenciesgetAndUnwrap
isShutdownqueueProcessorawaitTerminationshutdownisTerminated
addMappingfromInputStreamcreatePackageInfoLogmappingscompatibleScreenscancelrefreshgetBareLayoutNamesaveLogfailureRetention	unitTestsremoveJsCompilerSuffixinstallOptionsbaselineProfile	keepRuleswarnNpmGenerateExternalsreadClassDescriptorenableLanguageFeatureoptIn
textOutput	checkOnlybaselineinformationalenablesetDimensiontargetCompatibilitysourceCompatibilitysetTestProguardFilessetConsumerProguardFilesapiexecuteWithRetriesgeneratedDensitiesadditionalParameters
noCompressaidlbaselineProfilesrenderscriptassetsmlModelsresrenderConfigurationJavadocwithMacosArm64withWatchosX86	withApplewithWasmwithAndroidNativeX86withJs	withMacoswithLinuxMips32excludeSourceSetTreeexcludeCompilationswithAndroid
withIosX64withCompilationswithAndroidNativeArm32filterCompilations
withWasm32withWatchosDeviceArm64withLinuxMipsel32withTvosX64withMingwX64withAndroidNativeArm64withLinuxArm64withLinuxArm32HfpwithMacosX64withoutCompilations
withNativewithAndroidTargetwithWatchosArm64withMingwX86withTvossourceSetTrees	withMingwwithTvosArm64commonwithAndroidNativewithLinuxX64withWatchoswithWatchosX64withTvosSimulatorArm64groupwithIosSimulatorArm64withAndroidNativeX64withIosArm32withIosArm64	withLinuxwithIoswithWatchosArm32withWatchosSimulatorArm64withJvmwithSourceSetTreebuildFeaturessplits
adbOptionsjacocoviewBindingandroidResourcesbuildToolsVersionpackagingOptionsdefaultConfigproductFlavorssigningConfigslintOptionsflavorDimensionsgetDefaultProguardFilereleasetestOptions
buildTypesdataBindingcompileOptionscomposeOptions
sourceSetscompileSdkVersionaaptOptionstestCoverageandroidTestasCodegeneratedClassInfo
toJavaFilevisitAttributessubtagsvisitElementssubtagCountchildrenIteratorsubtagfilesKotlinTargetHierarchyDescriptorgetPluginArtifactgetCompilerPluginIdisApplicablegetPluginArtifactForNativeapplyToCompilationtypeSpecrootViewGetteroneParamInflatethreeParamInflaterootViewFieldmergeInflateconstructorbindingFieldsasViewReferencebindusLocaleCapitalize	toStringsappendCapitalizedtoSystemLineSeparatorappendCamelCasetoLineSeparatorcombineAsCamelCaseusLocaleDecapitalizecapitalizeAndAppendannotationProcessorOptionstoViewBindertoResourceReference validateExplicitViewBindingTypesparseRootNodeisBindingExpressionisDefaultGradleBuildFileisGradleSettingsFilefindGradleSettingsFilefindGradleBuildFileisGradleScriptgetScopeNames	fieldNamegetUsedNamesgenerateImplInfoindexFromTag
getterName
setterNamelayoutConfigurationMembershipgetUniqueNamebuildConfigFieldresValuejavaCompileOptionssetManifestPlaceholdersaddManifestPlaceholdersndkcreateStaticInflatersgenerateClassInfocreateBindingTargetFieldscreateGettersAndSetterscreateVariableFieldswithResourcesassociateWithNotNullassociateByNotNullassociateNotNullmapValuesNotNullcomputeIsRosettaarchitectureFromString!allocateTokenizeCommandLineBuffer&minimumSizeOfTokenizeCommandLineBuffernextTokenAfterisEndOfCommandisEndOfTokenzeroAllocTokenizePOSIXtoTokenListcheckGenerationnormalizedCommandLineLength	bothSlashzeroAllocTokenizeWindowstokenMatchestokenStartingAtremoveTokenGroup	removeNthisStartOfToken$computeNormalizedCommandLineHashCodenormalizedCommandLineEquals"androidVersionFromDevicePropertiesisDependentTaskOutOfDateinconsistentViewBindingTypeviewBindingTypeInIncludeTagisFragmentTagvisitGradleCoordinateUpgradevisitPackagevisitGradleCoordinategetFieldNameByResourceName
setSrcDirssrcDirssrcDirargumentcompilerArgumentProviders
classNames	classNamecompilerArgumentProviderhackConvertparseAbiFromHashcomputeVersionStringcomputeVendorStringparseVendorFromHashcomputeSystemImageHashFromDslparseApiFromHashisTvOrAutoSourceisTvOrAutoDeviceparseMigrationFilerewriteManifestNoderewritePossibleReferencegenerateAllextractSupportextractAndroidXtoCompatextractFromandroidLibrary	getByNamegetExtensionfileListToStringstringToBooleanstringToFileListcomponent21component20readFromOptionsbooleanToStringcomponent13parseDirectDependencyPackagescopyAsV1component16component17component14component15component18component19addMetadataFileregisterPreBuildfinalizeDsl	setConfigwithNamesetSigningConfigextendProductFlavorWithextendBuildTypeWithextendProjectWithmakeResValueKeyprojectExtensionproductFlavorsExtensionsbuildTypeExtensionaddGeneratedSourceDirectoryaddStaticSourceDirectorytoAppend	toReplacetoGetgetBuiltArtifactsLoaderforScopedataTypetoCreate
toAppendTowiredWithFiles	wiredWithwiredWithDirectorieswiredWithMultipletoTransformManyregisterDeviceTyperunTestsloadClassDatasetSetupActionssetTestRunActionscreateClassVisitorisInstrumentablercbetaalphadev createKotlinDslWorkspaceProvidersubWorkspacevisitInnerClassvisitAttributevisitSourcevisitOuterClassfileHeaderForcompileKotlinApiExtensionsTogenerateApiExtensionsJartypeForInternalNamesingleAbstractMethodOfisSignificantDeclarationclassNodeForopen
apiTypeForallTypesvisitFormalTypeParametervisitInterfaceBoundvisitTypeParameterBoundvisitClassBoundgradleApiJarsFrom#writeGradleApiKotlinDslExtensionsTovisitBinaryNamevisitBaseTypevisitTypeArgumentboundOfvisitParameterTypevisitReturnType writeBuiltinPluginIdExtensionsTopluginEntriesFrompluginExtensionsFromisGradlePluginPropertiesFile pluginIdExtensionDeclarationsFortoDeclarationStringsingleTypeArgumentStringOftoArgumentsString&builtinPluginIdExtensionsSourceFileForgeneratedSourceFilesourceFilesFor!gradleApiExtensionsSourceFilesForsourceFileNamecompileExtensionsTo
tempDirForapiFunctionParametersForapiTypeUsageForReturnTypeapiTypeParametersForbinaryNameOfInternalNameapiTypeProviderForapiTypeUsageForhassourceNameOfBinaryNamebinaryNameOfBaseTypehasJavaClassgroovyNamedArgumentsToVarargsjavaClassToKotlinClassrelativeSourcePathOf
apiTypeKey&generateKotlinDslApiExtensionsSourceTotoTypeParameterStringcandidatesForExtensionFromgroupedByTargettoKotlinClasswriteExtensionsTotoTypeArgumentString%kotlinDslApiExtensionsDeclarationsFor%singleTypeArgumentRawToStarProjection$sortedWithTypeOfTakingFunctionsFirsttoCollectionOfKotlinClassestoTypeParametersStringsignatureKeynewMappedParameterstoArrayOfKotlinClasseskotlinExtensionFunctionsFortoTypeArgumentsStringjoinInAngleBracketstoKotlinNullabilityStringisCandidateForExtensionrawTypesToStarProjectionsgetRequestedCapabilitiescapabilities	getReasonversion
isChangingisEndorsingStrictVersionsgetAttributesgetExcludeRulesdoNotEndorseStrictVersionssetChangingmatchesStrictlygetTargetConfigurationartifactisTransitivesetTargetConfigurationisForcebecausegetVersionConstraintaddArtifactgetIdendorseStrictVersions
isParentOfappendReproducibleNewLineuserHomelistFilesOrdereduseToRunrootProjectaddProjectEvaluationListenerremoveListenerbeforeSettingsgetSharedServicesaddBuildListeneraddListenerbuildFinishedgetIncludedBuildsgetGradleUserHomeDirsettingsEvaluated	useLoggerbeforeProjectafterProjectgetTaskGraphincludedBuildremoveProjectEvaluationListenergetGradleHomeDirgetGradleVersionprojectsLoadedcaches!getDependencyResolutionManagementsourceControlenableFeaturePreviewincludeBuildgetSourceControldependencyResolutionManagementgetSettingsgetToolchainManagementincludeFlatgetSettingsDirgetPluginManagementtoolchainManagementgetBuildCache	getCachesuncheckedCastuppercaseFirstCharnormaliseLineSeparatorsexcludeMapFormapOfNonNullValuesOfcreateImplicitImportscreateArtifactResolutionQuerygetConstraintsgetArtifactTypesgetAttributesSchema
getModules	variantOfaddProviderConvertibleartifactTypesaddProvider	gradleApilocalGroovymodulesattributesSchemagradleTestKit
onProgress
unsafeLazyillegalElementTypeinternalErrorgradleKotlinDslImportsgradleImports	loggerFortracewalkReproduciblynormalisedPathRelativeTozipTounzipEntryTofileEntriesRelativeToprojectInternalkotlinScriptTypeForendKotlinClassnewPropertyOfnewValueParameterOfproviderConvertibleOfStarbeginFileFacadeClassHeaderpublicStaticSyntheticMethodmoduleMetadataBytesForcloseHeaderaddKmPropertypublicKotlinClassactionTypeOfnullablegenericTypeOfwriteFileFacadeClassHeaderjvmGetterSignatureFornewFunctionOfnewOptionalValueParameterOfmoduleFileFornewTypeParameterTypeOfnewClassTypeOfproviderOfStarvisitKotlinMetadataAnnotationnewTypeParameterOffileOperationsForcreateObjectConfigurationActionapplyObjectConfigurationAction executeObjectConfigurationAction
findByPath	getByPathwhenTaskAddedisGradleKotlinDslJarisGradleKotlinDslJarName defaultKotlinScriptHostForGradle"defaultKotlinScriptHostForSettings!defaultKotlinScriptHostForProject&createEmbeddedKotlinRepositoryProviderLDCRETURNNEWARRAY	CHECKCASTDUPpublicDefaultConstructorpublicClassPOPbeginPublicClassINVOKESPECIALALOADACONST_NULL	TRY_CATCHGETFIELD	GETSTATICARETURNPUTFIELDGOTOvisitTypeInsnNEWINVOKEINTERFACEINVOKEVIRTUALvisitMethodInsn_BASTOREASTORE
beginClassICONST_0INVOKESTATICpublicMethodendClassloadByteArraykotlinDeprecationforNameforFilepinEmbeddedKotlinDependenciesOnaddDependenciesTokotlinModuleVersionNotationForkotlinModuleNotationForapiDeclarationFromparameterNamesFromloadPropertiesOrNullpatternSpecForparameterNamesSupplierForparameterNamesResourceNameFor
apiSpecForgradleApiMetadataFromnestedClassNameForcandidateClassFiles nestedClassFilePathCandidatesForkotlinSourceNameOfclassPathBytesRepositoryForclassFilePathCandidatesForsourceNamesFromDirsourceNamesFromJarclassBytesForclassBytesSupplierForSourceNamedirectoryClassBytesIndexForclassBytesIndexForclassBytesSupplierForFilePathallClassesBytesBySourceNameloaderClassBytesIndexForsourceNamesFromjarClassBytesIndexForopenJarFilesyncgetDescriptionsetGroup	setStatusgetSubprojectsnormalization
getObjectsgetProjectDirgetDependencyFactoryantprovider	getStatussubprojectsbeforeEvaluatecreateAntBuildergetTaskshasPropertygetBuildFilegetDepthabsoluteProjectPathgetStategetConventiongetAntgetPropertiesgetAllprojectsrelativeProjectPathgetDefaultTasksgetAllTasksdepthCompareevaluationDependsOnChildrenevaluationDependsOn	getLayoutfindPropertysetBuildDirgetTasksByNamegetNormalizationsetDefaultTasksgetChildProjects
getProjectinvalidPluginsCallversionCatalogExtensionerrorAt
lineNumbererrorMessageindentedErrorMessagestraverseAncestorsfoldHierarchytraverseHierarchywithCompilationExceptionHandlersetModuleNameaddScriptingCompilerComponentsaddScriptDefinitionwithMessageCollectorForredirectingOutputTodisposeKotlinCompilerContextcompileKotlinScriptToDirectoryonCompilerWarningsForignoringOutputOfcompileKotlinScriptModuleToclickableFileUrlForcompilerMessageForwithRootDisposablekotlinCoreEnvironmentForredirectingmessageCollectorForcompilerConfigurationForloggingOutputTocompileToDirectorytoKotlinJvmTargetversionCatalogForPluginsBlock#createKotlinCompilerContextDisposercreatePluginRequestsHandler%createClassPathModeExceptionCollectorversionedJarCacheFor#createKotlinScriptClassPathProvidercreateKotlinScriptEvaluatorcreateCompileClasspathHasher#createKotlinScriptClassloadingCacheclassPathOffileFromhandleinLenientModeinClassPathModegetExportedPackageskotlinScriptOptionscollectScriptPluginFilesOfenableOnhierarchyOfclassLoaderHierarchyJsonForisKotlinJargradleKotlinDslJarsOfkotlinScriptClassPathProviderOfgradleKotlinDslOffileCollectionOftoURIgradleApiJarsProviderForawaitcomputeCompilationClassPathgenerateAtomicallyexportClassPathFromHierarchyOftempFileForproduceFromgradleKotlinDslExtensionsgradleKotlinDslJarsprogressLoggerFor
classesDirvisitClassPathPropertyworkOutputForcompactStringFor"defaultLocationAwareHintMessageFor	subDirsOfregisterSourceDirectoriesunzippedDistroDirunzippedSubProjectsDirsourceRootsOfbuildSrcRootsOfgradleInstallationSourcessourcePathFordownloadedSourcesbuildSrcRootsFallbackForclassPathBlocksHashOfselectNextActionForsameClassPathBlocksHashAsclassPathBlocksHashForstringForExceptionsprettyPrintindentationStringForstringForExceptionprettyPrintAnywithOptionsprepareClassLoaderScope!setupEmbeddedKotlinForBuildscriptexecutionEngineFor	stringMaptakeNextGroup	nextGrouplogDirForOperatingSystembufferedAppendWriterdaysAgo	outputDircleanupLogDirectorytimestampForFileNamereadyForCleanupsupersededRequestsFrom	resumeAllfetchscriptModelFortoVersionRangedetachedConfigurationFordependencyVersion(transientConfigurationForSourcesDownloadcreateSourceRepositoryrepositoryNameForminimumGradleVersionregisterTransforms
isSnapshotgradleSourceDependencyuseGradleFromhasProjectDependentClassPathtoFetchParametersWithprojectRootOfnewCorrelationIdfetchKotlinBuildScriptModelFrombuildSrcProjectDirOfconnectorForfetchKotlinBuildScriptModelForconnectionForProjectDirmodelBuilderFor$assembleDependenciesWithShortCircuitscriptModelRequestFromassembleDependenciesFromdependenciesFromgradleInstallationFromtoIdePositiontoIdeSeverityeditorReportaccessorSourceFragmentsForprintAccessorsForregisterGradleUserHomeServicesregisterGradleServicesregisterBuildServicesregisterGlobalServicesprintExtensionsschemaOfpluginTreeForGroupconventionPluginOfexternalModuleDependencyForextensionOfaddExternalModuleDependencyToaddDependencyToaddConfiguredDependencyToconventionPluginByNameconventionOffunctionToActionconfigurationAccessorSpecemitClassForwriteAccessorsBytecodeTomakeAccessorOutputDirssourceFileForemitAccessorsForaccessorsForaccessibleTypehasDeclarationDeprecations#inaccessibleExistingTaskAccessorFor-accessibleExistingContainerElementAccessorFor!inaccessibleConventionAccessorForescapeStringTemplateDollarSign/inaccessibleExistingContainerElementAccessorForisKotlinIdentifieraccessorNameSpecisLegalAccessorName inaccessibleExtensionAccessorForconventionAccessor!accessibleExistingTaskAccessorForaccessibleConventionAccessorForexistingTaskAccessordocumentInaccessibilityReasonstypedAccessorSpecextensionAccessor existingContainerElementAccessoraccessibleExtensionAccessorForstringLiteralFortargetTypesOfuniqueAccessorsForuniqueAccessorsFrom'createProjectAccessorClassPathGenerator,createStage1BlocksAccessorClassPathGeneratorkotlinTypeStringFor	schemaForgetOrCreatePropertywriteClassFileTohasTypeParameterkotlinVisibilityForaccessibilityForTypeloadAccessibilityInfoForhasTypeParametersaccessibilityInfoForinaccessibilityReasonsForisNonPublicKotlinTypeclassLoaderScopeOf	nonPublichashCodeForavailableProjectSchemaFor&warnAboutDiscontinuedJsonProjectSchemafileHeaderWithImportsForbuildAccessorsForclassNamesFromTypeStringwriteAccessorsTotypeErasureputAllSorted
accessiblenonAvailableinaccessible	syntheticconfiguredProjectSchemaOfprojectAccessorsClassPathbuildAccessorsClassPathForstage1BlocksAccessorClassPathbaseClassLoaderScopeOfgenerateVersionCatalogAccessors#generatePluginSpecBuildersAccessors"pluginsBlockFactoryInternalNameFor pluginsBlockFactorySourceNameFor#emitVersionCatalogAccessorMethodForbuildVersionCatalogAccessorsFor*appendSourceCodeForVersionCatalogAccessors(writeVersionCatalogAccessorsSourceCodeToversionCatalogAccessorFrom!publicStaticMaybeDeprecatedMethodinvokeRuntimekotlinNameOfinvokeActioninternalNameForAccessorClassOfaccessorDescriptorForinternalNamefragmentsForConventionfragmentsForConfigurationfragmentsForContainerElement getDeclarationDeprecationMessageloadConventionOfinvokeDependencyHandlerAddclassOfquotefragmentsForTaskgetDeclarationDeprecationBlockfragmentsForfragmentsForExtensionfragmentsForContainerElementOfaccessibleTypesForpluginTreesFrom'writeSourceCodeForPluginSpecBuildersFor.writePluginDependencySpecAccessorsSourceCodeTorunEach%buildPluginDependencySpecAccessorsFor$pluginImplementationClassesExposedByemitClassForGrouppluginSpecsFrompackagePrivateField0appendSourceCodeForPluginDependencySpecAccessorstypeSpecForPluginGroupType
GETPLUGINSpluginGroupTypeNamepluginDependenciesSpecOf pluginDependencySpecAccessorsFor)emitPluginDependencySpecAccessorMethodForskipWhiteSpaceAndCommentslexsingleBlockSectionOrNulltopLevelBlockparseQualifiedNameparenstatementSeparatorbracewsOrNewLinenotWhiteSpaceskipWhitespacebrackettoken
hasNewLinescriptHostForserviceRegistryForprogramHostForstartCompilerOperationForinstantiateemitSpecializedProgramForevalprogramTargetForlineNumberOfsubTextpreservecomplementOf$maybeUnwrapInvocationTargetExceptionwithContextClassLoadertemplateIdForlogClassLoadingOfclassLoaderScopeIdForlocationAwareExceptionForlogCompilationOf!locationAwareExceptionHandlingFor"withLocationAwareExceptionHandlingcheckForSingleBlocksOfrangesToEraseblockAnnotations
programForbuildscriptIdFortopLevelBlockIdForcheckForTopLevelBlockOrdersingleSectionOfhandleUnexpectedBlockfragmentloadSecondStageForloadScriptResourcereduceEmptyProgramdefaultStageTransitionreduceBuildscriptProgramoptimizedPluginsBlockoptimizestage1WithPluginManagementstaticlogUnoptimizedreduceStagedProgramreduceScriptProgramreduceStage1ProgramfragmentHolderSourceForstage1WithPluginsscriptFileNameForwithTemporaryScriptFileForcanonicalScriptFileForeitherorMorezipMoptional	reference	oneOrMorelinePreservingSubstringlineAndColumnForlinePreservingSubstring_splitIncludinglinePreservingBlankRangeslinePreservingBlankRangelineAndColumnFromRange&emitInstantiationOfCompiledScriptClassloadHashCodeemitPluginRequestsloadTargetOfemitEvaluateSecondStageOf+emitPluginRequestCollectorGetPluginRequestsrequiresSecondStageAccessorsemitDynamicProgramstoreStringToResourceemitApplyPluginsTo overrideGetSecondStageScriptTextoverrideLoadSecondStageForemitOnScriptExceptionwriteResourceFile$emitCollectProjectScriptDependencies
outputFileemitCompiledPluginsBlockemitStage2ProgramForemitApplyEmptyPluginRequestsTo#emitAccessorsClassPathForScriptHost'emitPluginRequestCollectorInstantiationemitEvalmightBeLargerThan64KBcompileStage1implicitReceiverOfemitemitApplyBasePluginsToemitApplyPluginRequestsoverrideExecuteprogramcompilePlugins
invokeHostemitSetupEmbeddedKotlinForinvokeApplyPluginsToemitStaticProgram'emitPluginRequestCollectorCreateSpecFor compiledScriptClassInstantiationcompileScriptemitStage1SequenceemitCloseTargetScopeOf	interpretfindRefiningFragmentsvariantsContainingFragment#nativeMetadataCompilationPluginDataplatformCompilationPluginDatametadataCompilationPluginDataIdeaKpmProjectContainergetChosenVariantpluginDataOrNullcommonPluginArtifactnativePluginArtifactresolveDependencyGraphfromMatchingVariantsjavaIoSerializable	normaliseresolvedSharedApiClassesClassLoader&IdeaKotlinExtrasSerializationExtensionWeakInternerInterner renderReifiedTypeSignatureStringwithLockIfAnysetToCliCommonizerextrasTypeOf	withValuetoExtrasextrasOfextrasKeyOftoMutableExtrasemptyExtrasmutableExtrasOf
getSettingparseCommonizerDependency'parseTargetedCommonizerDependencyOrNullclosurecreateResultSetwithClosurewithLinearClosurelinearClosure	closureTocreateDequeueFromIterablecreateDequeueKotlinToolingVersionKotlinToolingVersionOrNulltoKotlinVersiontoKotlinToolingVersion isCommonizerTargetIdentityString
base64HashensureMaxFileNameLengthresolveCommonizedDirectorydebugReference	allLeaveswithAllLeavesCommonizerTargetextrasLazyPropertynullableLazyPropertylazyPropertyextrasReadPropertyfactoryPropertyextrasReadWritePropertyextrasNullableLazyPropertyextrasFactoryPropertytokenizeIdentityStringbuildCommonizerTargetparseCommonizerTargetOrNullanyOfparseCommonizerTargetreportInternalCompilerErrorprocessCompilerOutputparseCompilerMessagesFromReadersafeParseInt
charactersreportToCollectorexitCodeFromProcessExitCodenewDaemonConnectionparseIntOrDefaultprocessNewLines	toPathMapenumValueOfOrNullenumValueOfOrDefaultmultimapWithSingleKeyOf
multimapOftoPathTreeMappathTreeMapOfadvance	openerFormountunmountgetOrCreateEntryfindMostSpecificEntryisSameAsDeviceWithisMdnsAutoConnectTlsareForSameDeviceisMdnsAutoConnectUnencryptedgetLanguageschooseSeparatorwithSeparatortoPathStringsgetUricreateRootUriisSeparatordetectSeparator
countUntiltoPathStringOrNullprefixLength
relativizewithoutTrailingSeparatorcomputeNameStarttoDebugStringsubRangeOrNullsubRange	driveNamesegmentsubpath
sameRootAscompatibleRootsgetSourcePathgetLineNumbergetColumnStartgetColumnEndgetMessageTextwriteRedirectgetListingFilemaybeExtractRedirectedFilegetBaselineProfileFilereadPropertiesconvertToRelativePathloadListFromFiletoMutableFontDetailgetItalicStyleNameSuffixgenerateQuerygenerateStyleNamegetWeightStyleName	getFiltergetAbiPreferenceOrderversionCodeDiffcomputeBestArtifactisMainApkCompatibleWithDeviceparseItalicsaddProtocolfindBestMatchfindFont
mergeFontsfindOnlyKnownProviderfindProviderlazyLoadfontsLoadedloadDirectory	loadFontsisAssignmentOverloadEnabledcreateAsyncIOScopeFactorypokefuturewithSynchronousIOwithAsynchronousIOpoll
parseWidthparseDownloadableFontvalidcheckIdexpectparseV11parseFontNameparseV12parseWeightSynonym	parseItalcheckNumberPrefixparseItaliccreateResultparseFontAlternativeweightparseWeightparseFontStyleparseWeightNumberparseBestEffortparseNearestparseBoldItalic
parseExactisDonetoPositiveLongOrNullscriptResolverEnvironmentOf"defaultImportsForPrecompiledScriptpublicInlineFunction	withClassextractApiClassFromimplicitImportsForScript"precompiledScriptPluginImportsFromimplicitImportsFromhashOfNormalisedStringgetNormalizer
nextPrefixprefixInfimumprefixVersionextendedParts
createPartdoParseextractInlineFunctionswriteMethodisInlineextractFunctionMetadataparseKotlinClassHeader
writeClassextractInternalFunctionswriteClassAnnotationsbinarySignature
isInternalpropertyDelegateFordynamicObjectFor
dependencyspanisConnectedgapvalidUpperBoundForMavenRangelowerEndpointencloseshasUpperBoundparseSingletonRangeisPrefixRangewithoutUpperBoundisSingletonRangevalidLowerBoundForMavenRangeupperBoundTypehasLowerBoundintersection
emptyRange	canonicalparseMavenRangelowerBoundTypeparsePrefixRangeupperEndpointaccepts
closureForwithConventiongetPluginByNamealiasgetInitscriptwithGroovyBuilder	closureOfdelegateClosureOfcannotGetExtraProperty	classpath
consumabledetachedConfigurationdependencyScope
resolvableembeddedKotlinmavengradleKotlinDslconfigureClientModule
sequentialconstantwriteCurrentStyleableparseResourceForInlineResourcescheckForResources
getMessageparseValuesResourcegetMandatoryAttr%getDeclaredAndReferencedResourcesFrom!getResourcesFromExplodedAarToFilegetResourcesFromDirectoryparseResourceSourceSetDirectoryaddIfNotExistinggetNameWithoutExtensionsparseResourceDirectoryshouldBeParsedparseResourceFileparseAarZipEntrybuildEscaperaddAllIfNotExistgetSymbolByResourceTypetablePackagebuildercontainsSymboladdFromPartialgetSymbolByVisibilitymergePartialTables%maybeGetStyleableParentSymbolForChildaddFromPartialHelperrenamewithValuesFromcanonicalizeValueResourceNamerTxtToSymbolTable"generateKeepRulesFromLayoutXmlFileparseMinifiedKeepRulesgenerateKeepRulesgetPackageNameFromManifestgenerateKeepRulesFromXmlNodevalueStringToIntreadAarRTxtvisitEmptySymbolTablegenerateMinifyKeepRulesfailParseArrayLiteralparseArrayLiteralmergeAndRenumberSymbolsescapeCharacterReferencescreateEscapingContentHandlerstripUnescapedQuotesshouldUnescapeCharAtgetReplacementcreateUnescapingContentHandlercontainsEscapedCharAtunescapeCharacterReferences#unescapeLeadingQuestionMarkOrAtSignunescapeCharsunescapecreatingregisteringgetResourcesFromWebUrlrecordKeepToolAttribute#getResourcesForKeepOrDiscardPatterngetResourceMapsdumpKeepResourcesrecordDiscardToolAttributedumpReferencesgetResourcesFromUrlprocessToolsAttributesgetResource
dumpConfigserializeIntodumpResourceModelresourceNameToFieldNamecolorToStringWithAlpha
parseColorfindUnusedResourcesfileNameToResourceNamestripPrefixFromIdcolorToString#isInvalidResourceFieldNameCharactertoFileResourcePathStringexisting	isIgnoredcanContainAll"relativeResourcePathToAbsolutePathmergeIdentifiedSourceSetFilesreadFromSourceSetPathsFilegetRelativeSourceSetPathgetIdentifiedSourceSetMapwriteIdentifiedSourceSetsFileisRelativeSourceSetResource
getLocalesgetConfiguredValuegetConfiguredResources	dumpTracegenerateLocaleStringwriteSupportedLocalesmergeLocaleLists%generateLocaleConfigManifestAttributevalidateLocalegenerateLocaleListwriteLocaleConfigreadResourcesPropertiesFileaddToAntBuildercopyRecursivesetExtendsFrom&getTaskDependencyFromProjectDependencydefaultDependencieswithDependenciesextendsFromfileCollectionresolutionStrategyoutgoinguseRelativeSourcePathgmsAndFirebaseStabilitystabilityOfsupportLibStabilitykotlinStabilityOfcreateSymbolcreateStyleableSymbolnormalSymbolvalidateSymbolstyleableSymbolattributeSymbolfindData
expirationgetDependencyhasAndroidxEquivalentisAndroidxPlatformLibraryforCoordinategetComponentgetCoordinateisAndroidxLibraryparseStabletoIsSnapshotparsePreviewStringfromPreviewTypeAndIsSnapshottoPreviewTypetryParseStableisAtLeastIncludingPreviewscompareIgnoringQualifiersisTwoDigitPreviewFormatinitializeIndexgetPackageMap	getGroupsgetSnapshotVersionFilterreadMasterIndexloadCompileDependenciesreadCompileDependencyfindCompileDependenciesgetVersionsfindArtifactreadGroupData
hasGroupId"readCompileDependenciesFromPomFilegetAgpVersionsfindVersionisCommonDomainpickPluginVariableName	toSafeKeycutDomainPrefixgetGroupPrefix	keysMatchpickVersionVariableNamemaybeLowCamelTransformpickLibraryVariableNamegenerateWithSuffix
isAndroidXpickPluginVersionVariableNametoSafeHyphenKeygetAliasStyleparseColorValuegetCoordinateFormatneedsOverrideWidthneedsOverrideAlphaneedsOverrideHeightneedsOverrideTinttintRgbasResolveFailuregetCanonicalPathgetScriptContentsgetEnvironment"loadContentsAndResolveDependenciesannotationTypeconvertPosition,collectDescriptorsFromDestructingDeclarationgetVariableNamesgetNonDeclaredPropertiesresolvePrimaryConstructor0createPropertiesFromPrimaryConstructorParametersconstructAnnotationorAnonymousevaluateToConstantArrayValueadjustByDefinitiongetAnnotationEntriesgetScriptCollectedData	constructgetVirtualFilemakeScriptContentsoffsetToPosition$refineScriptCompilationConfigurationresolveImportsToVirtualFilesadditionalClasspathloadAnnotationstoKtFileSourceunwrapgenerateSyntheticClassesresolverFromAnnotationinstantiateResolvergetResolveFunctionstakeUnlessErrorgetScriptProvidedProperties%getEarlierScriptsConstructorParametergetPrioritygetImplicitReceiversresultFieldNamecomputeSupertypes%getScriptProvidedPropertiesParameterscreateScopesHolderForClassfindTypeDescriptorgetOuterScopegetImplicitReceiversParametersreportErrorString1 getExplicitConstructorParametersisReplScriptgetResultValue"getUnsubstitutedPrimaryConstructorloadAnnotationsFromClassgetExtraImportsgetScriptDependenciesgetScriptConfigurationvalueOrErrorisKotlinFileTypeisNonScriptrunReadActiongetServiceIfCreatedgetScriptingHostConfigurationnonScriptId
getDefaultasLegacyOrNullpartitionLoadDefinitions scriptTemplatesDiscoverySequence$discoverScriptTemplatesInClassLoaderpartitionLoadJarDefinitionspartitionLoadDirDefinitions"discoverScriptTemplatesInClasspathloadScriptDefinition loadScriptTemplatesFromClasspathpartitionMapNotNullscriptFileNamewithCorrectExtensionwriteIntoMemory
entryCountwriteIntoFileinPlace	realFilesserializeFilereadIndexMapcreateKotlinLibraryisKotlinLibrarycreateKotlinLibraryComponentsensureBuffersignatureDataReaderwriteIrbuildKotlinLibraryzippedKotlinLibraryChecks
extractDirloadIrDeclarationmakeCompiledModulegetScriptKtFile!withMessageCollectorAndDisposablewithMessageCollectormakeCompiledScriptreportArgumentsIgnoredGenerally$reportArgumentsIgnoredFromRefinementreportInvalidArgumentsscriptDiagnosticsasScriptDiagnostictoScriptingSeverityreportArgumentsNotAllowedparseServiceFileLineprocessPluginsCommandLineloadPluginsloadServicescreateClassLoaderchooseStrategywithScriptCompilationCachedoCompileWithK2(registerPackageFragmentProvidersIfNeeded createIsolatedCompilationContextupdateWithCompilerOptionsupdateWithRefinedConfigurations"createInitialCompilerConfigurationapplyConfigure)collectRefinedSourcesAndUpdateEnvironment$withUpdatesFromCompilerConfiguration'createCompilationContextFromEnvironmentcreateInitialConfigurationscreateCompilationStategenerateWithBackendIrgenerateWithOldBackend&updateConfigurationWithPreviousScripts!updateResolutionFilterWithHistory%getCustomFunctionTypeForSamConversiongetAnnotationFqNames(shouldConvertFirstSamParameterToReceiverresetBufferIfNeeded
parseInputprintWithEscapingprintlnWithEscapingnextSnippetdumpClassesreadByteAsIntisValidContinuationtryInterpretResultAsValueClassonesplitCommand
oneCommanddoRunaddNoparseKotlinAbiVersionisCompatibleisCompatibleToisProvidedByDefaultfinalizegetCompilationStategetNextLineNoinitializeCompilationunresolvedDependenciesresolveSingleFileKlibUnresolvedLibrarylistSymbolswriteParcelWithreadParcelWithgetTextUtilsCharSequenceCreatorparcelWriteParcelableparcelReadStringparcelReadIntparcelWriteValueparcelReadParcelableparcelWriteStringtextUtilsWriteToParcelparcelWriteIntclassGetClassLoaderparcelReadValuehasCustomSerializergetCustomSerializergetParcelerScope
mapSymbolscheckConsistentwrapNullableSerializerIfNeededreadKonanLibraryVersioningwriteKonanLibraryVersioningunpackZippedKonanLibraryTopackageFragmentsDirpackageFragmentFileparcelerNewArrayparcelableWriteToParcel
upperBoundkClassToJavaClass!parcelableCreatorCreateFromParceloverridesFunctionInforUntilisSubclassOfFqNamegetSimpleFunctiongetPropertyGetterjavaClassReferenceparcelerSymbolByNameparcelerCreatekClassReferencegetMethodWithoutArgumentsparcelerWriteirBodiesirDebugInfoirSignatures	irStringsirDeclarationsirTypesirFilewithSafeAccessfakeLibraryvisitElementcreateIrBuilderaddOverridedeferresolveOrNullgetDefaultLibrariesFromDirdirectLibsSequencefoundfilterOutPre_1_4_librariesvalidFileOrNullcreateBuilderlineFailurediagnoseMissingPackageFragment
submitLinelineSuccesslineInfo	doAnalyze#getPackageMemberDeclarationProvidercomputeFileScopessetDelegateFactoryrunAnalyzeraddDelegateProvideranalyzeReplLine"analyzeReplLineWithImportedScripts!getClassMemberDeclarationProvidergetScopesWithInfomatchesFqNameisParcelablematchesFqNameWithSupertypesputObjectOrClassInstanceOnStackreadValueNullAwarewriteValueNullAwarecastIfNeededgetClassOrObjectDeclarationscontainsFilegetDeclarationNamesgetDeclarationsgetScriptDeclarationsgetPackageFilesgetPropertyDeclarationsgetTypeAliasDeclarationsgetFunctionDeclarations#getDestructuringDeclarationsEntriesgetAllDeclaredSubPackagesbuildContextReceiverWithFqNamehasSyntheticDescribeContentshasCreatorFieldhasSyntheticWriteToParcelhasParcelizeSyntheticMethodisSparseIntArrayisEnumisCharSequenceisExceptionisSparseLongArrayisFileDescriptorisNamedObjectmapTypeSafeisPrimitivefindParcelerClassisSizeFisStringisSparseArrayisBundleisSerializableisIInterfacewrapToNullAwareIfNeeded	isIBinderisBoxedPrimitiveisBlobisSparseBooleanArrayisPersistableBundleisSizeprocessSourcesboxTypeIfNeededunboxTypeIfNeededhandleSpecialBoxingCasesmakeReplCompilermakeScriptDefinition.collectAdditionalSourcesAndUpdateConfiguration%collectScriptsCompilationDependenciesregisterExtensionIfRequired!withClassloadingProblemsReportingcalculateRefinedConfigurationsetScriptDefinitionssetScriptDefinitionsSourcesforUnboxedTypeforBoxedTypedoEvalgetNonStrictParentOfTypegetStrictParentOfTypeisWriteToParcelgetTypeParcelershasCustomParcelercheckParcelableClassPropertycheckParcelableClassMethodcheckParcelableClassregisterComponentsregisterExtensionsupdateConfigurationupdateFileRegistrycheckTypeParcelerUsage$checkIfTheContainingClassIsParcelizecheckWriteWithUsagecheckIgnoredOnParcelUsageisDescribeContentsmakeValueParameterresolveParcelClassType'getSyntheticCompanionObjectNameIfNeededgenerateSyntheticMethodsgetSyntheticFunctionNames!resolveParcelableCreatorClassTypecreateMainVariantcachedValuewriteNewArrayMethodwriteCreatorConstructorwriteCreatorAccessFieldgetCompanionClassTypewriteCreatorClasswriteCreateFromParcelgetPropertiesToSerializewriteWriteToParcelcontainsFileDescriptorwriteDescribeContentsFunction	sameClasspartiallyDefinedgenPropertyForFragmentgenPropertygenPropertyForWidgetgenClearCacheFunctioncreateLazyValuegetModuleDatapropertyToXmlAttributesparseAndroidResourceextractResourcesfilterDuplicatesgetVariantDatagetPackageFragmentscollectPackageFragmentsgetSubPackagesOfinitSAXdeclareFunctionStubdeclareTypeParameterStub
irSafeCallcallWithRanges	irSafeLetdeclareParameterStubirElvisgetTyperesolveSymbolgetCacheFieldvisitClassNewgetCachedFindViewByIdFun	irBuildergetClearCacheFunirFindViewById	visitCalldefaultTargetSubstitutionsgetSpaceSeparatedDefFile	duplicateparseDefFileextractTarGzcheckAccessiblefindCandidateslogWithhandleExitCode
runProcessgetOutputLinesdownloadcheckHTTPResponsetryDownload
doDownloadresumeDownloadarchitectureDirForTargetevaluatePresetNamecreateCustomWindowsKitPathcreateCustomMsvcPathstaticGnuArCommandslinkerresolveRelative
addAndSavedownloadDependencyremoveAndSavepathToPlatformSdkfindCurrentcustomerDistributionbuildDistributionwithOSVersionwithoutVendorhostTargetSuffix
getSdkPathbashxcrundetermineCurrentavailableSubTargetloadLibclangpreparellvmArclangCXXclangCloaderprefixlinkStaticLibrariesputSelectorForFragmentputSelectorloadConfigurablesmodehostOstargetManagerresolveAliashost_oshostArchdetermineHosttargetByNamesimpleOsNametoKonanTargetslistAliaseshostArchOrNull	host_archknownplatformDefsruntimeuserPropertyFilespreconfiguredPropertyFilesdefaultNativesgetBundleVersioncompilerInterfacepropertyFilesFromConfigDirgetCompilerVersionadditionalPropertyFilesplatformLibsgetMapgetEnumValue$findLeftOutermostQualifiedExpressioncheckPartiallyDefinedResourcecheckDeprecatedcheckUnresolvedWidgetTypecheckXcodeVersionconstructClangCC1ArgsconstructClangArgsgetCacheOrDefaultapplyPropertygenerateResourcePropertyCallapplyFunction*generateClearFindViewByIdCacheFunctionCallshouldCacheResource getReceiverDeclarationDescriptorgenerateCacheField"generateCachedFindViewByIdFunctiongenerateClearCacheFunctioncreateResolveContext	visitInsnnewRecordComponentasTextasBytesgetClassBuilderMode$getJavaIdentifierNameForResourceNameandroidIdToNameisWidgetTypeIgnoredforEachUntilLastgetWidgetReceivers	errorTypesupportsWinAPIUnwindsupportsGccUnwindsupportsIosCrashLogsuportsMemMemsupports64BitMulOverflowsupportedSanitizerssupportsLibBacktracesupportsUnalignedAccessneedSmallBinarybinaryFormathasUIKitFrameworksupportsCoreSymbolicationpointerBitssupportsMimallocAllocatorsupportsExceptionshasFoundationFramework!hasAddressDependencyInMemoryModelcustomArgsForKonanSourcessupports64BitAtomicssupportsObjcInteropsupportsThreadssupportsCodeCoveragedsymutilDryRunVerboseCommandrpathdsymUtilCommandexecuteCommandWithFilterdsymutilCommandrecordLookupstartDocumentendDocumentgetContributedFunctionsregisterParcelExtensionsparseCacheImplementationTypeparseVariantregisterViewExtensionsreportRemovedErrorcreateKonanLibrarycreateKonanLibraryComponentsbuildLibrarykonanPlatformLibraryPathkonanCommonLibraryPathresolverByNamedefaultResolverdefaultArchiveTypeByHostcreateDirForTemporaryFilesgetPredefinedDependencyOrNullcompilerDependenciesparseKonanAbiVersionbyValueFileprintMillisecondssuffixIfNotprefixIfNotprefixBaseNameIfNot	profileIfremoveSuffixIfPresentnTabsparseSpaceSeparatedArgsgetValueOrNullprofilerecursiveCopyTozipDirAszipFileSystempropertyListresolvablePropertyStringkeepOnlyDefaultProfilessavePropertiesresolvablePropertyListpropertyStringpreordercreateAsSymlinkrenameTo	postorderreadStringsmkdirs	createNewdeleteOnExitRecursivelydeleteOnExitlookupTracker_isDoNothing)incrementalDataProvider_getHeaderMetadatainlineConstTracker_reporthasIncrementalResultsConsumerhasCompilationCanceledStatushasInlineConstTracker(incrementalCache_getMultifileFacadePartshasIncrementalCachesexpectActualTracker_report%incrementalCache_getModuleMappingData1incrementalResultsConsumer_processInlineFunctionsincrementalCache_registerInlineenumWhenTracker_reportincrementalCache_close1incrementalResultsConsumer_processPackageMetadata1incrementalCache_getObsoleteMultifileClassFacadeshasLookupTrackerlookupTracker_record*incrementalDataProvider_getPackageMetadata(incrementalResultsConsumer_processHeader!incrementalCache_getClassFilePath*incrementalDataProvider_getMetadataVersionhasIncrementalDataProvider(incrementalCache_getObsoletePackagePartslookupTracker_requiresPosition/incrementalDataProvider_getCompiledPackagePartshasExpectActualTracker-incrementalResultsConsumer_processPackagePart#incrementalCache_getPackagePartDatahasEnumWhenTracker'compilationCanceledStatus_checkCanceledgetBuildReporterreportMarkDirtyClassreportMarkDirtyMemberDaemonMessageReporter	addMetricaddTimeMetric
addMetrics
getMetricsaddTimeMetricMsstartGcMetricaddTimeMetricNsstartMeasureendGcMetricaddGcMetricfireCompilationFinished
nowSecondscreateRemoteStatewithValidReplState	md5DigestisClasspathFileawaitServerRunrunSynchronizedloadVersionFromResourcemainImplrunCompileServicewithValidReplshutdownWithDelaygracefulShutdownifAliveifAliveExclusiveifAliveExclusiveUnitifAliveUnitcreateCompileServicesloadRegistrars
getValidIdconfigureScriptingrecordgetStableMultifileFacadePartsgetObsoleteMultifileClassesgetClassFilePathgetModuleMappingDatagetObsoletePackagePartsgetPackagePartDatacheckCanceledprocessHeaderprocessInlineFunctionprocessPackagePartprocessIrFileprocessInlineFunctionsprocessPackageMetadatagetIncrementalCachegetClientsFlagPaths	cleanDeadcleanMatchingstartDaemonElectionscheckedCompileconfigurePeriodicActivitiesexecIncrementalCompilerifAliveChecksImplwithValidReplImpltoAlivenessNameexecJsIncrementalCompilerkbmsexceptionLoggingTimerThread	addClientpostReleaseCompileSessionleaseSessionwithValidClientOrSessionProxycleanDeadClientsmakeDefaultSnippetIdentifiercompleteopenFindResourceopenFindResourcessingleClassLoadertryGetResourcePathForClassextractRootgetResourcePathForClasstoContainingJarOrNullgetResourceRootsplitJarUrltoFileOrNull tryGetResourcePathForClassByNamevalueOrmapSuccessImplmakeFailureResultasErrorDiagnosticsasDiagnosticsvalueOrThrow
mapSuccessmapNotNullSuccessvalueOrNullflatMapSuccess	asSuccessgetCompiledModulerefineBeforeEvaluationscriptExecutionWrapper!refineConfigurationBeforeEvaluateenableScriptsInstancesSharinggetOrCreateActualClassloadercreateScriptFromClassLoaderscriptMetadataPathcopyWithoutModulemakeClassLoaderFromDependenciesrefineOnAnnotationsrefineBeforeCompilingrefineBeforeParsingsimpleRefineImplmapScriptReportsToDiagnosticstoDependenciestoClassPathOrEmptytoFilesOrEmpty
refineWithtoValidJvmIdentifiergetExplicitLibgetLibfindCompilerClasspath	lastValuelastItembeforeCompilingbeforeParsingonAnnotationscalcAbsolutedetermineSepfindNthtoSourceCodePositiontakeIfContainsAnygetParentsForOldClassLoader-scriptCompilationClasspathFromContextOrStdlib classPathFromGetUrlsMethodOrNullclasspathFromClassloaderhasParentNamedclasspathFromClasspathPropertytakeIfContainsAllfilterIfContainsAllrawClassPathFromKeyResourcePathtoValidClasspathFileOrNull classPathFromTypicalResourceUrlsmatchMaybeVersionedFile+scriptCompilationClasspathFromContextOrNullclasspathFromFQNisValidClasspathFileunpackJarCollectiongetParentClassLoadersclasspathFromClass%scriptCompilationClasspathFromContextgetParentsForNewClassLoaderallRelatedClassLoadersisIncompleteforAllMatchingFilesInJarforAllMatchingFilesInDirectorytoUniversalSeparatornamePatternToRegexforAllMatchingFilesInJarStreamforAllMatchingFilesforAllMatchingFilesInJarFilerenderErrorgetMergedScriptText!cleanContentPreservingLinesLayoutreadTextSkipUtf8BomrunInCoroutineContextgetEvaluationContextwithDefaultsFrominternalScriptingRunSuspend
getOrErrorfilterByAnnotationTypegetTemplateClass!constructCompilationConfiguration)createEvaluationConfigurationFromTemplatepropertiesFromTemplate"createScriptDefinitionFromTemplate constructEvaluationConfigurationconstructHostConfigurationscriptConfigInstance*createCompilationConfigurationFromTemplategetNoDefaultreplaceOnlyDefaultentriesputIfNotNullkeyCopykeyputIfAnymapToLegacyExpectedLocationsmapLegacyExpectedLocationsrunCompiledScriptgetOrPrepareSharedmapLegacyScriptPositionmapLegacyDiagnosticSeveritymapToDiagnosticsmapToLegacyReportsmapToLegacyScriptReportPositionmapToLegacyScriptReportSeverity$evalWithConfigAndOtherScriptsResultsverifyHistoryConsistencystorewithUpdatedClasspathupdateClasspathImpldependenciesFromClassContextupdateClasspathdependenciesFromClassloaderdependenciesFromCurrentContextfilterNewClasspathisAtoByteStringtoByteStringUtf8codeGeneratorRequestcodeGeneratorResponsehasMinorclearSuffixhasPatch
clearMinorhasMajor
clearPatch
clearMajor	hasSuffixhasCompilerVersionhasParameterclearCompilerVersionclearParameter
hasContent
clearErrorhasInsertionPointclearInsertionPointclearGeneratedCodeInfoclearContentclearSupportedFeatureshasSupportedFeatureshasGeneratedCodeInfohasErrorclearVersion	clearRootclearCardinalityhasNullValueclearBoolValueclearListValueclearNumberValuehasStructValuehasListValuehasBoolValueclearStructValueclearNullValuehasNumberValueenumtestApiarchiveshasValuewearAppkotlinTestRegistrydebugApi
lintChecks
releaseApiclearResponseStreamingclearRequestStreamingclearRequestTypeUrlclearResponseTypeUrlfieldmixinstructbasedurationlaunchProcessWithFallbackisProcessAlivereportUnexpectedreportFromDaemonconnectLoopshutdownCompileServicegetOrCreateClientFlagFileconfigureClientOptionstryFindSuitableDaemonOrNewOptsconnectAndLeasestartDaemondetectCompilerClasspathconnectToCompileServicelintPublishandroidApistestWearApp	boolValue	enumValue	fieldMask	listValue	timestamphasAllowAliasclearAllowAlias
bytesValueclearJavaPackageclearPyGenericServiceshasPhpClassPrefixclearPhpMetadataNamespacehasPhpMetadataNamespaceclearJavaGenerateEqualsAndHashclearRubyPackagehasOptimizeForclearCcGenericServiceshasCcEnableArenashasPyGenericServicesclearPhpClassPrefixhasPhpNamespacehasJavaStringCheckUtf8hasJavaGenerateEqualsAndHashhasCsharpNamespacehasJavaMultipleFileshasSwiftPrefixclearJavaOuterClassnameclearCsharpNamespacehasGoPackageclearPhpGenericServiceshasJavaPackageclearJavaMultipleFileshasObjcClassPrefixhasPhpGenericServicesclearGoPackageclearCcEnableArenashasJavaGenericServiceshasCcGenericServicesclearObjcClassPrefixclearJavaGenericServiceshasRubyPackageclearOptimizeForclearPhpNamespacehasJavaOuterClassnameclearJavaStringCheckUtf8clearSwiftPrefixbuildOutputsandroidComponentsdefaultArtifacts
floatValue
int32Value
int64ValuejavaToolchains	reportinghasWeak	clearWeakhasUnverifiedLazyhasLazyhasCtype	hasJstype	clearLazyclearJstype	hasPacked
clearCtypeclearUnverifiedLazyenumOptionsdoubleValuefileOptionsstringValueclearFileNameuInt32ValueuInt64ValuehasIdempotencyLevelclearIdempotencyLeveldebugWearApptestDebugApifieldOptionsreleaseWearAppandroidTestApitestReleaseApioneofOptionsandroidJdkImageandroidTestUtilhasNoStandardDescriptorAccessor!clearNoStandardDescriptorAccessorclearMapEntryhasMessageSetWireFormathasMapEntryclearMessageSetWireFormattestCompileOnlyclearTrailingCommentsclearLeadingCommentshasTrailingCommentshasLeadingCommentstestFixturesApitestRuntimeOnlydebugCompileOnlytestDebugWearAppdebugRuntimeOnlyreleaseCompileOnlyreleaseRuntimeOnlyandroidTestWearAppandroidTestDebugApitestImplementationtestReleaseWearAppdebugImplementationtestFixturesWearApptestDebugCompileOnlytestFixturesDebugApicoreLibraryDesugaringtestDebugRuntimeOnlyandroidTestCompileOnlyandroidTestRuntimeOnlyandroidTestReleaseApireleaseImplementationtestReleaseRuntimeOnlyextensionRangereservedRangekotlinCompilerClasspathtestReleaseCompileOnlyandroidTestDebugWearApptestFixturesReleaseApitestAnnotationProcessorapiDependenciesMetadatatestFixturesCompileOnlytestFixturesDebugWearAppreleaseAnnotationProcessortestDebugImplementationtestFixturesReleaseWearAppandroidTestDebugCompileOnlyandroidTestDebugRuntimeOnlyandroidTestImplementationtestDebugAnnotationProcessordebugAnnotationProcessortestFixturesImplementationtestFixturesRuntimeOnlyandroidTestReleaseWearApptestReleaseImplementationdebugApiDependenciesMetadatatestApiDependenciesMetadatatestFixturesDebugCompileOnlykotlinBuildToolsApiClasspathtestFixturesDebugRuntimeOnlyandroidTestReleaseRuntimeOnlyandroidTestReleaseCompileOnlykotlinKlibCommonizerClasspathandroidTestAnnotationProcessorkotlinCompilerPluginClasspathtestFixturesReleaseRuntimeOnlytestReleaseAnnotationProcessorreleaseApiDependenciesMetadata"androidTestApiDependenciesMetadataandroidTestDebugImplementationtestFixturesReleaseCompileOnlytestFixturesDebugImplementation!testFixturesReleaseImplementation androidTestReleaseImplementationtestFixturesAnnotationProcessorcompileOnlyDependenciesMetadata#kotlinNativeCompilerPluginClasspath intransitiveDependenciesMetadata"testReleaseApiDependenciesMetadata testDebugApiDependenciesMetadata"implementationDependenciesMetadata$debugCompileOnlyDependenciesMetadata#androidTestDebugAnnotationProcessor$testIntransitiveDependenciesMetadata#testCompileOnlyDependenciesMetadata#testFixturesApiDependenciesMetadata$testFixturesDebugAnnotationProcessor%androidTestReleaseAnnotationProcessor%debugIntransitiveDependenciesMetadata&releaseCompileOnlyDependenciesMetadata'debugImplementationDependenciesMetadata&testFixturesReleaseAnnotationProcessor&testImplementationDependenciesMetadata'androidTestDebugApiDependenciesMetadata'releaseIntransitiveDependenciesMetadata(testFixturesDebugApiDependenciesMetadata(testDebugCompileOnlyDependenciesMetadata)releaseImplementationDependenciesMetadata+testReleaseIntransitiveDependenciesMetadata)androidTestReleaseApiDependenciesMetadata-androidTestImplementationDependenciesMetadata+testDebugImplementationDependenciesMetadata*testReleaseCompileOnlyDependenciesMetadata)testDebugIntransitiveDependenciesMetadata*testFixturesReleaseApiDependenciesMetadata,testFixturesIntransitiveDependenciesMetadata+androidTestIntransitiveDependenciesMetadata+testFixturesCompileOnlyDependenciesMetadata1androidTestReleaseCompileOnlyDependenciesMetadata*androidTestCompileOnlyDependenciesMetadata0androidTestDebugIntransitiveDependenciesMetadata/androidTestDebugCompileOnlyDependenciesMetadata0testFixturesDebugCompileOnlyDependenciesMetadata-testReleaseImplementationDependenciesMetadata.testFixturesImplementationDependenciesMetadata1testFixturesDebugIntransitiveDependenciesMetadata2androidTestDebugImplementationDependenciesMetadata2androidTestReleaseIntransitiveDependenciesMetadatamethodOptions3testFixturesReleaseIntransitiveDependenciesMetadata2testFixturesReleaseCompileOnlyDependenciesMetadata3testFixturesDebugImplementationDependenciesMetadatasourceContext4androidTestReleaseImplementationDependenciesMetadata5testFixturesReleaseImplementationDependenciesMetadataserviceOptionsmessageOptionssourceCodeInfodescriptorProtoenumValueOptionsfileDescriptorSetgeneratedCodeInfo
clearBeginhasSourceFilehasBegin
annotationclearSourceFileenumReservedRangeclearPositiveIntValuehasPositiveIntValuehasAggregateValueclearNegativeIntValuenameParthasNegativeIntValuehasIsExtensionclearAggregateValuehasDoubleValueclearDoubleValuehasIdentifierValuehasNamePartclearIsExtensionclearIdentifierValueclearNamePart	hasSyntaxhasSourceCodeInfoclearPackage_clearSourceCodeInfohasPackage_enumDescriptorProtofileDescriptorProtouninterpretedOptionfieldDescriptorProtooneofDescriptorProtoextensionRangeOptionsmethodDescriptorProtoserviceDescriptorProtoenumValueDescriptorProtohasOutputTypeclearInputTypeclearClientStreaminghasServerStreaminghasClientStreamingclearOutputTypehasInputTypeclearServerStreaming
clearLabelhasOneofIndexhasProto3OptionalhasLabelclearExtendeehasTypeNameclearProto3OptionalhasDefaultValuehasJsonNameclearTypeNamehasExtendeeIdeaKpmProjectProtoIdeaKpmModuleProtoIdeaKpmBinaryCoordinatesIdeaKpmBinaryCoordinatesProtoIdeaKpmFragmentProtoIdeaKpmContentRootIdeaKpmContentRootProtoIdeaKpmLanguageSettingsProtoIdeaKpmModuleCoordinatesProtoIdeaKpmCompilationOutputProtoIdeaKpmDependencyProtoIdeaKpmDependencyIdeaKpmVariantIdeaKpmVariantProtoIdeaKpmFragmentCoordinatesProtoIdeaKpmFragmentDependencyIdeaKpmFragmentDependencyProtoIdeaKpmContainerProto&IdeaKpmUnresolvedBinaryDependencyProto!IdeaKpmUnresolvedBinaryDependency$IdeaKpmResolvedBinaryDependencyProtoIdeaKpmResolvedBinaryDependencyIdeaKpmNativePlatformProtoIdeaKpmJvmPlatformIdeaKpmNativePlatformIdeaKpmJsPlatformProtoIdeaKpmJsPlatformIdeaKpmWasmPlatformIdeaKpmWasmPlatformProtoIdeaKpmUnknownPlatformIdeaKpmPlatformProtoIdeaKpmJvmPlatformProtoIdeaKpmUnknownPlatformPrototoIdeaKotlinClasspathIdeaKotlinDependencyProtoIdeaKotlinDependencyIdeaKotlinSourceDependencyIdeaKotlinSourceDependencyProto IdeaKotlinBinaryCoordinatesProto IdeaKotlinSourceCoordinatesProtoIdeaKotlinSourceDependencyType!IdeaKotlinProjectCoordinatesProto'IdeaKotlinResolvedBinaryDependencyProto"IdeaKotlinResolvedBinaryDependency#IdeaKotlinProjectArtifactDependency(IdeaKotlinProjectArtifactDependencyProto$IdeaKotlinUnresolvedBinaryDependency)IdeaKotlinUnresolvedBinaryDependencyProtoideaKpmVariantProtoideaKpmModuleProtoideaKpmProjectProtoideaKpmFragmentProtoideaKpmContainerProto	clearIsIrhasIsIrclearFragmentDependencyhasFragmentDependencyideaKpmJsPlatformProtoideaKpmPlatformProtoideaKpmDependencyProtoideaKpmSchemaInfoProtoclearNativehasWasm	clearWasm	hasNativeclearUnknown
hasUnknownclearJshasJvmhasJsclearJvmclearSinceSchemaVersionMinorhasSinceSchemaVersionMinorclearSeverityhasSinceSchemaVersionMajorclearSinceSchemaVersionPatchclearMessagehasSinceSchemaVersionPatchclearSinceSchemaVersionMajor
hasMessagehasSeverityclearJvmTargethasJvmTargethasAbsolutePathclearAbsolutePathhasPlatformhasFragmentclearFragmentclearCompilationOutputhasCompilationOutputhasGradlePluginVersionclearExplicitApiModeCliOptionclearGradlePluginVersionhasKotlinNativeHomeclearKotlinNativeHomehasCoreLibrariesVersionhasExplicitApiModeCliOptionclearCoreLibrariesVersionhasSchemaVersionPatchclearSchemaVersionMajorhasSchemaVersionMajorclearSchemaVersionPatchclearSchemaVersionMinorhasSchemaVersionMinorclearLanguageSettingshasLanguageSettingsideaKpmContentRootProtoideaKpmJvmPlatformProtoideaKpmWasmPlatformProtohasKonanTargetclearKonanTargetcombineInternalzipImplasChannelFlow withUndispatchedContextCollectorwithContextUndispatched
scopedFlow	flowScopeflowProducecollectWithContextUndispatchedallocateSlotfreeSlotforEachSlotLockedexceptionTransparencyViolatedideaKpmNativePlatformProtoideaKpmUnknownPlatformProtoideaKpmBinaryCoordinatesProtoideaKpmCompilationOutputProtoideaKpmLanguageSettingsProtoideaKpmModuleCoordinatesProtoideaKpmFragmentDependencyProtoclearKotlinModuleNamehasKotlinFragmentNamehasKotlinModuleNameclearKotlinFragmentNamehasFragmentNameclearFragmentNameideaKpmFragmentCoordinatesProtohasModuleClassifierclearModuleNameclearModuleClassifierhasModuleNametransitiveCoroutineParent
unsafeFlowhasResourcesDirclearResourcesDircheckOwnershiphasIsProgressiveModeclearIsProgressiveModehasApiVersionhasLanguageVersionclearLanguageVersionclearApiVersion$ideaKpmResolvedBinaryDependencyProto&ideaKpmUnresolvedBinaryDependencyProtohasBinaryFileAbsolutePathclearBinaryFileAbsolutePathmarkConsumed	incrementMutableStateFlowfuseStateFlowupdateStategetBufferAtMutableSharedFlowfuseSharedFlowsetBufferAtawaitPendingtakePendingmakePendingideaKotlinClasspathPrototryEmitNoCollectorsLocked#correctCollectorIndexesOnDropOldestfindSlotsToResumeLocked
awaitValueupdateCollectorIndexLockedenqueueLockedcancelEmitterupdateNewCollectorIndexLocked
growBufferdropOldestLockedtryTakeValuetryPeekLockedemitSuspendcleanupTailLockedupdateBufferLockedtryEmitLockedgetPeekedValueLockedAtideaKotlinSourceDependencyProtoideaKotlinDependencyProto ideaKotlinBinaryCoordinatesProto ideaKotlinSourceCoordinatesProto!ideaKotlinProjectCoordinatesProtohasProjectArtifactDependencyhasSourceDependencyclearProjectArtifactDependencyclearSourceDependency'ideaKotlinResolvedBinaryDependencyProto(ideaKotlinProjectArtifactDependencyProto)ideaKotlinUnresolvedBinaryDependencyProtoideaExtrasProtohasClasspathclearClasspathIdeaExtrasProtoExtrascombineUnsafeisSameExceptionAsshareInemitAllImpl	subscribeflatMapConcatemitAllscanFoldflatMapLatestensureActiveflowWith	catchImplflowOfasStateFlowcallbackFlowtransformLatestpublish	startWithasFlowbufferinvokeSafelydistinctUntilChangedBylaunchSharingconsumeAsFlowchannelFlowflattenMergeisCancellationCause	concatMapflowViaChannelcompose	observeOnonCompletion	switchMapbroadcastInonEmptyskipcollectLatest	delayEach
concatWithstateIntransformWhilenullArrayFactorydebounceInternalreplay	mapLatestflatMapMerge	emitAbortlaunchInconfigureSharingonErrorResume	delayFlowlaunchSharingDeferredcombineTransformonErrorReturndebouncecollectWhilesubscribeOncombineLatestunsafeTransform
scanReducecollectIndexedcombineTransformUnsafeonErrorResumeNextonErrorCollectflow	produceInasSharedFlowcombine	emptyFlowflattenConcatreceiveAsFlowcheckFlowContext	publishOnMutex	getAndSetcas	SemaphorecreateSegment
withPermitacquireSlowPathaddAcquireToQueuetryResumeAcquiretryResumeNextFromQueuewithTestContextassertAllUnhandledExceptionsassertAnyUnhandledExceptionprocessNextEventadvanceTimeToassertExceptionscancelAllActionstriggerActionsadvanceTimeBypostDelayedassertUnhandledExceptiontryResumeLockWaiterlockSuspendcompleteResumeLockWaitermarkyieldFrameslastObservedStackTracecreationStackTracetoStackTraceFramecreateOwnerhierarchyToStringinstalldumpCoroutinesstartWeakRefCleanerThreaddumpCoroutinesInfoImplstopWeakRefCleanerThreaddumpDebuggerInfoenhanceStackTraceWithThreadDump	uninstall
realCallerdumpCoroutinesSynchronizedgetDynamicAttachfindIndexOfFrameownerprobeCoroutineCompletedupdateRunningState#enhanceStackTraceWithThreadDumpImpldumpCoroutinesInfofindContinuationStartIndexcleanWeakRefkeyValueIteratordecrementSizeputSynchronizedgetImplputImplremoveCleanedAt+runWeakRefQueueCleaningLoopUntilInterruptedinstallSignalHandlerpremainselectregisterSelectClause1whileSelectselectUnbiasedinitSelectResult	broadcastChannelonClosedactor
awaitCloseproducehandleJobExceptionnext0updateBufferSizeenqueueElementfixedDelayTickertickerupdateValueLockedgetDescriptor
propertiesdoResumecredentialssetConfigPropertiesundoPrepareforkinitCancellabilitysystemPropertiesenvironmentprepareSelectOpcompleteSelectdoAfterSelectclosedgetModel
logDetailsscheduleJournalTimeoutneverShrinking
readModulefromPathStringwriteModulesaveSettingswriteVariantBroadcastChanneltoResultreadLibrarieswriteLibrariesgetLibraryResolverwriteDependencies
isUnitTestpeekUnderLockneedsToCheckOfferWithoutLockcheckSubOffers
checkOffercomputeMinHeadtrySendBlocking	toChannelonReceiveOrNullconsumesconsumesAllsendBlockingconsumeEachcancelConsumedcloseSubscriberremoveSubscriberaddSubscriberisInstrumentationTesthelpCloseAndGetSendExceptiononClosedIdempotent#helpCloseAndResumeWithSendExceptioncountQueueSizedescribeTryOffer	helpCloseisTestFixturetakeFirstSendOrPeekClosedsendSuspendsendBuffereddescribeSendBufferedisDebugOnlyreadDependenciesresumeValue
getLibrarygetAllGraphItemsfindLibrarydescribeTryPollgetAllLibrariesonReceiveEnqueuedonReceiveDequeuedregisterSelectReceiveModeenqueueReceivehasNextResulthasNextSuspendenqueueReceiveSelectreceiveSuspendtryStartBlockUninterceptedremoveReceiveOnCancelunboxtryIncPointersonSlotCleaneddecPointersforEachReversedisEarlierThanidentitySetfromDotVersionremoveFutureOnCancelsubscriberListdecide
systemPropverboseloadMainDispatcherspanshintOnErrorcreateInstanceOfloadMainDispatcherFactorygetProviderInstance	parseFiletoRuletoDotNotationthreadContextElementsremoveAtImpl
siftUpFromsiftDownFromswapremoveFirstIfreallocaddImpl	firstImplcreateMissingDispatchertryCreateDispatcher#throwMissingMainDispatcherException	isMissing
trySetNext	cleanPrevmarkAsClosednextOrIfClosedendfindSegmentInternalplaceholdermissingmapTypecallUndeliveredElement'callUndeliveredElementCatchingExceptionbindCancellationFunexecuteUnconfinedyieldUndispatchedtryCopyExceptionsafeCtorfieldsCountfieldsCountOrDefaultlogErrortryReleaseClaimedContinuationresumeUndispatchedWithpostponeCancellationresumeCancelled$claimReusableCancellableContinuationawaitReusabilitystartCoroutineCancellable
toMappingswriteSelfTorecoverFromStackFrameisArtificialcauseAndStacktracemergeRecoveredTracesfindAllFilesrecoverAndThrow
frameIndex
unwrapImplcreateStackTracerecoverStackTrace	initCauserewriteStringelementWiseEqualsartificialFramecreateFinalExceptionisSchedulerWorkermayNotBlockoffloadAllWorkTopollTotryStealBlockingFromtryStealLastScheduleddecrementIfBlocking
pollBuffertryStealFromrewriteTyperunTransformundispatchedResultstartCoroutineUninterceptedstartCoroutineUndispatchedstartUndispatchedOrReturnstartDirect&startUndispatchedOrReturnIgnoreTimeoutcanTransformremoveSlowPath
markFrozenfillPlaceholder
updateTailwo	withStateallocateNextCopyallocateOrGetNextCopyaddFailReasonmapDependencylimiteddispatchWithContextcreateSchedulerblocking
handlePathusePrivateSchedulerhandlesExceptiontoDelayMillisawaitCancellationjoinAllawaitAllcreateEventLoopprocessNextEventInCurrentThreadfromModedispatchUnconfineddecrementUseCountprocessUnconfinedEventincrementUseCountdeltaRunnableresetCoroutineIdasCoroutineDispatcher
asExecutorinvalidStateclearInterruptaddSuppressedThrowable
disposeAllisGoodCommonPoolusePrivatePoolcreatePlainPoolTry
createPoolgetOrCreatePoolSyncwhichrunBlockingwithContextasyncquoteExecutablePathSupervisorJob0SupervisorJobsupervisorScopehandleFatalExceptionquoteCommandLineArgumenttoolOptionsdisposeOnCompletioncancelChildrenorCancellationJob0JobcancelAndJoinDisposableHandlecancelFutureOnCancellationcancelFutureOnCompletionwithTimeoutOrNullwithTimeoutsetupTimeoutTimeoutCancellationExceptionboxIncomplete
unboxStateexpandbuildStagingDirectoryrunInterruptible!runInterruptibleInExpectedContextensureStartedcreateThreadSyncnotifyStartupacknowledgeShutdownIfNeededdoSleepjoinBlockingfinishPreparesourcedisablecorrectPrevaddLastIfPrevAndIfdescribeRemoveFirst	finishAddupdatedNextaddLastIfPrevdescribeAddLasttakeAffectedNodehelpRemovePrevaddNextvalidateNode!removeFirstIfIsInstanceOfOrPeekIfmakeCondAddOpfinishOnSuccessaddOneIfEmptyfindPrevNonRemoved
helpRemoveremovedremoveOrNexttryCondAddNextcFlagscoroutineScopeCoroutineScope	MainScopecppFlagscurrentCoroutineContext
abiFilterssetMatchingFallbackstryParkpollGlobalQueues	runWorker	idleResetsubmitToLocalQueueavailableCpuPermitsinitWithfindTaskparkedWorkersStackNextIndexaddToGlobalQueueincrementBlockingTasksreleaseCpuPermittryAcquireCpuPermit	tryUnparkparkedWorkersStackTopUpdatetryTerminateWorkerfindAnyTaskparkedWorkersStackPopexecuteTaskincrementCreatedWorkerstryReleaseCputrySteal
createTaskcreatedWorkerscurrentWorkerblockingTasksparkedWorkersStackPushdecrementBlockingTaskssignalBlockingWorkdecrementCreatedWorkerstryCreateWorkerinStackcreateNewWorkersignalCpuWork
beforeTaskparkrecoverResulttoStateresetEventLoopcurrentOrNullsetEventLoopresumeWithStackTracerunUnconfinedEventLoopresumeUnconfinedinvokeItdelayToNanosdelayNanosToMilliswithCoroutineContextwithContinuationContextundispatchedCompletionupdateUndispatchedCompletionnewCoroutineContextcreateDefaultDispatchermakeResumedsetExecutionSourceFromexternalNativeBuildtestProguardFileCompletableDeferredcompleteWithsaveThreadContextclearThreadContextmakeHandledinvokeHandlers
closeQueuetimeToExecutetestProguardFilesscheduleImplrescheduleAllDelayedshouldUnparkscheduleInvokeOnTimeoutdequeuescheduleTaskenqueueImplensurePresentasContextElementnewSingleThreadContextnewFixedThreadPoolContextsetProguardFilesproguardFiletoStringInternalImpltryMakeCompletingloopOnStatestateStringselectAwaitCompletiongetCompletedInternalcancelCoroutineawaitInternal
sealLockedawaitSuspendtryWaitForChildtoCancellationExceptionproguardFilesmakeCompletingOncemakeCancellingcancelParentgetOrPromoteCancellingList
publishingcompleteStateFinalizationallocateList
firstChild	nextChildpromoteEmptyToNodeListtryMakeCompletingSlowPathregisterSelectClause1InternaladdExceptionLockedinitParentJobpromoteSingleToNodeListstartInternal
cancelImplgetFinalRootCausemakeNodecontinueCompletingdescribetryMakeCancellingdefaultCancellationExceptioncreateCauseExceptionmakeCompletingcancelMakeCompletingensureInitializedfinalizeFinishingStatejoinInternaltryFinalizeSimpleStateaddLastAtomicnotifyCancellingaddSuppressedExceptionsnotifyHandlersjoinSuspendnotifyCompletionCoroutineExceptionHandlerhandlerExceptionhandleCoroutineExceptionisHandlerOfhandleCoroutineExceptionImpldisposeOnCancellation"getOrCreateCancellableContinuationremoveOnCancellation#suspendCancellableCoroutineReusablesuspendCancellableCoroutineinitFutureCancellationscheduleBlockcancelJobOnRejectiontryResumeImplcallCancelHandlerprivacySandboxcmakendkBuildcallCancelHandlerSafelyresumedStatealreadyResumedErrormultipleHandlersErrormakeCancelHandlerbundledispatchResumefromFiledetachChildcancelLaterinstallParentHandle"releaseClaimedReusableContinuationcallOnCancellationresetStateReusable
resumeImpldetachChildIfNonResuableaddSourceFile	hasConfigisSigningReadyexecuteActionsinitializeAaptOptionsFromDslfindBetterMatchgetEnabledVariantOutputsgetBaseExcludesgetFeatureLevelgetApiStringtoSharedAndroidVersiontoGenericBuiltArtifactmake	newOutputsanitizewireAllFinalizedByhandleFinalizedByForTypeloadFromDirectorytoSerializedFormtoBuiltArtifactgetRegisteredExtensionssetMinificationIfPossiblegetFileTreeconfigureTaskInputparameterNamesFortoKotlinStringgetAsFileTreesForOldVariantAPI$variantSourcesFileCollectionForModelgetAsFileTreesgetStartParameterupdateSourceDirectoriesinfogetAscendingOrderAssetSets
findByNamegetVariantSourcesWithFilterasConfigurableFileTreesfullNamebaseNamegetFilterNamedirNameaddLatermatchingcalculateTestedApplicationIdwhenObjectRemovedgetBuiltArtifactsaveAllinitFileTypesaveToDirectorytoGenericBuiltArtifactspersist
addElementwhenObjectAddeddisplayinstantiateFeatureSetMetadatainstantiateBaseModuleMetadatacreateVersionCodePropertycreateVersionNamePropertycheckProfileableWithCompileSdk
getStorageaddAllLatergetFilenamegetOutputLocation	serviceOfgetTaskProvidersgetInitialTaskProvidersgetTransformationTaskProvidersneedInitialProducergetFinalProviderupdateProvidergetArtifactrunForNonInitializedProviderinitArtifactContainerserviceRegistryOfpublicStaticMethodgetComponents	getGradlewrapUp
atLocationongetExtensions
componentsgetRootProject	getLoggergetProcessOperations
getLoggingstop_toListenTogetRJarForUnitTestsinitializeTransforminitializeInputsetContentPathtoForkgetFinalArtifactssetNewContentpublishCurrentprogressMonitorForresetContentProvidersetInitialContentgetScopedArtifactsContainergetCompiledManifest3warnAboutAccessingVariantApiValueForDisabledFeature	isTestApkgetMainTargetSdkVersioninvokePreBuildActionsinvokeActionshasPreBuildActions
executeForevaluatepathignoringErrors
sourceDirssetTaskInputToFinalProductsetInitialProvidergetArtifactContainergenerateDefaultPathgenerateIntermediatePathcalculateOutputPathcalculateFileNameappendTo
addRequest	appendAllimportsRequiredByaddStaticProviderdefaultAssetsSourcesdefaultResSourcesgetSourceListflattenSourceProvidersdefaultJavaSourcesgetClassesOutputDirgetSourcesOutputDirdefaultPackageTypesIncompilationClassPathOferasecompileSecondStageOfgetVariantOutputshandleScriptExceptionevaluateSecondStageOfforNativeMetadataCompilationforMetadataCompilationforPlatformCompilationgetChosenFragmentsloadImplementationcommonizeLibrariescommonizeNativeDistribution	nextTokenloadAndroidGradlePluginVersionsparseAndroidGradlePluginVersionexecuteDslFinalizationBlocksonEachSourceSetExtensionscopyToIgnoringExistingDirectorypreVisitDirectorygetAndroidResourcesisJavaLanguageLevelAbove14(createManifestPlaceholdersCreationConfigisGlobalSyntheticsEnabledisApiModelingEnabled	visitFileonVisitFileFailedonPostVisitDirectorygetClassDependencyMapfindClassesInDependencyrecordAnnotationProcessorscomputeJavaSource$computeJavaSourceWithoutDependenciesregisterDataBindingOutputsonVisitFileonPreVisitDirectory
zeroOrMore
relativeToparseResourceSourceSetfindUsedDependenciesgetResourceDependencyMapfindResourcesInDependencyfindUnUsedDependenciescheckDependenciesForAppUsagesrelativeToOrSelfgetPrefabFromMavengetPrefabArtifactrelativeToOrNullsubPathremoveSplitNames#replacePackageNameInFeatureManifest!stripUsesSplitFromFeatureManifeststripMinSdkFromFeatureManifestdetectAnnotationProcessorstoProcessorInfo recordCompileOptionsForAnalytics#writeAnnotationProcessorsToJsonFile*configurePropertiesForAnnotationProcessingconfigureProperties&recordAnnotationProcessorsForAnalytics$readAnnotationProcessorsFromJsonFile configureAnnotationProcessorPathcheckReleaseFlagcheckSdkCompatibility getFlavorNamesWithDimensionNamescreateKaptOrKspClassPathoutputMergeBlameContentswriteMisconfiguredDependencieswriteUnusedDependenciesmapIdsToRenderableDependencies findIndirectRequiredDependenciesfindAccessibleDependenciesgetExecOperationssanitizeFlavorDimensiongetChangesInSerializableFormcustomizeBuiltArtifactsbaselineProfileDataForJsonrecordMetricsgetSourceDirscontainsRenderscriptcompileAllRenderscriptFilescreatePrefabBuildSystemGluetranslateFromStagedToFinalgetPrefabCliInputscreateFolderLayoutcreateTempLibraryManifesthandleMergingResultgenerateUnitTestManifest generateInstrumentedTestManifestmergeManifestsForTestVariantcreateRepublishCxxBuildTaskcreateWorkingCxxBuildTaskcreateVariantCxxCleanTaskwalklistConfigurationSourceSetsgetPathIfPresentOrNull
taskActionbuildDokkaSourceSetImplgetRuntimeClassLoadercreateProxyLoggerbuildDokkaConfiguration!defaultExternalDocumentationLinksprependToCopyPathextractBuildIdaddTypefindAllDependenciesaddTypeSignaturecollectClassDependenciesvisitLocalVariablevisitParameterAnnotationgetTypeFromPackageNameaddTypeNamefindPublicDependenciesisPrimitiveTypeaddSignature!getMetadataGenerationTimingFoldergetUsedClassesgetPublicClassesgenerateTestConfigFilecomputePropertiesgetTaskNameforEachInputFilecreateCxxConfigureTaskwritergetConfigureInputFilesconfigureOneAbiremoveUnexpectedSoFilesbufferedWriterreaderprocessFilegetAidlFrameworkProvideraidlCompileDelegateisFilteredOutLibraryResource,getMergedNotCompiledResourcesOutputDirectorygenerateFilegetResourceProcessorcleanup$tryUpdateResourceSetsWithChangedFilegetFlagsmaybeCreateLayoutProcessorgetConfiguredResourceSetsgetRelativeSourceSetMapgetResourcesDirsOutsideRoot$mergeResourcesWithCompilationServicegetCleanBlameLogwriteMergedMetadatacopyFilesRecursively'copyFilesToDirRecursivelyWithOverridingbufferedconfigureWithAssetscomputeAssetSetList.rewriteRClassReferencesToFusedLibraryNamespacegetFusedSymbolTableparseDryRunOutputremoveJobsFlagIfPresentgetFeatureManifestsuseLinescomputeFullProviderListreadText	readLinesgetOptionalFeaturesprocessVariantOutputcmakeMakefileChecksconfigureParameterssubmitFileToBeCompiledincludeDirectoryhandleFullRunhandleIncrementalChangescomputePartialRhandleModifiedFilegetFeatureJavaResourcesgetAcceptedAbisgetPageSizegetMAX_VALUEgetPOSITIVE_INFINITYgetDexFolderscopyJavaResourcesOnlygetGlobalSyntheticsDexgetSigningConfigDatagetDesugarLibDexIfExistsgetNaNisDeterministicEntryOrderdoTaskgetManifestTypegetChangedJavaResourcesfirstValidInjectedAbiisDeterministicgetFeatureDexFoldercheckFileNameUniquenessaddCacheKeys setTargetSandboxVersionAttributegetNEGATIVE_INFINITYgetCreationActionsgetCmakeInfoStringgetNativeBuildConfigValueexecuteProcessAndGetOutputnormalizeFilePathgetHandshakeRequest	doComputegetNativeLibraryValuegetBuildFileslogInteractiveMessagegenerateAndroidGradleBuilddoHandshakecanAddTargetToNativeLibrary#createDefaultNativeBuildConfigValuepackageSdkDescriptorsextractProfilerDependencyJarsgetInstrumentationManagerupdateIncrementalStateprocessJarsgetMIN_VALUEconfigureParamsextractDependencyJarsgetClassesHierarchyResolverparseBooleanparseBooleanFailuregetShortKey
getFullKeyendsWithExecutableNamefindRuntimeFilestoArtifactTypegetOwnershouldBeMergedgenerateLibrariesfindToolChainCompilers2extractWorkingDirectoryFromDryRunOutputIfAvailablefindToolChainNamesetCommandsfindToolchainNamesgenerateToolchains	buildImplgenerateExtensionsfindLibraryNamesgenerateCleanCommandsdecodeFileFingerPrintdecodeSynchronizeFilecheckCanonicalizesetExcludesaddLateAdditionDelegategetSourceSetNamehasPassedNowcompareFileContentsisSameFileOrContenthardLinkOrCopyFilesynchronizeFilecontainsExactTextremoveDuplicateFilesrealCreateLinkwriteTextIfDifferentreadMiniConfigCreateIfNecessarywriteJsonFilewriteJsonFileIfDifferentreadJsonFilejsonStringOfisCmakeConstantTruthycmakeBooleangetIndexObjectgetCacheStringgetAssetsDirectoriesgetResDirectoriesgetKotlinDirectoriesinitRootgetAidlDirectoriesconvertNameToDisplayNamegetCppDirectoriesgetManifestFilegetCustomDirectoriesgetJavaDirectoriesgetRenderscriptDirectoriesgetCDirectoriesgetShadersDirectoriesgetJniLibsDirectoriesgetMlModelsDirectoriesgetResourcesDirectoriesparseLinkLibrariesparseQuoted
finishItemfindCmakeQueryApiIndexFileparseCmakeFileApiReplyreadCmakeFileApiReplyinferToolExeFromExistingToolstream	readPathsreadCommandFragment
readSourcereadCompileGroupstreamSourcesreadLinkreadCommandFragmentsreadSingleStringObjectListreadSingleStringObjectreadCompileGroupsmakeCmakeMessagePathsAbsoluteverifyTargetExistsfindLibrariesToBuildsubstituteBuildTargetsCommandhasNotPassedNowcreateCxxProjectModelcreateCxxModuleModelFromJsoncreateCxxAbiModelFromJsonwriteJsonToFilecreateCxxModuleModelcreateCxxAbiModelcreateCxxVariantModelmarkNow
elapsedNownextBitsfromJsoncreateEmptyNinjaDepsFilestreamNinjaDepsFilereadFilefilterBuildFilewriteTarget#writeLittleEndianUIntWithHighBitSetwriteLittleEndianUIntComplementwriteLittleEndianLongwriteTimestamp	writePathwriteLittleEndianUIntbuildPrefabPackageadaptNinjaToCxxBuildassignTargetName#gradleVersionToPrefabPackageVersioncreatePrefabPublicationcopyWithLibraryInformationAddedcopyAsHeaderOnlycopyAsSingleAbicreateModuleJsonplatformSlashesconfigurePrefabinstallHeadersaddPayloadMappingcreatePrefabJson
createLibscreateAbiJsoncreateModuleexternalNativeBuildIsActiveisGradleConfigurationfromClosedRangecreateCxxMetadataGeneratorfindCxxFolder tryCreateConfigurationParameterscreateAndroidGradleBuildMiniresolveFileremoveExtensionstringOfcreateBuildGraphninjaCommandoutputHasExtensioninputStreamidSetOfwritePublicationFilereadPublicationFileOrNullpublicationFileFromdetermineUsedStlForNdkBuilddetermineUsedStldetermineUsedStlFromArgumentsdetermineUsedStlForCmakegetOrCreateChildgetChild
recognizescreateNinjaCommandgetBuildCommandArgumentsshouldGeneratePrefabPackagesbuildIsPrefabCapablecomputeClangKeySegmentcontainsKeyStartingWith
containsIdgetListgetIdCreateIfAbsentfindAllStartingWithfindMostSpecificcontainsStringdecodeObjectFileCacheEventtoBase36sha256OfshortSha256Ofcomponent30component26component27component31component33containsPrefixOftoPathStringstepcoerceAtMostcoerceIncomponent28component32component29downTocoerceAtLeastlessThanOrEqualscloseTimingScopeopenParentsIfNeededgetTimingFileopenTimingScopelifecyclelnerrorlninfolncheckedFormatbuglnwarnlngetCxxStructuredLogFolderinfoRecordOflifecycleRecordOferrorRecordOfbugRecordOfcreateLoggingMessagedecodeLoggingMessagewarnRecordOfreadStructuredLogstreamCxxStructuredLogstreamCxxStructuredLogUntypedreadStructuredLogsskipPayload	hadErrorsgetErrorOutputgetStandardOutput	logResultcreateJavaExecuteProcessCommandcreateExecuteProcessCommandmergeSettingsenvironmentscreateSettingsFromJsonFilecreateSettingsFromJsonStringcreateOutputhandleOutputwriteBufferToInfowriteByteToBufferdecodeExecuteProcessreifyRequestedConfigurationexpandInheritEnvironmentMacrosreifyStringgetConfigurationargsTextaddEnvironmentsresolveMacroValuetokenizeMacroStringgetEnvironmentVariableMapcreateBuildSettingsFromFilecreateBuildSettingsFromJsongetCmakeDefaultEnvironmentgetSettingsFromCommandLinegetAndroidGradleSettingsgetNdkMetaSettingsJsongatherSettingsFromAllLocationsgetDefaultEnvironmentwithConfigurationsFromgetVariableValue'reportFormattedLifecycleToCurrentLoggerrequireExplicitLoggerparentLogger#logStructuredMessageToCurrentLogger"reportFormattedInfoToCurrentLogger#reportFormattedErrorToCurrentLogger%reportFormattedWarningToCurrentLogger
getILogger!reportFormattedBugToCurrentLoggerfallbackAbiswithBindingwithCMakePropertyfindCmakePathtoLookuptoLookupTableputVariablefindNinjaPathgetCmakeRevisionFromExecutableisCmakeForkVersionfindCmakePathLogicgetSdkCmakePackagesgetSdkCmakeFoldersparseAbiJsonndkMetaAbisFiletrySymlinkNdkcomputeNdkSymLinkFoldersortAndJoinAbisortAndJoinAbiStringsfindNinjaPathLogicgetNinjaIfPathExistsfindNdkPathImplgetNdkVersionOrDefaultlogUserInputsgetNdkVersionedFoldersgetNdkFolderParsedRevisiongetNdkVersionInfostripPreviewFromRevisionparseRevisionjsonFile
fromReader convertCMakeToCompileCommandsBin extractCMakeTargetFromObjectFile)calculateConfigurationArgumentsExceptHashgetSettingsFromConfigurationgetAbiRewriteConfigurationcalculateConfigurationHashgetPreHashReifier
fileOrNullgetNdkBuildCommandLineexpandConfigurationHashMacrosgetNdkBuildCommandLineArgumentsgetCmakeCommandLineArgumentscalculateConfigurationArgumentsbooleanOrNullfindNdkPathprefabConfigurePackageTaskName"createFoldedCxxTaskDependencyModelcreateCxxTasks createPrefabConfigurePackageTaskcreateInitialCxxModelprefabPackageTaskNamecreatePrefabPackageTasktoConfigurationModelhasCmakeHeaderFileExtensionsgradleLocalPropertiesfindPlatformConfiguratorLegacygetLinkerSysrootPath!findSuitablePlatformVersionLoggeddisplayVersionStringclampcomputeMinSdkVersionfindSuitablePlatformVersionisSatisfiedBycomputeEffectiveRequestVersionrewriteWithLocationsbuildTypeOfabiOfdecodeNativeModelBuilderOutcomedecodeCreateCxxModel decodeConfigureInvalidationStatelegalizeconfigureTaskNameOfbuildTaskNameOfuniquifysetRepresentativeAbiForTaskcreateBuildTasktaskNameAnnotationcreateConfigurationTasktargetAnnotation$createConfigurationInvalidationStatecomputeChangedFilescompareToCurrenttryReadFingerPrintFilerecordConfigurationFingerPrinttryReadPackageRevisionsourcePropertiesFilepathFromInstallFolderfromInstallFolderwriteHeaderOnlyPublicationFile$createNativeBuildSystemVariantConfigpropertyAsFile%getPrefabExperimentalPackagingOptionspropertyAsListpropertyAsSetpropertyValueAsListobtain
filterTypecmakeFlagLooksCombinableonlyKeepPropertiesgetMSBuildPropertyparseCmakeCommandLinegetNdkBuildPropertyremoveBlankPropertiestoMSBuildArgumentsremoveSubsumedArgumentsonlyKeepUnknownArgumentsonlyKeepCmakeServerArgumentsgetCmakeBinaryOutputPathgetCmakeListsFoldertoNdkBuildArgumentstoCmakeArgumentsgetCmakeBooleanPropertyremoveCmakePropertyremoveNdkBuildJobstoCmakeArgumenttoStringListtoNdkBuildArgumentgetCmakePropertytoMSBuildArgumentgetCmakeGenerator!createSymbolStripExecutableFinderexecutablesstripToolExecutableFilelocateCMakelocateNinjadecodeBuildTaskAttributionsgenerateChromeTracesquashTasksreadZipContentaddThreadNameMetaEventaddTaskEvent"generateNinjaSourceFileAttributioncollectTaskcreateAttributionKeyaddProcessNameMetaEventbreadthFirstgraphOf	ancestorscomputeIfPresent
replaceAlltimeOutInMssetInstallOptionsinitExtensionsreplaceFirst	substringappendRangecheckShrinkResourceEligibility	storeTypekeyPasswordkeyAliasstorePassword	storeFilegetRetainAllsetDoNotStripaddSingleVariantcheckSingleVariantUniquenessaddSingleVariantAndConfigurelateInitgetAllowedValuessetAutogetDefaultValuessetCompatibleScreensencodeToByteArraysetKeepDebugSymbolsionewScopeaddMultipleVariantscheckMultipleVariantUniquenesscreateFieldBackedGettersvisitArrayOfcreateFieldBackedSetterscreateGroovyMutatingSetterrecordMethodcreateBlockAccessorlookupDefineClasslegacyDefineClassdecoratecreateLockFieldcreateFieldBackedGetterdecorateDslClassImplfindAbstractPropertiescreateFieldBackedSettercreateLockMethodnotAbstractdoCall getExternalNativeNdkBuildOptionsgetExternalNativeCmakeOptions'getExternalNativeExperimentalPropertiesmkdirgetExecutionEnumapplyConfigurationgetSourceSetTreeClassifierwearAppUnbundledsetGeneratedDensitiescopySpecemitCheckWarninggetToolingModelSeveritywithTestBuilderjavaexecexectarTreeuriconvertBuildConfigconvertResValuesconvertToExecutioncreateNoArtifactFileLibrarycreateRelocatedLibrarycreateProjectLibrarycreateJavaLibrarycreateAndroidLibrarycreateGenerator(generateBuildFilesAndCompileCommandsJsonasPredicaterelativePathfileTree	setEnablesetFatalidsetInformational
setDisablesetErrorsetBaseline	setIgnore
setWarning
getPluginsgetPluginManagercreateBasicArtifactgetApplicationIdcreatePrivacySandboxSdkInfopluginsbuildBasicAndroidProjectModel
createFrombuildAndroidProjectModelgetGraphBuilderbuildAndroidDslModelcreateAndroidArtifactbuildProjectSyncIssueModelgetBytecodeTransformationsaddGeneratedClassPathsbuildVariantDependenciesModelcreateBasicVariantbuildscriptinspectManifestForInstantTag#createDependenciesWithAdjacencyListgetTestTargetVariantgetBundleInfogetAgpFlagsbuildModelVersionscreateJavaArtifactcreateVariantthegetMetaClassinvokeMethod checkPostProcessingConfigurationsetMetaClassassign
parseChildstartsOrEndsWithSpaceextendgettingwithTypenamedtryParsereadDefaultDatareadUrlDatasdkIsNullOrAtLeastgetSuppressedgetMatchResultNamedGroup	getKtFilegetArtifactsForComponentregisterDependencyResolversregisterExtrasSerializerssetupAndroidTargetModelstoTypetoInfosetupAndroidCompilations	getInputs
getSources
getSamplesregisterSourceSetArtifacts
getJavaDocgetDefaultScriptDefinitionfindScriptDefinition hasProjectTestFixturesCapability hasLibraryTestFixturesCapabilitysetIfNotNullconvertComponentInfogetKnownFilenameExtensionsfindDefinitiongetScriptNamegetDependencyGraphBuilderisScriptgetIdStringgetProjectInfogetAttributeMapgetCapabilityListgetLibraryInfogetProductFlavorsgetBuildType
asMultiMaptoKeyisAndroidProjectLibraryasMaphandleArtifactyieldAll
graphItemsedgesreadExternalwriteExternalreadOffsetsconvertLintOptionsresolveAdditionalArtifacthandleDependencybuildWithAdjacencyListbuildAdjacencyListtableItemBytes	writeDataensureExtraCapacitycheckIsMutablenextLongcomputeMavenCoordinatescomputeModelAddress	addErrorsregisterIssuesgetMavenCoordinatesgetMavenCoordForLocalFilegetGlobalLibMapgetSyncIssuesprocessDependencyThrowablecheckForDatagetBooleanFlagMapgetNdkStatusgetNdkPlatform
getNdkInfofromArgumentName getAutoNamespacedLibraryFileNameisPublicgetResourceTypetoArrayremoveNamespaceremoveNamespacesrunAapt2LinkwindowedSequencegetToolchainPrefixgetDefaultToolchainVersiongetToolchainPathflushHistorygetStlSharedObjectFiles/createNamespacedLibraryTestProcessResourcesTaskcreateNamespacedAppProcessTaskcreateNamespacedResourceTaskscreateCompileResourcesTaskgenerateRTxtisJarautoNamespaceAarcopyNamespacedAarlinkAndroidResourcescreateCompileRequestpreProcessAarrunAapt2CompilereadLinerenderMessagenotifyIncompletenotifyReadLineEndoutputCommandResultsendInternalErrorReportprintlnWelcomeMessageoutputCompileErrorprintlnHelpMessagenotifyCommandSuccessnotifyErrorsReportedblameLoggerForrewritePositionsrewriteLinkExceptionrewriteCompileExceptionrewriteExceptionprocessResourcesdoIncrementalRDefTaskActioncanGenerateSymbolswriteRDefFromPartialRDirectory getResourceDirectorySymbolTables#canBeProcessedIncrementallyWithRDefgetPartialRFilesFromDirectorygetPartialRFileNamegetPartialRFromResourcedoIncrementalPartialRTaskAction writeSymbolTablesToPartialRFilescompileSingleResourcefindPackageForAttrrewriteXmlDocwriteInnerRClassesmaybeFindPackagemaybeWriteAttributerewriteStyleItemNameAttributefindStyleableChildremoveParentaddInnerClasswritePublicFilerewriteStyleElementrewriteManifestrewriteXmlNodevisitFieldInsnForStyleablerewriteClassrewriteStyleableElementgetMainElementfindPackageForSymbolpackageContainsSymbol
rewriteJarrewriteParentrewriteStyleItemgeneratePublicFilefindStyleableChildSymbolrewriteStyleItemsnamespaceStyleablesrewriteXmlFilerewriteAarResourcerewriteStyleItemValuecollectAndRemoveXmlNamespacesrewriteValuesFilewriteRClassvisitFieldInsnrewriteFilerewriteValuesNodegetInputResourcesDir getCompiledDependenciesResourcesnotifyReadLineStartoutputRuntimeErrorcreateDiagnosticHolderinitTestApplicationIdgetTestComponentNamespaceresolveConfiginitApplicationIdcomputeApplicationIdSuffixcomputeVersionNameSuffixcomputeNamecomputeMergedOptionscomputeNamescreateVariantSources"createTestFixturesComponentDslInfocreateApplicationVariantDslInfo!createAndroidTestComponentDslInfocreateLibraryVariantDslInfocreateDslInfocreateUnitTestComponentDslInfocreateComponentIdentity"createDynamicFeatureVariantDslInfo
getBuildercreateTestProjectVariantDslInfosubstitutePathasProjectSourceSetKeyasProjectKeyedMapasProjectKeyasProjectSourceSetKeyedMapsetArgumentssetCompilerArgumentProviderssetClassNamesgetSortedSourceProvidersinitializeEmptywriteParcel
readParcelresolutionSequencedefaultLinks getLocalCustomLintChecksForModelgetLocalCustomLintCheckstoLintModelModuleTypegetLintMavenArtifactVersiongetMergedFlavorresetToLineinitializeBaseModuleLintModel(initializeProjectDependencyLintArtifactscomputeDependenciesinitializeLintConfigFilesinitializeFromProjectconvertToLintModelModuleprepareForAnalyzeinitializeLintCacheDirderiveVersionKeysetTypetoSourceCode
getFactorygetOrImplicitDefaultgetTypeAsStringappendOutputpreconditionsCheckinvokeAaptForSplitcreateBeforeEvaluateLintTasksisLintStdoutcreateLintTasksattachTestsToVariantsneedsCopyReportTaskrunConfigurationValidationisLintStderrregisterInputsmergeFlavorsreportErrorWithWorkaroundtoLintModelserrorJarNotFoundgetProjectJarmaintainClassloadersrunLintmaybeThrowExceptiongetClassloaderinvokeLintMainRunMethodgetErrorMessagecallRecursiveabbreviateLintTextFileinitializeCommonInputswriteLintModelFilegetDefaultDefinitionrenderImagegetTexts	addColumndoWriteValuegetUpdateBaselineWarninginitializeOutputTypesConventiongetIteratorisBaselineChanged!registerLintIntermediateArtifactsregisterLintReportArtifactsaddRuntimeAndCompileArtifactsfinalizeOutputTypesdoReadValueconfigureOutputSettingsrenderTestsregisterTabsrenderFailuresfindBundles
writeValuerecordOkUnitTestRunrecordCrashedUnitTestRun recordCrashedInstrumentedTestRungatherTestLibrariesrecordTestRunrecordOkInstrumentedTestRun	runActiongetCrashReportermaybeReportExceptionmaybeReportExceptionImplmaybeReportExceptionForTestserializeToisUsefulExceptiongetNoPiiStacktracegetFilterTypegetIdentifiergetIntermediateOutputDirgetRegularFilesgetOutputDirgetDirectoriesspecrunAllgetOutputsDirgetTestReportFoldergetTestResultsFoldergetProjectBaseNamegetJacocoAgentOutputDirectoryintermediatesFilegetIntermediatesDirgetBaseNameintermediatesDirectorygetTmpFoldercreateTestResourcesgetJacocoAgent.computeAdditionalAndRequestedOptionalLibrariescomputeClasspathgetConfigurationVariantNamepublishArtifactToConfigurationpublishIntermediateArtifactpublishArtifactToDefaultVariant	readValuegetTensorInitStatementgetGroupParameterListStatementisParameterArrayListgetTensorSizeInitStatementgetTargetedImageTensorbuildGetBufferMethodgetFieldInjectorgetInputProcessorInjectorgetGetterMethodInjectorgetProcessInjectorgetOutputProcessorInjectorgetAssociatedFileInjectorgetImageHeightFieldNamegetProcessedTypeNamegetOutputParameterTypegetOutputParameterTypeNamegetIntArrayStringgetIdentifierFromFileNamegetImageWidthFieldNamegetProcessorNamegetObjectArrayStringgetProcessorBuilderNamegetFloatArrayStringgetDataTypegetArrayStringgetGroupClassParameterTypebuildFieldsbuildConstructorbuildProcessMethodbuildCloseMethodbuildStaticNewInstanceMethodsbuildInnerClasstakeLowestOneBitcountLeadingZeroBitsletIfPresentpostRegisterHooktoExecutionEnumgetManifest findOriginalManifestFilePositionmergeManifestssetInjectableValuesgetLayoutInfoArtifactTypecreateArgumentsgetModuleTypebuildInputArgs
initLoggercollectResourceswriteBaseClassesgetRPackageProviderclearLoggergetFeatureNamecomputeFeatureNamesconvertToStringremoveVariantNameFromIdencodeCapabilitiesInIdtakeHighestOneBitgetResOffsetForaddFeatureSplitgetFeatureNameFor	toBuilderrecordTaskActiongetProguardSeedsOutputsetBootClasspathForCodeShrinkergetProguardConfigurationOutputgetMissingKeepRulesOutputfilterMissingFilesshrinkgetProguardUsageOutputlimit
rotateLeftwithThreadswithGradleWorkersisManifestRequiredButNotPresentsetSignerConfigsetSigningConfigurationcreateSigningConfigcreateSigningConfiguration
toPasswordcalculateActionprocessDirectoriesgetCorrespondingInstrumentedJarcreateUnitTestTaskscreateAndroidTestTaskscreateMainVariantTasksmaybeCreateJavacTaskcreateTasksrotateRightgetExtractApksAnchorTaskNamegetJoinedString+getRecommendedNumberOfBucketsBasedOnWorkersgetNumberOfBuckets(getMaxNumberOfBucketsBasedOnDexFileLimit
getDexDirsconfigureTaskInputs populateAssetPacksConfigurationsgetCreationAction"getLocalDeploymentRuntimeSdkConfigwriteAarMetadataFilewriteAppMetadataFileconfigureTaskOutputstoIdStringscountTrailingZeroBitsreportToConsole"extractApkFilesBypassingBundleToolgetDeviceSpectoDexParametersfloorDivmergeInputsToLocationmergeInputscomputeExcludeListprocessLocalJarsgetDefaultExcludescompressBundleaddCodeTransparencySigningapkFromconfigureVariantPropertiesloadSigningConfigVersionsloadSigningConfigDatasaveSigningConfigDatacreateSigningOverridesaveSigningConfigVersions	copyFilesfromProjectJavaResJarsgetProjectJavaResgetInputArtifactgetBundlePathsplitBygenerateApkDatagenerateUnbundledWearApkDatagenerateApkDataEntryInManifestsetSerialOptionaddHybridFolderhasFeatureDexFiles
forceRerun
isSameFile+isSigningConfigUsingTheDefaultDebugKeystore"createDefaultDebugKeystoreIfNeededcomputeFilecopyFromFoldercopyFromJarcopyInputFileToOutputtoAbiRootedPathcleanUpTaskOutputsgetArtifactFilescomputePathToSupportLibfindPathsToSupportLibscountOneBitsparseEmulatorCheckConfigparsePolicygetChildByTagNameparseConfigparseInstallerCheckConfigparseLicenseCheckConfiggetProjectNativeLibsgetSubProjectNativeLibsgetExternalNativeLibsconfigureObfuscationMappingFilegetDexForExternalLibscanRunIncrementally
getChangedverifyNestedResources
isAcceptedconfigureWorkerActionParamscreateAssetPackTaskscreateGenerateMicroApkDataTaskhandleMicroAppcreateSoftwareComponentwriteLintModelMetadataFileprojectHasAnnotationProcessorsgetExternalLibJavaResgetSdkMetadataFromAsargetRuntimeEnabledConfigMapsetPreserveDefinedOption
invokeAaptgetBucketsToMergegetImpactedBucketscreateScriptEvaluatorgetFixedClasstransformJarsetupScriptConfigurationprocessClasses	doFullRundoIncrementalRungetPublishedCustomLintCheckstoVersionMap
storeProtoloadXMLgetPlatformRulesplatformEvaluationConfigurationcreateScriptCompilerloadMergeStatesaveMergeStateappendNumberedErrorMessagescheckAarMetadataArtifactgetApiIntFromStringgetFeatureTransitiveDepsFilescheckAndUpdateLibraryMapapplyProguardConfigForNonTestapplyProguardRulesconfigureScriptDefinitionsapplyProguardDefaultsForTestremoveIfAbsentfindFunctionreconcileDefaultProguardFileregisterAarToRClassTransformdoExtractResourcesaddFeatureProguardRulesextractUniversalApkgenerateUniversalApkBundlesaveGoldenImagegetProgramResourcegetClassDescriptorscreateDelegatedeterminePrioritygetAssetPackManifestFiles)maybeCreatePreviewlibCliToolConfigurationgetLibSubDirinitMappingStategetMappingStatecomputeUpdatesFromDirtoIncrementalInputtoNonIncrementalInputtoInputscomputeFilesFromJarcomputeFilesFromDircomputeUpdatesFromJarmissingGitFileMessagewriteErrorInOutputduplicateClassMessagecopyFilesIncrementallycopyFilesNonIncrementallyzipFilesNonIncrementallycreateDeviceProvidergetPrivacySandboxSdkApkFilesgetLayoutXmlFileManagercompareImagescollectDebugSymbolsgetNativeDebugMetadataFilescompressencryptcreateMethodwriteMetadatawriteCompatApkSplit
collectAllgetFileDigestgetRootComponenttoInternalRepoMetadataListgetAllFilesToProcesscomputeOutputPathgetClasspathconvertJarToDexArchivegetCurrentHashgetBootClasspathgetPreviousOutputsForJargetOutputForJarprocessClassFromInputgetDesugarGraphFiledeletePreviousOutputsFromDirsremoveChangedJarOutputsifPreviousStateHasAllInputFilesconvertToDexArchive	doProcessassociateIndexedrunFullTaskrunIncrementalTaskisLayoutFile$canResourcesBeProcessedIncrementallycanBeProcessedIncrementallycomputeClasspathFiles,writeRuntimeEnabledSdkTableFromRuntimeConfig#generateRuntimeEnabledSdkTableBytesprocessSingleactOnMatchingZipEntriesextractNestedNativeLibsextractNativeLibscreateClasssetDisplayEmulatorOptiongetPrivacySandboxSdkApksFilescompilerFlagslistgetViewFromCachecreateTestRunnerputViewToCache	initCachegetSubFoldertoAnalyticsassertNoTvOrAutogenerateSystemImageErrorMessagecomputeImageHashgenerateAdditionalSplitApkgetPathStringgetOrderedFileTreeparseTargetHashcreateTargetSdkVersionvalidatePreviewTargetValueanalyticsEnabledProvider	loadCacheplatformNameisAddongetPathToComponentgetModuleComponentsimmutableListBuildertoImmutableMaptoImmutableSetimmutableMapBuildertoImmutableListcheckDesugarJdkVariantcheckDesugarJdkVersionparseDesugarJdkVariantgetGlobalSyntheticsInputgetBuildSrcPluginsenforceMinimumVersionOfPlugingetBuildscriptDependenciesenforceMinimumVersionsOfPluginsgetFilteredFilesfindMatchedArtifactfromPreAndroidXDependencycreatePublishingInfoForLibrarycomputeFlavorDimensionAttributecreatePublishingInfoForAppensureComponentNameUniquenesscomputeBuildTypeAttributeisVariantSelectedExplicitlyensureUsersInputCorrectnesshumanReadableMessagegetDesugaredMethodsgetArtifactCollection#getD8DesugarMethodFileFromTransform!registerDesugarLibConfigTransformregisterDesugarLibLintTransformgetDesugarLibLintFromTransformgetDesugarLibJarFromMavengetDesugarLibDependencyGraphgetDesugarLibConfigurationgetDesugarLibConfigFilegetDesugarLibConfig getDesugarLibConfigFromTransformgetDesugaredDesugarLibisKotlinAndroidPluginAppliedaddPluginOptionaddPluginClasspath)recordKotlinCompilePropertiesForAnalyticsparseKotlinVersion#getProjectKotlinPluginKotlinVersion%findKaptOrKspConfigurationsForVariant getKotlinPluginVersionFromPlugin)isKotlinPluginAppliedInTheSameClassloadergetKotlinAndroidPluginVersiongetLanguageVersionUnsafeconfigureKotlinCompileTaskssyncAgpAndKgpSourcesisKotlinKaptPluginAppliedaddComposeArgsToKotlinCompilerecordKgpPropertiesForAnalyticsisKspPluginAppliedfromDisallowChangessetDisallowChangestoDexParametersForWorkerssyncIssueKeyFromreadDesugarGraphwriteDesugarGraphlaunchProcessinggetDexArchiveBuildermessageToStringreceiveMessagemachineReadableMessagewriteReplaceisExperimentalpatterngetGlobalCacheImplgenerateClassSyntheticPartscleaninterceptClassBuilderFactorynewClassBuildergetCallingSitecheckAndSet	newMethodprovideCompilerRtLibraryfinalLinkCommandsfilterStaticLibrarieshasIssuepreLinkCommandsreportRemainingIssuesgetAllIssuesAndClearwithJavaPluginpublishLintArtifactgetJavaPluginExtensioncreateProjectServicesregisterTasksdoApply$getVersionCheckOverridePropertyValueregisterServicesvalidateInput
failLocked	componentprintScopeStructuremaybePublishToMavengetContributedVariablesgetMemberScopegetContributedDescriptorscreateSettingsOptionsbasePluginApplycheckMinJvmVersionwithProjectcheckPathForErrorscheckPluginsCompatibility"createAndroidJdkImageConfigurationchunked
removeLastisPackagePublishedregisterModelscreateVariantFactorycheckSplitConfigurationcreateAndroidJarConfigcreateVariantModelcreateAndroidTasksfindHighestSdkInstalled"createAndroidTestUtilConfigurationgetProjectTypeV2createTaskManagerdoInitExtensionFromSettingspluginSpecificApplycreateUnitTestComponentwindowedcreateAndroidTestComponent getNamePrefixedWithAndroidTargetgetCompileSdkVersion!getAndroidManifestDefaultLocationforMainVariantConfigurationfilterInPlacecreateVariantDependenciesconfigureDisambiguationRulesgetProfilingModeTypeexecutionFinishedexecutionStarted	isStartedwaitTimefillSpanRecordgetTaskStateremoveFirstminusElementremoveLastOrNullzipWithNextminusAssignregisterProjectComponentsdirectlyFromZipaddDataFlowGraphaddLinkDependencies initializeFromAndroidVariantTaskinitializeWith$initializeFromProfileAwareWorkActioninitAllPropertiesreconstructProfileBuilderaddManifestAddendmergeToVariantBuilderaddIrgetWorkerRecordprocessFactorygenerateRsaKeyPair
createCertwritePemFilegetProjectIdconfigureAnalyticsServicerecordTaskNamesgetProfileDircollectTaskMetadatarecordGlobalPropertiesrecordPluginsallocateRecordIdrecordBlockAtConfigurationrecordBlockAtExecutioncreateMemorySamplegetFinalProfilecreateAndRecordMemorySamplemaybeGetJarNameaddIncludedBinaryrecordTaskExecutionSpangetVariantIdwriteRecordgetTaskExecutionType'fromExperimentalPropertiesSigningConfigfromDslSigningConfiggetKeyPasswordHashgetStorePasswordHashfromProjectOptionsfromSigningConfigmavenCoordinateconfigureOnDemandDisabledaddNativeBitcodeinstantiateAnalyticsServiceconvertToParamsaddSpansetTaskStartTimeminimumWaitTimeallWorkersFinishedsetTaskWaitingsetTaskEndTimewriteTaskSpan	addWorker	fileCountscheduleTestsrunUtpTestSuiteAndWaitisPassedOrSkipped	shardNamerunUtpTestSuitecreateUtpTempDirectorygetUtpPreferenceRootDirgetPlatformErrorMessagehasEmulatorTimeoutExceptiongetExceptionFromStackTracecreateUtpTempFileforShardcreateRetentionConfigresolveDependenciesmaybeCreateUtpConfigurationsdeclarationscreateEmulatorControlConfigmergeTestSuiteMetaDatamergeTestStatusmergePlatformErrorcreateJwtConfigcreateTokenConfigfindGrpcInfo%computeRegistrationDirectoryContainergetUid0findAdditionalTestOutputDirectoryOnManagedDevice!queryAdditionalTestOutputLocation)findAdditionalTestOutputDirectoryOnDevicegetApiLevelgetLanguageSplitsgetApiCodeNamegetSupportsPrivacySandbox
getDensity	getRegiongetLanguagegetConfigForisArmstartServercreateServerBuilder!createAndroidTestDeviceInfoPlugingetTestCoverageFilePathcreateServerConfigProtocreateLocalDeviceProvidercreateIceboxPlugintoExtensionProtocreateGradleManagedDevicecreateTestResultListenercreateTestFixture createAdditionalTestOutputPlugincreateAndroidTestLogcatPlugincreateTestDriver%createRunnerConfigProtoForLocalDevicecreateSingleDeviceExecutorcreateGradleDeviceProvidercreateAndroidTestPlugincreateEmulatorControlPlugincreateLocalDevice'createRunnerConfigProtoForManagedDevicecreateAndroidTestCoveragePlugincreateApkInstallerPluginrecordTestResultEvent checkForOtherArchitectureMessagecheckFor32BitSuggestioncheckAtdSuggestionsuggestValidSourcecheckAllSourcesSuggestioncheckForOtherApiLevelSuggestiongetTestedApks*runUtpWithRetryForEmulatorTimeoutExceptiongetExtractedSdkApkspackageMetadatatoPreviewResponsegetIdForSerialgetDevicePropertyisPackageManagerStarted
killDevice findAllDeviceSerialsWithIdPrefix
allSerialsrunAdbShellrunWithTimeoutfindDeviceSerialWithIdisBootCompleted
getTestApk	printTestgetPropertiesAttributessaveResultsprintImagescreateOutputResultStreamprintTestResults
signatures	debugInfocreateProductFlavorCombinationsvalidateFlavorDimensionscombineFlavorsAndBuildTypescomputeVariantsWithFlavorscomputeFlavorlessVariantsvalidateVersionCodes%getBuildAuthorSpecifiedDefaultFlavors'getBuildAuthorSpecifiedDefaultBuildTypefinalizeDefaultVariantDslcomputeDefaultVariantassertMatchGoldenpackageMetadataPartsrestrictEnabledOutputscheckSplitsConflictspopulateMultiApkOutputsbodiescomputeOutputsstringsirDeclarationtypescheckWhitespaceaddSigningConfigaddBuildType	checkNamecheckPrefixbodylibraryComponentBuildertoRegistrationcreateVariantApicreateTestFixturescreateAndroidTestcreateUnitTest$computeMultiVariantComponentBaseName
reportsDircomputeBaseNameWithSplitsgetGeneratedResourcesDirgetBuildSubDircomputeFullNameWithSplitsgetIncrementalDirgetDirectorySegmentsintermediatesDircomputeBaseNamegeneratedDirtoAndroidTargetgetConfiguredFiltersaddJavaSourceFoldersToModel
getFiltersregisterResGeneratingTaskgetGeneratedBytecode"registerPostJavacGeneratedBytecode!registerPreJavacGeneratedBytecodecalculateFiltersregisterGeneratedResFoldersrunOncegetBuildService
copyObjectgetBuildServiceNamecheckSameAgpVersionlibraryMatchcalculateSSIMgetVariancesblueisWindowWhitegreencomputeWindowSizeindexFromXAndYSSIMredgetMeansgeneratePixelDiffImagegetIntensitydrainFuturescalculateLintHeapSizeparseMemorySize#calculateMaxParallelUsagesInProcesscalculateMaxParallelUsages&calculateMaxParallelUsagesOutOfProcessgetLintParallelBuildServicegetTotalPhysicalMemorytargetStringdownloadDependencies
hostStringhostTargetStringhostTargetList
targetListhostListgetAapt2ExecutablePath
getManagercomputeMaxAapt2Daemons"getClassesHierarchyResolverBuilderhashJarsresolveClassgetErrorFormatModegetAapt2ExecutablegetAaptDaemonuseAaptDaemonlinkgetSymbolTablesCacheddropSymbolInternerdropSymbolTablesloadClasspathgenerateReport
analyzeAllinitializePropertyinitializeListPropertyinitializeNullablePropertydelayedLockcompileModuleDescriptorlinkJmodsIntoJdkImagecreateJmodFromModularJarfromProjectProperties$getDefaultDebugKeystoreSigningConfigcreateDefaultDebugStoregetDefaultDebugKeystoreLocationgetProvidedClasspathaddEdgecheckConfigurationAlignmentsinitExcludedinitFilteredFileCollectioninitFilteredArtifactsgetFilteredFileCollection	getActionaddAttributeToContainertoAttributeMapStringaddAttributesToContainergenerateRClassJargetJetifierIgnoreListinstrumentFilecleanTransformOutputFileinstrumentJar	isJarFiletransformDirectorygetInstrumentationActionsetUpTestSourceSetcheckForUnconfiguredSourceSetscreateConfigurationsetUpSourceSetexecuteActiongetConfigDescrunBuildableArtifactsActions createConfigurationsForSourceSetgetJdkIdgetJavaHomeregisterJdkImageTransformgetJdkImageFromTransformmakeModuleJarmakeModuleDescriptorJavamakeJmodFilemakeModuleInfoClassparseVersionStringgetConfigurationDisplayPathsortDescendingreduceOrNull	mergeJarscopyEntryTocopyAllClassesJarsTogenerateRClassJarFromRTxtisClassesJar registerAsmTransformForComponentreversedArraycheckValidArtifactgenerateModuleDescriptoroptionalExe	createJarcopyJrtFsJarcomputeDexDirName"registerDexingOutputSplitTransformcomputeGlobalSyntheticsDirNameregisterTransformWithOutputTypecompileKotlinwriteCompiledClassesToZipcompileJavacheckEmptyJargetFileToIds	foldRightgetFileCollection
getPackageperformTransformisLegacySupportLibDependency%skipAndroidArchDependencySubstitutionisAndroidXDependency&skipDataBindingBaseLibrarySubstitutionreplaceOldSupportLibrariesneedsClasspathneedsDesugaringuseFullClasspathconfigDirMatchesVersionsetUpfilterNotToisArtifactTypeExcluded/isArtifactTypeSubtractedForInstrumentationTestscreateForKotlinMultiplatformgetIncomingRuntimeDependenciescomputeArtifactCollection$getArtifactCollectionForToolingModel'checkComputeArtifactCollectionArgumentswriteListToFile
maybeMatch
instrumentorEmpty
sliceArrayinitRemovedFilesinitFileCollectioninitArtifactResultfilterIsInstanceTomaxOfOrNull'registerRecalculateStackFramesTransform-registerGlobalRecalculateStackFramesTransform3registerRecalculateStackFramesTransformForComponent3configureKotlinTestDependencyForUnitTestCompilation;configureKotlinTestDependencyForInstrumentedTestCompilationtestFrameworkCapabilityOfgetOutputArtifactAttributesregisterTransformIfAbsentsortedByDescendinggetPermissionNameensureSuffixgenerateManifestClassgetCustomPermissionsgenerateManifestPermissionClassgenerateManifestJargenerateUsingAsm
writeToJargenerateByteCodegetAarOrJarTypeToConsumetakeLastsetBuildConfigNameaddLongFieldsetNamespaceaddIntFieldaddBooleanFieldaddStringFieldsetOutputPathflatMapIndexedtoSpecshuffleaveragereversedvariantSpecgetVariantMapgetVariantPublishingSpecinstantiateSpecBuilderconfigureFromgetOriginalFileForsaveAttributionDatagetExcludedClassListcombineWith	saveToDirgetUniquePartialResultsFileNameisPartialResultsFilegetAllPartialResultsmaxByOrNullgetArtifactView	toHashSet
groupingByaddConfigurationminOfOrNullgetDslServicesconfigureTransforms	minOrNullinitBuildAnalyzerServicegetTaskClassName	addResultwriteResult#getTestFixturesCapabilityForProjectisProjectTestFixturesCapabilityisLibraryTestFixturesCapability*addSourceSetsThatShouldBeResolvedAsAndroidsortedArrayifEmptyfoldRightIndexedserviceNotFoundError
getServiceregisterServiceAsCloseablesaveClassDatafirstNotNullOfOrNullwarnAboutClassNotOnTheClasspath getCommonSuperClassForArrayTypesgetNumberOfCharInPrefixisAssignableFromgetCommonSuperClass"getJavaMajorVersionOfCompiledClassgetParamsImplClassloadTransformFunctionconfigureAndLockgetSourceFileKeygetSourceCachesgetAllSuperClassesaddDependenciesSourcessortedBymaybeLoadClassDataForClassloadClassDataForVisitorgetAllInterfacesInInternalFormdoGetAllSuperClassesdoGetAllInterfacesgetAllInterfaces getAllSuperClassesInInternalFormaddProjectSourcesisClassLoadedgetClassDataIfLoadedgetClassData extractPrivacySandboxPermissionssaveEntryToJardoInstrumentClassdoInstrumentByteCodeinstrumentModifiedFileinstrumentClassesFromJarToJarinstrumentClassToJarperformProfilingTransformationsinstrumentClassToDirincludeFileInInstrumentation)instrumentClassesFromDirectoryToDirectorygetClassWriterFlagsgetClassReaderFlagsvalidateSdkPathgetSdkPathPropertygetSdkLocationgetSdkDirectoryupdateCacherunWithMultiProcessLockingretrieveSystemImageloadSnapshotIfNeededdefaultHardwareConfig	createAvdgetHardwareProfilescreateOrRetrieveAvd	getSdkDirbuildBuildToolsasDslparsePackagewarnIfCompileSdkTooNewparseAdditionalLibrariesparseOptionalLibrariesparseAndroidVersionprojectIsolationRequestedsetTargetCompatibility$finalizeSourceAndTargetCompatibilitysetSourceCompatibilityparseJavaVersioncreateRunUnitTestTaskgetSettingsControllergetSdkLibDatagetDownloadercreateAddressgetSourceSetForModelgetSourceSetgetNestedSourceSetcreateLibraryAssetsTaskcreateComponent!createCompileLibraryResourcesTaskcreateMergeResourcesTasksreduceRightIndexedOrNullgetEmulatorCommand ensureEmulatorVersionRequirementstartEmulatorThenStopcheckSnapshotLoadablewaitUntilTimeoutgetEmulatorExecutablegenerateSnapshotcreateMockableJarTaskcreateTestDevicesTaskscreateScreenshotTestTasksjoinTocreateConnectedTestForVariant%managedDeviceGroupAllVariantsTaskNamecomputeAbiFromArchitecturecomputeAvdNamesetupTaskName computeManagedDeviceEmulatorMode'managedDeviceGroupSingleVariantTaskNamegetManagedDeviceAvdFoldersanitizeProfileName managedDeviceAllVariantsTaskNamecreateBundleTaskForTestFixturesskipDependencyCheckregisterDependencyCheckmapTosupportBlasLibFolderProvideraidlFrameworkProvideraidlExecutableProvidersupportNativeLibFolderProvideradbExecutablesplitSelectExecutablegetFileFromTargetflatMapIndexedTorunningFoldIndexedminOfminOfWithOrNulltoCharArraytakeLastWhilesortedDescendingdropLastWhilecopyIntoindexOfFirstmaxOfWithOrNullplusElementmaxWithOrNulladdFlavorStrategy,configurePrivacySandboxSdkConsumerTransformsconfigureGeneralTransformssetUpAgpVersionStrategy/registerIdentityTransformWhenJetifierIsDisabledsetupModelStrategy+configurePrivacySandboxSdkVariantTransformshandleMissingDimensionsconfigureVariantTransforms configureDependencySubstitutionssetBuildTypeStrategyconfigureDependencyChecks'configureCalculateStackFramesTransformsconfigureJacocoTransformssetupFlavorStrategy$configureAttributeMatchingStrategiescreateTasksForTest%configureKotlinPluginTasksIfNecessary&configureKaptTaskInScopeForDataBindingaddDataBindingKtxIfNecessarycreateAnchorAssembleTaskscreateTasksForVariantcreateDependencyAnalyzerTaskcreatePostApiTaskscreateReportTasks&configureKotlinKaptTasksForDataBinding!addBindingDependenciesIfNecessaryaddTestFixturesComponentcreateVariantsFromCombinationfinalizeAllVariantscreateTestComponentscreateCompoundSourceSetscreateTestFixturesComponentaddTestComponentfinalizeAllComponentssetHasCreatedTasksgetFlavorSelectionlockVariantPropertiesgetLazyManifestParsercreateVariantsaddExtraSourceSetsensureLoadableSnapshot+deleteLegacyGradleManagedDeviceAvdDirectoryreduceRightOrNullminByscanIndexedavdProviderreleaseLocksgetCurrentLockCountwriteLockCounttryToAcquireLockscreateDefaultLockFilerunningReduceIndexedloadedSuccessfullycheckBuildToolsRevisionsumByloadSdkComponentsaddResourceSets	getResSetinitFromVariantScopeaddLibraryResources	partitioninitFromCompilation	maxOfWithcreateApkProcessResTask!maybeCreateResourcesShrinkerTaskssetJavaCompilerTask$registerLibraryRClassTransformStreamcreateDefaultPreBuildTask createNonNamespacedResourceTaskscreateGenerateResValuesTaskcreateProcessJavaResTaskcreateMergeAssetsTaskassociateTocreateProcessTestManifestTaskcreateJavacTaskcreateBuildConfigTask'setDataBindingAnnotationProcessorParamsdoCreateJavaCodeShrinkerTaskassociateWithindexOfLastcreateTasksBeforeEvaluatecreateVerifyLibraryResTaskcreateDexMergingTaskscreateAidlTaskcreateMlkitTaskcreateProcessResTaskgetClassPathUtils!createCoreLibraryDesugaringConfighandleJacocoDependenciescreateValidateSigningTaskbasicCreateMergeResourcesTaskcreateCompileAnchorTaskcreateDexTasks!publishArtifactsToDynamicFeaturesmaybeCreateJavaCodeShrinkerTaskgetFeatureFileName!createDataBindingTasksIfNecessarygetManagedDevicesgetDeviceGroups
asSequence&maybeCreateTransformClassesWithAsmTask$maybeCreateCheckDuplicateClassesTaskconfigureTestDatacreateR8TaskcreateAssembleTaskcreateMergeManifestTaskscreateRenderscriptTaskcreateShaderTaskmaybeCreateDesugarLibTaskcreateDependencyStreamscreateMergeJavaResTaskcreatePostCompilationTaskscreateVerifyLibraryClassesTaskcreateMergeApkManifestsTaskcreateMergeResourcesTaskcreateTestDevicesForVariantcreateMergeJniLibFoldersTaskscreatePackagingTaskversionedNdkHandlerallSystemImageHashesinstallCmakesdkImageDirectoryProvider	ndkLoaderaddTestVariantaddUnitTestVariantgetMockableAndroidJarrunResourceShrinkerAnalysisisAppCompatClassmaybeWearAppReferenceasItemmaybeAndroidResUrlfindFromReferencefindFromItemfillFromXmlNodefindFromFilefindReferencesfillFromConstraintReferencedIdsfillFromAttributefindAndroidResReferencesInTextcopyOfRangeassociateByTo	flatMapTo	maxOrNullshouldIgnoreFieldtoSourceClassNameisValidResourceTypeisResourceClassreduceIndexedprocessResourceToolsAttributesprocessRawXmlrecordUsagesFromNodegatherResourceValuesisMethodMapping extractObfuscatedResourceClassesextractClassMappingrecordObfuscationMappingsisClassMappingextractMethodMappingsliceelementAtOrElseresolveOriginalClassaddClassMappingresolveOriginalMethodaddMethodMappingentriesSequenceentryIdFromIdentifiertypeIdFromIdentifierpackageIdFromIdentifiernullOutEntriesWithIdscalculatePackageMappingsisJarPathReachablerewriteResourcesInApkFormatcopyToOutput removeResourceUnusedTableEntriesrewriteResourcesInBundleFormatrewriteResourceZipreplaceWithDummyEntrygetUnusedResourceCountdeviceProviderwrapJavaSourceSet
testServerregisterJavaArtifactdefaultPublishConfig#registerProductFlavorSourceProvidervariantFilterregisterBuildTypeSourceProvidersetPublishNonDefault!registerMultiFlavorSourceProvidercheckWritabilityregisterArtifactType
dexOptionsdisableWriteresourcePrefixsetCompileSdkVersiontargetProjectPathtargetVariantaidlPackageWhiteListaidlPackagedListincludesflagsForClassRuleMessageillegalTokenMessageillegalTokenunexpectedTextAfterRuleunexpectedCharemptyFlagsForMethodRuleMessage
whitespaceunexpectedEndonErrorisHot	isStartupisPostStartup	forNumber
extractKeynonEmptySpanbuildAndClearsplitParameterslistComparatorApkDexFileforEachIndexed
printFlagsmapIndexedNotNullToaddMemberFromParserreadHumanReadableProfileOrExitgetClassDescriptorgetByteStreamextractNamecompatibleWithdumpProfiledeobfuscatewildCard	flushPartClassFileResource getClassDescriptorFromBinaryNameextractProfileAsDmwriteDmasDexFileDataparseClassDefinitionPoolparseDexFile	parseSpanparseTypePoolparsePrototypePoolparseMethodPoolinvalidDexFileparseStringPoolgetTypeList
checkMagicisCompressedbuildDexMetadatabuildArtProfileWithDexMetadata
ArtProfilereadProfileVersionparseIdentifierparseFqnObfuscationMapparseMemberLinemaybeSkipRange
compressedwriteCompressedwriteUInt32readCompressed	writeUIntmutf8
writeUInt8writeUInt16
readUInt16readUInttoIntSaturated	readUInt8
readUInt32
profileKeyenforceSeparatorprefixIterator
printExact
fuzzyMatchhasFuzzyMethodssumByDoublegetClassFileResourcesfoldIndexed
parseFlagswithSnippetHumanReadableProfile	parseRuleparseTargettoDexMethodparseReturnTypeparseMethodNameisValidMethodFlagreadFlagsFromBitmapV015SgetMethodBitmapStorageSizegetHotMethodRegionSizeskipInlineCacheV015SskipInlineCacheUntilV010PwriteLineHeaderwriteIntsAsDeltasreadFlagsFromBitmapflagBitmapIndexreadMethodBitmapwriteMethodBitmapmethodFlagBitmapIndexwriteMethodBitmapV015SreadIntsAsDeltasgetMethodBitmapStorageSizeV015SwriteLineDataroundUpUsingAPowerOf2readHotMethodRegionreadMethodBitmapV015SwriteMethodsWithInlineCachesisPowerOfTwosetMethodBitmapBitwhichPowerOf2skipInlineCachessetJniDebuggablezipAlignEnabled
debuggablesetDebuggablerenderscriptDebuggableminifyEnabledsetZipAlignEnabledsetMinifyEnabledsetRenderscriptDebuggablejniDebuggablereduceRighttoSortedSetaggregateResultsaggregateProjectResults	groupByToconvertFromV1FormatconvertFromV2FormatrenderscriptSupportModeEnabledsetVersionNamesetRenderscriptNdkModeEnabledsetMaxSdkVersion	cloneFromsetVersionCodemergeVersionNameSuffixversionName	dimensionsetResourceConfigurationsmergeWithHigherPriorityFlavortestInstrumentationRunnermergeApplicationIdSuffixversionCodetestApplicationIdrenderscriptNdkModeEnabledchooseNotNull%setRenderscriptSupportModeBlasEnabledaddResourceConfigurationjoinWithSeparatoraddResourceConfigurations!setRenderscriptSupportModeEnabledapplicationIdsetTestApplicationIdsetTestInstrumentationRunner"renderscriptSupportModeBlasEnabledwriteTasksSharingOutputEntryreadBuildInfogetAttributionFilereadJavaInfowriteTaskToTaskInfoEntrywriteGCEntryreadTaskToClassEntryreadTaskCategoryIssuesgetPartialResultsDirreadTasksSharingOutputEntrywriteTaskCategoryIssueswriteJavaInforeadTaskToTaskInfoEntryreadTaskCategoryIssuereadGCEntrywriteBuildInforeadTaskCategory
asIterablechoosePathInOutputapiVersionFromStringaddFileChangeaddZipChangesclasspathToRelativeFileSetushortToIntreadZipEntries
uintToLong
readBuffer
initBufferreadEOCDFromBufferreadCentralDirectoryRecordmapIndexedToisValidZipEntryNamezipEntryisValidZipEntryPathagpReferenceDocsUrlgenerateMissingRulesFileisLegacyMultiDexModeisPreDex
isMultiDex'getSortedRelativePathsInJarWithContentsgetSortedFilesInDirgetSortedRelativePathsInJargetClassFileswireMinimalStartupOptimizationgetR8VersionwireArtProfileRewritingrunR8getDexEntriesWithContentsrunL8associateWithTo$getGlobalSyntheticOutputRelativePathgetDexOutputRelativePathcreateNewZipEntryrunTraceReferenceToolcreateD8DexBuilderfindLastaddProgramResourceProvidermapNotNullTogetNodesgetDirectDependentsoriginToFilemergeExtraTraceFilesstoreToFiledeInitializedAnalytics cleanUpExtraChromeTraceDirectorywriteAnalyticsmakeMessageprocessLibraryMainSymbolTablewriteSymbolListWithPackageNamewritePublicTxtFilemakeCompileCommandmakeConvertCommandgetNoCompressRegexmakeLinkCommandhandleErrorasListcheckStartedshutDownminByOrNullsortedArrayDescendingreportWarninggenerateRPackageClassisUnstableAndroidAttrgenerateResourceTypeClassexportToCompiledJavawriteRPackagesgenerateOuterRClasssetStorePasswordsetStoreTypedebugSigningConfigsetKeyAliassetStoreFilesetKeyPasswordcopyToSigningConfigtakeExpiredDaemonsFromPoolleaseDaemonnewAaptDaemonreturnProcessstatsmaintainmaxOfgetNewAlignment
deleteFilehasPendingChangesWithWaitfilterIndexedToerr
sortedWithsumOfstopQuietlyreduceRightIndexedoutonEachIndexedaddBuildConfigFieldsaddResValuesaddResValueapplicationIdSuffixsetApplicationIdSuffixmanifestPlaceholderssetVersionNameSuffixversionNameSuffixsortedcompileBCFilescreateSupportLibFilegetLinkerArgsgetBaseRenderscriptLibFoldergetArchSpecificRawFolderdoMainCompilationcreateSupportObjFilecreateSupportFilesHelpercreateSupportFilesgetSupportJarcomputeToStringcompareWithoutVersioncomputeHashCodecomputeVersionLessIdsetAllowReservedPackageIdcomponent34isListResourceFilessetLocalSymbolTableFilesetUseFinalIdssetSymbolOutputDir	setSplitssetProguardOutputFilesetExcludeSourcessetDependentFeaturescomponent35component36setComponentTypesetStaticLibraryDependenciessetPreferredDensitysetPackageId
setOptionssetMergeBlameDirectorysetGenerateProtos setMainDexListProguardOutputFilesetIntermediateDirsetConsumeStableIdsFilesetAndroidJarPathsetResourceOutputApksetManifestFileaddResourceDirectoriessetUseMinimalKeepRulessetSourceOutputDirsetLibrarySymbolTableFilessetUseConditionalKeepRulessetCustomPackageForRsetAndroidTargetsetEmitStableIdsFile
setImportssetResourceConfigsaddResourceDirsetIdentifiedSourceSetMapisStaticLibrarysetManifestMergeBlameFilefilterTogroupBycontentToStringrandomcontentHashCode	minOfWithreduceIndexedOrNullmaxBy	associatestreamCompileCommandsImplstreamCompileCommandsV2firstNotNullOfminWithOrNullrandomOrNullparsePriorityparseThreadIdparseEpochSecondsgetPackageNameparsePidgetAbiFromHashisValidSystemImageHashfindClosestHashesgetVendorFromHashcomputeOffsetcreateToolchain
dceOptionstoLongArray	setTargetjvmToolchainuseCompilerVersioninvokeWhenCreatedunzipwireToolchainToTaskstoShortArrayawaitSourceSetsassociateBycreateTempFilewithZipFileSystemconfigureOrCreateisProducedFromPresetcreateKotlinExtensionexplicitApiModeAsCompilerArgtoCompilerValuegetExistingTargetgetTargetNamereportJsCompilerModewarnAboutDeprecatedCompiler
getTargetsregisterTargetObserverwasmawaitTargetsmetadatatargetFromPresetsuffixwatchosioscreateIntermediateSourceSettvoscreateIntermediateSourceSetsdefaultSourceSetsmostCommonSourceSets
writeBytes	staticLib	sharedLibforEachLinecheckDeprecatedTestAccess	getBinary
appendTextbufferedReaderchild	readBytes	writeTextappendBytescopyTodeleteRecursivelyoutputStreamreportMarkDirtyextractPrefixFromBinaryNamegetSeverityreportCompileIterationonCompilationFinishedgetCompileServiceAndPort
findBinaryperiodicAndAfterSessionCheckperiodicSeldomCheckIdeaKpmDependencyResolver
watchosX64linuxArm32HfpwatchosSimulatorArm64androidNativeX86linuxMipsel32iosX64
linuxArm64tvosX64watchosArm32linuxMips32androidNativeArm32iosSimulatorArm64mingwX64
macosArm64iosArm32
watchosX86wasm32androidNativeX64mingwX86watchosArm64macosX64iosArm64	tvosArm64watchosDeviceArm64androidTargetandroidNativeArm64tvosSimulatorArm64linuxX64IdeaSerializationContextcreateRefinesDependency,locateOrRegisterIdeaKpmBuildProjectModelTaskIdeaKpmDependencyTransformerbuildIdeaKpmVariantbuildIdeaKpmFragment"createPlatformFragmentArtifactViewcreateVariantArtifactViewbuildWarningMessageinitiateElectionsbuildIdeaKpmProjectModel3configureIdeaKpmSpecialPlatformDependencyResolutionresolveKlibcreateExternalJvmVariant"nagUserFreeArgsModifiedOnExecutiontoScriptSourcegetScriptingClasstouchExisting touchFileByWritingEmptyByteArray
isAncestor!buildPlatformResolutionAttributesartifactViewwithConstraintadditionalDependencies withPlatformResolutionAttributesbuildConstraintcreateKaptSourceSetmaybeRegisterTransformgetKaptClasspathSnapshotgetJavaOptions
pathOrName	isAndroidgetExpectedByDependenciescreateAndroidSourceSetbuildCompilerArgumentscreateSourceSetcommonJsAdditionalCompilerFlagsgetClasspathSnapshotDirgetKotlinBuildDirregisterTransformsOncegetDefaultLangSettingconfigureTaskconfigureTaskProviderwireJavaAndKotlinOutputsbuildOptionsconfigureUseModuleDetectionconfigureFromExtensionconfigureLibrarieshasSourceContextclearSourceContextclearTypeUrl	clearKindcacheOnlyIfEnabledForKotlincopyOptionsFromregisterKotlinCommonTaskregisterKotlinJVMTaskregisterKotlinJsIrTaskregisterKotlinJSTask!throwExceptionIfCompilationFailedhasOOMCauseclearSecondsaddRunListeneraddFileArgsfilterKlibsPassedToCompilertoSingleCompilerPluginOptionstoCompilerPluginOptions
clearNanoscopyFrameworkTextFilecopyResourcecopyFrameworkFilecopyTextResourcelocateOrRegisterTask
locateTaskdeleteSnapshotrestoreOutputscreateSnapshotcompressDirectoryToZipuncompressZipIntoDirectoryisDceCandidate
performDcegetTotalCountershistoryResetTofragmentSourcesCompilerArgs!createSharedCompilationDataOrNulldisallowSourceChangesvalidateCompilerClasspathwriteDependenciesFile%buildExternalDependenciesFileForTestshistoryResetisPreIrBackendDisabledisHybridKotlinJsLibraryisIrBackendEnabledvalidateOutputDirectory surroundWithSingleQuotesIfNeeded
getOrEmptyhasPodfileOwnOrParentprocessInteropvalidatedExportedLibraries*notifyUserAboutExperimentalICOptimizationsgetChangedFiles
historyGetgetHistorySizefromCodeexecuteImplwireJvmTargetToJvmwireJvmTargetToToolchainmapToJvmgetToolsJarFromJvmuseAsConvention"ensureCompilerProvidedLibPrecached#ensureCompilerProvidedLibsPrecached	needCachetoArgscreateWithProjectensureDependencyPrecachedgetRootCacheDirectorygetCacheFileNamecreateModuleFilegetFatFrameworkFamilyprocessPlistbeforerunInstallNameToolisSupportedTargetmergeBinariesrunLipomergeHeadersmergePlists	mergeDSYM/validateKotlinAndJavaHasSameTargetCompatibilityafter*overrideArgsUsingTaskModuleNameWithWarninggetClasspathChangesjavaFilesPatternFilterstackTraceAsStringrequireValidZipDirectoryPathlistDescendantsensureValidZipDirectoryPathcopyZipFilePartiallycopyPartiallyisValidZipDirectoryPathtopRealPathklibModuleNamegetDaemonOptions(castIsolatedKotlinPluginClassLoaderAwareclearJarCache
getClientswhenKaptEnableddefaultBitcodeEmbeddingModegetDefaultTestDeviceIdparseFromXcodebuildenableKgpDependencyResolutiongetOrPutRootProjectPropertychecksumStringcrc32Checksumcrc32ChecksumStringprobeRemoteFileLengthloadPropertyFromResources findAppliedAndroidPluginIdOrNullgetDaemonJVMOptionsformatContentLengthlifecycleWithDurationformatDurationmarkConsumablemarkResolvableisGradleVersionAtLeast%registerClassLoaderScopedBuildServicetoSetOrEmptyshowdeprecationforAllAndroidVariantsisConfigurationCacheAvailable%readSystemPropertyAtConfigurationTime)notCompatibleWithConfigurationCacheCompatisgetDependenciesCacheDirectoriescomputeDependenciesHashcheckCompilerIdlibraryFiltergetAllDependenciesreplCreateStatesetupNativeCompiler
runCommandgetResolvedArtifactsCompatcheckGradleCompatibilitydoNotTrackStateCompatonlyIfCompatdependencyArtifactsOrNullgetOwnerBuildOperationIdgetClassDisplayName
decamelizedashSeparatedNamelowerCamelCaseNameclearAnsiColorasValidTaskNamedashSeparatedLowercaseNameparseIntOrNulladdExtendsFromRelation!addGradlePluginMetadataAttributesconfigureExperimentalTryK2warnExperimentalTryK2IsEnabled
lazyFutureCompletableFuturefutureExtensionlistFilesOrEmptyabsolutePathWithoutExtensiontoUri
newTmpFilerelativeToRootisKotlinFilepathsAsStringRelativeTofileExtensionCasePermutationstoPathsArrayrelativeOrAbsolutewithTemporaryDirectorymaybeRegisterclassesFqNamesByFilessyncExceptionsAreNotEmpty/runProjectConfigurationHealthCheckWhenEvaluated"runProjectConfigurationHealthCheckarchiveFileTree	setupRepo
removeRepodownloadAndExtractdownloadIfNeededlastExternalVariantOrSelfnativeStdlibCoordinatesIdePlatformSourcesResolverIdeMetadataSourcesResolver	KlibExtraresolveMetadataresolveCInteropDependenciescreateCinteropLibraryDependencycinteropGroupAndModuleresolveSourceDependencies&resolveNativeDistributionLibraryForIdeisJvmAndAndroidMainisAndroidMain	isJvmMainlistPropertyWithConventionsetPropertyWithLazyValuechangingpropertyWithNewInstancechainedFinalizeValuenewPropertysetPropertyWithValueproviderWithLazyConventionoutputFilesProviderpropertyWithConventionnewFilePropertyfilesProviderchainedDisallowChangeschainedFinalizeValueOnRead!copyCInteropFileForIdeIfNecessaryselectConfigurationlocateDependencyTask$substituteStdlibCommonWithAndroidJvm0IdeJvmAndAndroidPlatformBinaryDependencyResolver*locateOrRegisterIdeResolveDependenciesTaskIdeDependencyResolverasAdditionalArtifactResolverIdeAdditionalArtifactResolverwithAdditionalArtifactResolverideaImportDependsOnIdeDependencyTransformerIdeMultiplatformImportaddExecutionTimegetExecutionTimes!ofMetadataCompilationDependenciesnewDependencyFilesHolderofVariantRuntimeDependenciesofVariantCompileDependenciesleaseReplSessionleaseCompileSessionnotation
fromModulecapabilityStringFromModulefromModuleOrNulldisambiguateNameOmittingMainFragmentNameDisambiguation&FragmentNameDisambiguationOmittingMaincurrentBuildIdrepresentsProjectkpmNativeVariantClass!configureSingleVariantPublication configureSingleVariantPublishing!configureNativeVariantPublicationinModuleinMainAndTestinAllModulesinTestinMainrootPublicationComponentNamecopyConfigurationForPublishingcopyConfigurationownModuleNameregisterClassesTaskregisterDefaultCommonFragment addDefaultDependencyOnMainModule&addDefaultRefinementDependencyOnCommonregisterFragmentFactorysetupToolingModelBuildercreateDefaultModules'kotlinPlatformTypeAttributeFromPlatform'compilerPluginProviderForNativeMetadata!compilerPluginProviderForMetadata,compilerPluginProviderForPlatformCompilationcompilerPluginDataProvider pluginClasspathConfigurationNamecheckCanRefineaddToInputsOutputstoSubpluginOptiontoGradleCoordinatesflattenWithIndexsetModuleCapabilityisAllowCommonizerForIdemainAndTestGradleKpmJvmVariantFactoryregisterClientgetDaemonInfosetupKpmModulesPublicationscheduleShutdown"setupKotlinToolingMetadataIfNeededreplCompilegetForFragmentOrNullwithAllregisterNativeregisterCommonGradleKpmConfigurationProviderGradleKpmNativeVariantFactorywithConfigurationProviderGradleKpmCommonFragmentFactoryregisterDefaultVariantFactories"createSourcesElementsConfigurationreleaseCompileSessionreportSuccessresolveTimedattachResolvedByExtracreateSerializationContext!createAdditionalArtifactsResolver!getSourcesFromRefinesClosureAsMapgetSourcesFromFragmentsAsMap"getCommonSourcesFromRefinesClosuregetAllFragmentSourcesAsMapgetSourcesFromRefinesClosuregetFragmentOwnSources*configurationToResolveMetadataDependenciesresolvableMetadataConfigurationresolveAsGraphgetKotlinVersionisNativeHostSpecificisNativeShared$GradleKpmConfigurationArtifactsSetupdefaultModuleSuffix#GradleKpmConfigurationRelationSetup!moduleClassifiersFromCapabilitiesgetProjectStructureMetadatatoKpmModuleIdentifiertoSingleKpmModuleIdentifiermatchesModulematchesModuleIdentifierbuildSyntheticPlainModuletoKpmModuleIdentifiersmatchesModuleDependency%GradleKpmConfigurationAttributesSetupgetUsedMemory	replCheckreleaseReplSession!createKotlinNativeCompilationTaskcreateKotlinJvmCompilationTaskcacheForRequestingModuleaddMeasurement!transformFragmentMetadataTaskNamemetadataJarNamecreateExtractMetadataTask#configureMetadataResolutionAndBuild!metadataElementsConfigurationNameresolvedMetadataProviderscreateNativeMetadataCompilationcreateCommonMetadataCompilationsourceElementsConfigurationNameconfigureMetadataExposure#setupFragmentsMetadataForKpmModules.configureMetadataCompilationsAndCreateRegistry.createResolvableMetadataConfigurationForModule)generateAndExportProjectStructureMetadata+disableMetadataCompilationIfNotYetSupportedconfigureMetadataJarTaskcreateKpmModulesContainergetCountersgetResultsForModulebeginMeasure(resolveModuleDependencyAsComponentResult!registerPlatformModulePublicationplatformComponentNameinferMavenScope$registerPlatformVariantsInRootModuleconfigurePublishing!configureSourceElementsPublishing
endMeasure$resolveHostSpecificMetadataArtifactsdoResolveMetadataDependenciesfragmentsNamesVisibleByParents!createKotlinCommonCompilationTask)createKotlinNativeMetadataCompilationTasknamedAttributeCapabilitiesContainer'GradleKpmConfigurationCapabilitiesSetupresolveFriendVariantsfragmentDirectoryNamedefineNativeTargets&registerEmbedAndSignAppleFrameworkTask"registerAssembleAppleFrameworkTaskappleFrameworkDirparentAssembleXCFrameworkTaskeraseIfDefaultregisterAssembleXCFrameworkTask%registerAssembleFatForXCFrameworkTaskaddBuildListenerForXcode#ExternalKotlinCompilationDescriptorcreateXCFrameworkassembleresolveIfNotNullfatFrameworkDirExternalKotlinTargetDescriptor%ExternalKotlinTargetSoftwareComponentsetupCompileTaskconfigureIdeImportbyTargetNamelocate	onCreatedsetupRuntimeElementssetupApiElementssetupSourcesElementscreateExternalKotlinTarget&checkAndReportPreHmppDependenciesUsageisPreHmppDependency%errorGranularMetadataFalseUnsupported)errorDependencyPropagationTrueUnsupported0warningGranularMetadataFalseRedundantWithNewFlag#warnGranularMetadataTrueHasNoEffect)handleHierarchicalStructureFlagsMigration#checkHmppFeatureFlagsForConsistency3errorDependencyPropagationFalseConflictsWithNewFlag-errorGranularMetadataTrueConflictsWithNewFlag,warningDependencyPropagationFalseHasNoEffect+doHandleHierarchicalStructureFlagsMigration)checkAndReportDeprecatedSourceSetsLayouts*getMppDeprecationWarningMessageForProperty%checkAndReportDeprecatedMppProperties(reportCommonMainDependsOnOtherSourceSetsrunDeprecationDiagnostics%checkAndReportDeprecatedNativeTargets2reportTargetsWithNonUniqueConsumableConfigurations
idFromNamelossyFromModuleIdentifierfromComponentfromComponentSelectoridOfRootModulefromComponentIdidOfRootModuleByProjectPathfromDependency2KotlinCompilationDependencyConfigurationsContainerHasKotlinDependencies$KotlinCompilationSourceSetsContainerbuildKotlinTargetHierarchycheckCyclicHierarchyextendIfNotNullgetOrCreateBuildercreateSharedSourceSetOrNullapplyKotlinTargetHierarchyorNullwithTargets
clearValuelibsclearPackedversionCatalogsextclearDeprecatedhasDeprecatedclearEnd
clearStarthasEndhasStartclearSyntaxsetExtension	clearName
hasOptionsclearOptionsclearNumber	hasNumberhasNametoProtoclearPlatformreleaseInterceptedcheckContextflowCollectadditionalToStringPropsproduceImpldropChannelOperatorscollectSafelycompareAndSetallocateLocked
freeLockedWhileSubscribedsharedSourceSetName
entryPoint/getCoordinatesFromPublicationDelegateAndProjectclassify	collectTo(addKotlinToolingMetadataArtifactIfNeededcreateMavenPublicationsdependenciesForPomRewriting%configureSourcesPublicationAttributescreateRootPublicationcreateTargetPublications#configurePublishingWithMavenPublishfilterModuleNamecastCompilerOptionsTypeaddSourcesToKotlinCompileTask#addCommonSourcesToKotlinCompileTaskbaseModuleNamecastKotlinOptionsTypemoduleNameForCompilationsanitizeFileNamegetHostSpecificElementsisHostSpecificKonanTargetsSetgetHostSpecificFragments#getHostSpecificMainSharedSourceSetsgetHostSpecificSourceSetscommandcreateSlotArrayresetReplayCachetryEmit
createSlotreportUnusedSourceSetscheckSourceSets.rewritePomMppDependenciesToActualTargetModules	cinteropsresolveFriendArtifactsTaskfuseresolveFriendArtifacts originalVariantNameFromPublishedpublishedConfigurationName&buildAdhocComponentsFromKotlinVariantsjavaApiUsageForMavenScopingbinariesdropLastpublishableUsages,createSourcesJarAndUsageContextIfPublishablegetOrCreateDefaultSourceSet
hasBuildId$addSourcesJarArtifactToConfigurationallPublishableCommonSourceSetschooseForProducingProjectmainVariantpublishAllLibraryVariants filterOutAndroidVariantAttributedoCreateComponentsunitTestVariant"filterOutAndroidBuildTypeAttributecreateAndroidUsageContexts checkPublishLibraryVariantsExistinstrumentedTestVariantcreateSourcesElementsIfNeeded#filterOutAndroidAgpVersionAttributepublishLibraryVariantsisVariantPublishedclearProjectPath,exportProjectStructureMetadataForOtherBuilds%sourceSetFreeCompilerArgsPropertyNameconfigureSourceSets setupAdditionalCompilerArgumentssetupDefaultPresetsgetModulesFromPm20ProjectattributeStringbuildModulesFromProjecthasProjectPathclearProjectNamehasProjectNamegetFilteredParentAttributeclearBuildIddetectModulesfragmentByName!filterOutNonPublishableAttributesgetCapabilitiesgetDependencyConstraints	predicategetUsagegetGlobalExcludes%setupGeneralKotlinExtensionParameterssourcesJarTasksourcesJarTaskNamedapplyUserDefinedAttributes transformMetadataLibrariesForIde"transformMetadataLibrariesForBuildProjectMetadataProvidercInteropMetadataOfSourceSetscollectSourceSetMetadataOutputssourceSetsMetadataOutputsfindUsageContext1associateDependenciesWithActualModuleDependenciescollectAllDirectoryPathsgetVisibleSourceSetsconsumerRuntimeUsageproducerRuntimeUsageproducerApiUsagechooseCandidateByNameconsumerApiUsagetoPlatformCompilationData)kotlinVariantNameFromPublishedVariantName!collectAllPlatformCompilationData-getCompileDependenciesConfigurationForVariantclearProject
hasProjectclearDependencyclearResolvedBinaryDependencygenerateMetadataXmlprojectDependencycollectAllProjectsDatatoProjectOrNulladdDependencyByAnyNotationaddDependencyByStringNotation configureSourceSetTreeClassifiergetSourceSetsVisibleInParentssetupNativeHomePrivatePropertyhasResolvedBinaryDependencylistProvider+configureMetadataDependenciesConfigurations9kotlinTransformedCInteropMetadataLibraryDirectoryForBuild1kotlinTransformedMetadataLibraryDirectoryForBuildtoModuleDependencyIdentifierprocessDependency'buildModuleFromProjectStructureMetadata4locateOrRegisterMetadataDependencyTransformationTask!transformGranularMetadataTaskNamebuildProjectStructureMetadata#parseKotlinSourceSetMetadataFromXmltoXmlDocumentparseKotlinSourceSetMetadata$parseKotlinSourceSetMetadataFromJson#buildKotlinProjectStructureMetadatawriteTransformedLibrariesreadVisibleSourceSetsFilewriteVisibleSourceSets7getProjectStructureMetadataProvidersFromAllGradleBuilds registerProjectStructureMetadatatoProjectPathWithBuildNamepropertyName!getProjectStructureMetadataOrNullhasUnresolvedBinaryDependencycontainsDirectoryensureNotClosed!parseJsonProjectStructureMetadataclearUnresolvedBinaryDependency parseXmlProjectStructureMetadatacopyIntoDirectory
clearGroup
hasVersion	hasModuleclearModuleclearSourceSetName0collectAllProjectStructureMetadataInCurrentBuildgetRuntimeJars#KotlinAndroidSourceSetLayoutCheckersetDefaultDependsOn"KotlinAndroidSourceSetConfiguratoronlyIfhasGroupisAgpRequirementMet!applyKotlinAndroidSourceSetLayouthasSourceSetName
callMethodfindAndroidSourceSetfindKotlinSourceSet$getOrCreateConfiguredKotlinSourceSetgetOrCreateKotlinSourceSet'sourceSetDependencyConfigurationByScope)compilationDependencyConfigurationByScopereplaceAndroidBaseSourceSetName	clearTypehasBinaryTypecheckForCircularDependsOnEdgesawaitPlatformCompilationsrunAllChecksrunSingleCheckdefineSourceSetConfigurationsclearBinaryType
clearCausesetJsCompilerIfNecessary'getSourceSetsFromAssociatedCompilations-getVisibleSourceSetsFromAssociateCompilations$checkSourceSetVisibilityRequirements<applyTransformationToLegacyDependenciesMetadataConfigurationfindSourceSetsDependingOncreateDefaultSourceDirectorySetparseApiVersionSettings&applyLanguageSettingsToCompilerOptionsparseLanguageVersionSettingparseLanguageFeature	asMutablehasCoordinatesclearCoordinatesreadSystemPropertyValueisInIdeaSynchasCause	hasExtrasclearExtrasgetDelegate_build_createtoByteArrayfatFrameworkgetAdditionalVisibleSourceSetsgetDependenciesTransformationgetPodBuildTaskProviderwithPodspectoSetupBuildTaskNamesplitQuotedArgsgetPodBuildSettingsPropertiesasValidFrameworkNamesupportedTargetstoBuildDependenciesTaskNamecreateSyncForRegularFrameworkconfigureLinkingOptionstargetsForPlatformregisterSyntheticPodTasks'checkLinkOnlyNotUsedWithStaticFrameworkregisterPodImportTaskregisterDummyFrameworkTaskcreateSyncTask#registerPodPublishFatFrameworkTasks!injectPodspecExtensionToArtifactsregisterPodBuildTasksregisterPodXCFrameworkTaskregisterPodPublishTasksregisterPodspecPublishTaskcreateCopyFrameworkTaskregisterPodspecTaskcreateInteropsregisterPodSetupBuildTasksregisterPodInstallTaskcreateSyncForFatFrameworkaddPodDependencyToInteropcreateDefaultFrameworksscanonSubscriptiononEachgradleBuildStartTimeflowOnensureRegisteredreducecallJmxbinaryreportGlobalMetricsreportLibrariesVersionslogExceptioncollectConfigurationTimeMetricsreportBuildFinishedregisterVariantImplementationsrecordBuildFinishedfusStatisticsAvailableconfigureTaskscheckSettingsbeforeExecuteafterExecutegetTimegetOrRegisterStorageaddExtensionfindExtensionexecuteClosure findJavaTaskForKotlinCompilation*addCompilationSourcesToExternalCompileTask	retryWhenaddSubpluginOptionsconfigurePluginOptionsForKaptloadSubpluginsaddMavenDependencygetKotlinPluginVersion&loadKotlinPluginVersionFromResourcesOf!configureCompilerOptionsForTargetgetAdditionalArgumentsForJavacgetAdditionalArguments*dynamicallyApplyWhenAndroidPluginIsAppliedandroidTargetHandlerrunOnceAfterEvaluatedKotlinCompilationInfoonConfigureonEvaluatedkotlinSourceSetFactorygetLibraryOutputTaskgetBuildTypeNamepreprocessVariant.addAndroidUnitTestTasksAsDependenciesToAllTestpostprocessVariantsetUpDependencyResolution(addKotlinDependenciesToAndroidSourceSetswireKotlinTasksgetFlavorNamessetupAttributeMatchingStrategyaddKotlinCompilerConfiguration%registerDefaultVariantImplementationsgetTestedVariantDatagetJavaTaskProviderforEachKotlinSourceDirectorySetforEachJavaSourceDirforEachKotlinSourceSetcancellableconfigureSourceSetDefaultscatchconfigureAttributesrewriteMppDependenciesInPomconfigureProjectGlobalSettingssetUpJavaSourceSetsdistinctUntilChangedrunningReduceapplyIfInitialisedconflatecheckStatisticsEnabledreportTaskIfNeedrunningFoldgetOrCreateInstanceregisterPre232IdeaStatsBeanapplyPluginapplyStandardTaskConfiguration'createAdditionalClassesTaskForIdeRunnerprepareKotlinCompileTaskfilterOutJavaSrcDirsIfPossible#addKotlinDirectoriesToJavaSourceSetfilterIsInstancegetLocalPropertywhenEvaluated warnAboutKotlin12xMppDeprecation2setupAsLocalTargetSpecificConfigurationIfSupportedusageByName,setJavaTargetEnvironmentAttributeIfSupportedattributeValueByNameusesPlatformOfcategoryByNamesubscribeForBuildScansubscribeForBuildResultisKotlinPluginLifecycleAwarewithRestrictedStages%newKotlinPluginLifecycleAwareProperty&findKotlinPluginLifecycleAwarePropertycurrentKotlinPluginLifecyclelaunchInStagerequireCurrentStagerequiredStagelaunchInRequiredStagestartKotlinPluginLifecycleclearJavaSrcDirs AndroidGradlePluginVersionOrNullAndroidGradlePluginVersionaddJarIfNoArtifactsPresentloadRepeatableContaineronCloseOnceByKeyonClosefoldunlockupTo"registerKotlinOutputForJavaLibrary
getGcCounttryLock
buildStartgetUsedMemoryKb*detectKotlinPluginLoadedInMultipleProjectsfindLifecycleAwarePropertyloopIfNecessary	holdsLock"executeCurrentStageAndScheduleNextCreateCompilerArgumentsContext$variantImplementationFactoryProvidervariantImplementationFactoryconfigureTestinitializeTestRunsnoImpladdDependsOnTaskInOtherProjectscreateLifecycleTask	getOrElsefixedPeriodTickerconfigureResourceProcessingimplementationToApiElementsgetExtisInMultipleProjectsgetPropertyNamegetAffectedProjectsinitFilteredFilesconfigureTestRunperformAtomicTrySelect	onTimeoutwarnAboutIncorrectDependenciescreateKlibCompilationTaskcreateRegularKlibArtifacttrySelectOtherconfigureBinariescreateLinkTask'registerEmbedAndSignAppleFrameworkTaskscreateRunTaskcreateCInteropTaskscreateKlibArtifactklibOutputDirectoryconfigureFrameworkExportsyncLanguageSettingsToLinkTaskconfigureCInteropsaddCompilerPluginsaddCommonProjectgetKotlinSourceDirectorySetSafematchSymmetricallyByNames	trySelectgetKotlinSourceSetsSafedisposeOnSelect'configurationsForCommonModuleDependencyasModuleNamegitgetPodSourcePath	noPodspecpodurluseLibrariesuseInteropBindingFromforAllPodFrameworks	addToPods	specReposhandleBuilderExceptionapplyContributionresumeSelectWithExceptionregisterSelectClause2filterreceiveOrNullenumPropertypropertiesWithPrefixjsKarmaBrowsersbooleanPropertynativeCacheKindForTargetpropertyWithDeprecatedVariant6runMissingAndroidTargetProjectConfigurationHealthCheck7createAndroidSourceSetLayoutV1SourceSetsNotFoundWarning6runMissingKotlinTargetsProjectConfigurationHealthCheckErunDisabledCInteropCommonizationOnHmppProjectConfigurationHealthCheck7runAndroidSourceSetLayoutV1SourceSetsNotFoundDiagnostic!createCompatibilityWarningMessage	isTooHighOrunMultiplatformAndroidGradlePluginCompatibilityHealthCheckWhenAndroidIsAppliedisTooLow androidGradlePluginVersionTooLow;runMultiplatformAndroidGradlePluginCompatibilityHealthCheck'failedGettingAndroidGradlePluginVersiongetAndroidGradlePluginVersion!androidGradlePluginVersionTooHighprepareDatacollectBuildPerformanceMetricscollectBuildAttributescollectTaskRecordTagscollectTagsgetTaskResultcollectBuildMetricscollectCompilerArgumentsgetLanguageVersionTagfilterMetrics
mapNotNulltoCollectionfilterNotNullkotlinErrorfirstlogTime	filterNotlastmapIndexedNotNull
mapIndexedsingletoCompilerArgumentlinkTaskNamelinkSyncTaskNamevalidateTypeScriptTaskNamesplitStringIfNeedreplaceWithCombinedTagaddBuildScanValue0transformOperationRecordsToCompileStatisticsDatagetStartParametersaddCollectedTagsaddHttpReportreportBuildFinishinitBuildScanTagsreadableStringreportTryK2ToConsoleincludeVerboseEnvironmentusingCacheDirectorymaxWithupdateBuildOperationRecord"subscribeForTaskEventsForBuildScan	setupTagsaddTransformMetricstoBuildReportParametersaddTaskinitBuildScanExtensionHoldersubscribeForTaskEventselementAtOrNullproduceLibrarytoSetfilterNotNullToconfigureSubTargetregisterTypeScriptCheckTaskregisterCompileSyncconfigureEsModulesOptionsconfigureCommonJsOptionsconfigureBinaryencreateBinarylibrarygetIrBinariesexecutableLegacyInternalexecutableIrInternalnonefilterIndexedziprequireNoNulls
cssSupportwebpackRulesContainerrulesbindToscssSupport
lastOrNullcounttoMutableSetsingleOrNullminWith	elementAttoMutableListfindDependentTasksopenSubscriptionaddTargetListenersaddContainerListenersaddCompilationprepareInstallationimplementingalreadyResolvedMessagesendfindDependentResolver	toVersionfoldDelimiterstoSemVer	fixSemverversionToNpmRangesbuildNpmVersioncaretizeSingleVersionincludedRangeinvertminStarthasIntersectionminEndmaxStartmaxEndcreatePreparedResolutionprepareWithDependenciesdisambiguateDependenciesgetResolutionOrPreparechooseVersionfromSrcPackageJson
moduleNamefileVersionisFileVersionresolveOperationDescriptionisKotlinJsRuntimeFiledefaultNpmDependencyDelegateaddNpmDependencyExtensionscopePrefixtoDeclarationuniqueRepresentationruleregisterFactoryrebuildmakeNodeModuleGradleNodeModuleimportedPackageDirgetBuildDependenciesgetTargetComponentIdundeliveredElementprocessDependenciescreateAggregatedConfigurationtrySendvisitProjectDependencyvisitArtifactvisitCompositeProjectDependencytoPackageJsonProducer$createPublicPackageJsonConfigurationvisitDependencyuseToolbuildNpmProjectNamecompleteResumeSendresolveAsDirectorygetStringOrNullresolveAsFileresolveAsRelativeinvokeOnCloseresolveIndexresolveInNodeModulesDirnpmDeclarationExceptionpossibleVariants#processNamedNonStringSecondArgumentprocessNonStringFirstArgument	decrementfromGradleRichVersioncustomField
scopedNametoVersionStringregisterSelectSendtryResumeSendofferInternal,visitHyphenatedRangeOfFullySpecifiedVersionsvisitTildeRangevisitWildcardvisitCaretRangevisitOperatorgteqeqgtvisitFullySpecifiedSemvervisitLogicalOrOfMultipleRanges"visitLogicalAndOfSimpleExpressionsltlteqvisitWildcardOperatorvisitEmptyRangevisitWildcardRangevisitFullSemveryarnExec configureRequiresNpmDependenciesprepareRootPackageJson$saveRootProjectWorkspacesPackageJsonresolveAndUpdatePackages	isWindowsresumeSendClosed
resolutionenqueueSendaddTaskRequirementsgetCompilationNpmRequirementsisConfiguringStateinstallIfNeededprepareIfNeededparseOsArchparseOsNameparsePlatformcomputeNpmScriptFilecomputeNodeBinDiraddPlatformfixBrokenSymlinkfixBrokenSymlinkscreateLoadWasmprocessWebpackNameprocessKarmaStackTraceinvokeOnCloseHandleroffercliArgofferSelectInternaluseChromiumHeadlessaddPreprocessoruseChromeHeadlessNoSandboxusePhantomJSuseFirefoxAurorauseOperauseDebuggableChrome
useBrowseruseChromeCanaryuseFirefoxNightlyHeadlesscreateDebuggerJsuseIewatchuseSourceMapSupportuseChromeHeadlessWasmGcuseChromeHeadlessuseFirefoxAuroraHeadlessuseFirefoxLikeuseFirefoxDeveloperHeadlessuseChromium	useSafariaddChromeLauncherusePropBrowsers	useChromeuseFirefoxDeveloperuseChromeLike
useFirefoxuseFirefoxNightlyuseKotlinReporteruseChromeCanaryHeadless
useWebpackuseFirefoxHeadlessuseConfigDirectorytakeFirstReceiveOrPeekClosedonTestFrameworkSetuseKarma	useNodeJsreceiveCatchingfilterMethodNameparseNodeJsStackTracefilterClassNameparseNodeJsStackTraceAsJvmconfigureExecconfigureClientcreateDefaultDistributionappendToWebpackConfigresumeReceiveClosedwarnUnsupported	readFirstwriteBackUnsupportedmaybeReadFirsttransformStringcalculateJsCompilerTypejsQuotedconfigureDceconfigureDceTaskscreateWebpackConfig	isRunningcreateRunnerwebpackConfigAppliertoHexcalculateDirHashextractWithUpToDateappendConfigsFromDirwriteWasmUnitTestRunneraddWasmExperimentalArgumentsonCancelIdempotentListgetChildTestExecutionenqueueReceiveInternalcreateLifecycleTaskInternalregisterKotlinJvmRunregisterMainRunTask&setupDependenciesCrossInclusionForJavamainRun-copyUserDefinedAttributesToJavaConfigurations%setupJavaSourceSetSourcesAndResourcesdisableJavaPluginTasks*areRuntimeOrCompileConfigurationsAvailable"setTestTaskClasspathAndClassesDirspollInternalpollSelectInternaltryResumeReceiveresumeOnCancellationFun registerKotlinArtifactsExtensionregisterLinkFrameworkTaskreceiveregisterLibsDependenciesregisterExportDependencies
tryReceiveonCancelIdempotentcompleteResumeReceiveaddKotlinArtifactgetPodfileContent)insertXcode143DeploymentTargetWorkaroundsgetBuildSettingFileName
setupBuild
folderSizegetCompilationResultsgetPerformanceCompilerOptionsgetAllExecutedTaskscompilerFlagsFromBinarycreateExecutionContextforAllSharedNativeCompilationsforAllDefaultKotlinSourceSetsbuildKotlinNativeMainArgs!buildKotlinNativeBinaryLinkerArgsbuildKotlinNativeCommonArgsappendErrorPluginappendSourceMapsappendProgressReporterminusKeygetRequiredDependenciesappendEntryappendResolveModulesappendOptimizationappendExperimentsappendDevServercreateDispatchershowMissingNativeStdlibWarning%createCInteropApiElementsKlibArtifact-locateOrCreateCInteropDependencyConfiguration$cInteropApiElementsConfigurationName.locateOrCreateCInteropApiElementsConfigurationwriteSettingsreadNullablePropertyreadPropertyreadSettingsFromReaderparseKotlinNativeStackTrace parseKotlinNativeStackTraceAsJvmgetDistributionTypechooseDistributionTypecinteropKlibLibraryElementsresumeCancellableWithtrackEnvironmentcliArgssanitizeStackTracetestArgstoGistfromAssociateCompilationslockWithRetriescheckLockedcinteropCommonizerDependencies9setupCInteropTransformCompositeMetadataDependenciesForIde1setupCInteropCommonizerDependenciesForCompilation#setupCInteropCommonizerDependencies)setupCInteropCommonizerDependenciesForIde#setupCInteropPropagatedDependencies(getPropagatedCInteropDependenciesOrEmptygetAllCInteropOutputFiles&getPlatformCinteropDependenciesOrEmpty+addIntransitiveMetadataDependencyIfPossible(getImplicitlyDependingNativeCompilationsisClosedcommonizedOutputLibrariesoutputDirectorycommonizedOutputDirectoryinferCommonizerTarget*collectAllSharedCommonizerTargetsFromBuild,collectAllSharedCommonizerTargetsFromProjectactiontodoTargetswriteCacheForUncachedTargetsisMissingPlatformLibrarieslogInfo
isUpToDatesetGeneratedrunGenerationTooltoPlatformLibNamescheckCaches	setCached
updateHeadisGeneratedcheckLibrariesInDistributiongeneratePlatformLibsIfNeededcached!getNativeDistributionDependencies!getCommonizedPlatformLibrariesFornativeRootSourceSetsgetOriginalPlatformLibrariesFor%setupKotlinNativePlatformDependenciesisAllowCommonizerwrapInSingleQuotesappendDependenciesappendRawStatementswrapInSingleQuotesIfNeededbuildAdditionalAttrsappendAttributesyieldcinteropMetadataDirectoryPath@createCInteropMetadataDependencyClasspathFromProjectDependencies)createCInteropMetadataDependencyClasspathCcreateCInteropMetadataDependencyClasspathFromAssociatedCompilations/createCInteropMetadataDependencyClasspathForIdeonlyIfSourceSetIsSharedNative<locateOrRegisterCInteropMetadataDependencyTransformationTaskconfigureTaskOrderBlocateOrRegisterCInteropMetadataDependencyTransformationTaskForIde!includeCommonizedCInteropMetadatadelaycommonizeCInteropLibraries&getCInteropCommonizerGroupDependencies	commonizegetOrRegisterDatasyncLanguageSettingsrawStatementtransformDependenciesresolutionsToTransformmaterializeMetadatawithoutProjectDependenciescleanOutputDirectoryaddFrameworkArtifactcreateFatFrameworks#applyBinaryFrameworkGroupAttributescreateFrameworkArtifactfindAndroidTargetreportDisabledTargetrestoregetOrRegisterDisabledTargetsdisablesDevirtualization
withIndentgetOrRegisterIncorrectArgumentsstartsWithIncorrectPrefix+configureMetadataDependenciesForCompilationexportDependenciesForPublishing-createMetadataCompilationsForCommonSourceSets+configureProjectStructureMetadataGenerationisMetadataCompilationSupportedcreateMetadataCompilation>configureMetadataDependenciesConfigurationsForCommonSourceSets%createCommonMainElementsConfigurationfindMetadataCompilation getPublishedPlatformCompilationsisSingleKotlinTargetSourceSetisSinglePlatformTypeSourceSet*createGenerateProjectStructureMetadataTaskfilesWithUnpackedArchives awaitMetadataCompilationsCreated0dependsOnClosureWithInterCompilationDependencies)getCommonSourceSetsForMetadataCompilationijListenTestTaskconfigureConventionsdefaultCacheKindForTargetadditionalCacheFlagscacheWorksFor	onRemoved	onPrepare
testFailedhasTestTaskFailedPreviouslyhasFailedTestsgetAggregatedTaskFailuresreadPreviouslyFailedTaskswritePreviouslyFailedTasks!includeKotlinToolingMetadataInApkrequireCompilationOfTargetgetOrCreateAggregatedTestTaskcleanTaskNamedoGetOrCreateAggregatedTestTaskgetAndroidPluginVersionsfindDependenciesselectConfigurationsisAndroidPluginCompatibledoFindDependenciesdoCollectDependenciescollectDependenciesgetAndroidSourceSetDependenciesgetAndroidLocationBuildServiceselectConfigurationsGradle76addOrRetainAll selectConfigurationsGradleLegacygetClassOrNullgetAndroidSdkJargetMethodOrNullmaybeAddfinalInternalNamevisitAnnotationDefault	addLastIfretrygetPrivateTypesgetAbiTypesbuildJvmExtrasOrNullbuildTargetMetadataandroidExtrasOrNullbuildNativeExtrasOrNulljsExtrasOrNullgetKotlinToolingMetadatanativeExtrasOrNull&registerBuildKotlinToolingMetadataTaskbuildJsExtrasOrNulljvmExtrasOrNullbuildTargetMetadataExtrasbuildProjectSettingsbuildAndroidExtrasOrNullbuildTargetStringbuildProjectTargets
rootOrSelfvisitJaranalyzeInputStreamvisitDirectory	visitEnumisAbicomputeAllParentTasksPathscheckSuppressedRunningFailures	afterTest disableIndividualTestTaskFailingcheckFailedTests
afterSuite
beforeTestreportOngetFailingTestsMessagemaybeOverrideReportingoverrideReportingnextIfRemovedreportOnChildTasksbeforeSuiteaddToParentsremoveFirstOrNullallOutputFiles	operationexecWithProgressexecWithErrorLoggershowSuppressedOutputwrapExecutegetHashesToAnalyzegetEmptySnapshotgetAllDataFilesloadAllwriteToCachecreateCurrentloadEntriesForperformfindAllImpactedensureParentDirsCreatedbuildKotlinToolingMetadatataskNameForKotlinModulecreateToolingMetadataFile	flushLinemakeClassLoadermakeKeygetForSplitPathsgetForClassPathbyValueOrNullisErrorLike%registerGeneratedJavaSourceForAndroidandroidVariantDataencodePluginOptionswithWrappedKaptOptionswrapPluginOptionsgetClassSnapshotGranularityprocessLogMessageInternalprocessLogMessagefindRootClassLoaderjavacIsAlreadyHerecreateKaptOptions	kaptClassparseFeaturesrequireConfiguredrequireNotConfiguredhasAnnotationProcessorsqueryKaptVerbosePropertyfindClasspathChangesloadPreviousSnapshotgetIncrementalChanges!checkAnnotationProcessorClasspathonCompletedonCancelled	runSafely	afterTaskgetVariantComponentNamesapplyExperimentalgetApplicationPackageaddAndroidExtensionsRuntimeprepareCompilerArgumentscreateCompilerArgsupdateThreadContext*configureDefaultVersionsResolutionStrategycustomizeKotlinDependenciesallNonProjectDependencies8excludeStdlibAndKotlinTestCommonFromPlatformCompilationskotlinDependencygetIfKaptClasspathIsPresentisRelatedToAndroidTestSourceSetconfigureStdlibVersionAlignmentalignStdlibJvmVariantVersionsaddStdlibDependencystdlibPlatformType configureStdlibDefaultDependencyaddStdlibToKpmProjectisStdlibAddedByUser&configureKotlinDomApiDefaultDependencyisAtLeast1_9_0kotlinDomApiDependencyaddKotlinDomApiDependencyaddKotlinDomApiToKpmProjectisKotlinDomApiAddedByUserfindTestRunsByCompilation#kotlinTestCapabilityForJvmSourceSetisAtLeast1_5getWorkerIsolationModewarnAdditionalJvmArgsAreNotUsedgetAnnotationProcessorOptions
submitWorkcheckProcessorCachingSetupbuildKaptSubpluginOptions.checkAndroidAnnotationProcessorDependencyUsagegetNonAndroidDslApOptionsregisterGeneratedJavaSourcegetNamedDependenciesgetKaptTaskNameobjcheckTargettoDigitdecodeHexStringreadFromgetOrComputeKeyisInfoAsWarningsgetKaptConfigurationNamegetKaptStubsDir
isUseJvmIrfindKaptConfigurationgetDslKaptApOptionsgetKaptGeneratedClassesDirfindPropertySafegetAPOptionsfindMainKaptConfigurationisKaptKeepKdocCommentsInStubsgetKaptIncrementalDataDir+getKaptIncrementalAnnotationProcessingCacheisIncrementalKapt getKaptGeneratedKotlinSourcesDirgetBooleanOptionValuecreateKaptGenerateStubsTask%disableAnnotationProcessingInJavaTaskclassLoadersCacheSizecreateKaptKotlinTasktemporaryKaptDirectoryisKaptVerbosegetKaptGeneratedSourcesDircreateAptConfigurationIfNeeded$disableClassloaderCacheForProcessorsdiscoverScriptExtensionsFiles-registerOnceDiscoverScriptExtensionsTransform&getDiscoveryClasspathConfigurationName)registerDiscoverScriptExtensionsTransform$getDiscoveryResultsConfigurationName configureDiscoveryTransformationparseStringOrThrowrestoreThreadContext%disableScriptDefinitionsFromClasspathscriptDefinitionsscriptDefinitionsClasspathscriptDefinitionscriptResolverEnvironmentapplyIfLongconfigureForSourceSetisDispatchNeededfromStringRepresentationnewMetricContainerdispatchYieldtoJsonArraytoAndroidExtrasOrThrowtoKotlinToolingMetadataOrThrowtoTargetMetadataOrThrowparseJsonOrThrowtoJsonObjecttoJvmExtrasOrThrowtoJsExtrasOrThrowtoProjectSettingsOrThrowtoNativeExtrasOrThrowtoTargetMetadataExtrasOrThrowsha256anonymizeComponentVersionpatchStackTracecreateReportingNodegetSuiteNamereportCompleted	parkNanosensureNodesClosedextractExceptionClassName	beginTestregisterTimeLoopThreadrequireLeafreportStartedcheckReportingNodeCreatedrequireLeafGroupmarkCompleted
checkStaterequireReportingNodeprocessStackTraceendTestrequireLeafTest	cleanNamewrapTaskcollectParentsmarkStarted+maybeCreateCommonizerClasspathConfigurationGradleCliCommonizercompilerFullClasspathwriteArgumentsToFilecreateLoggingMessageCollector	logFinishrunToolInSeparateProcessloadCompilerVersiongetKonanCacheOrchestrationgetKonanCacheKindunregisterTimeLoopThreadunTrackTaskvalidationRegexpcreateGradleCompilerRunnerlistProfileFilesisBuildSessionStartedcloseTrackingFileunlockJournalFilestartBuildSessionfinishBuildSessioninitTrackingFilecurrentTimeMillisstartInterceptcompileWithDaemonOrFallbackImpl incrementalCompilationWithDaemon#nonIncrementalCompilationWithDaemonreportSeveritycompileInProcessrequestedCompilationResultsreportCategoriescompileWithDaemoncompileInProcessImplcompileOutOfProcesscollectStatTagsprocessProjectNamereadFromFilegetProjectHash	getMetric	trackTaskgetOrCreateSessionFlagFilegetDaemonConnectionImplnormalizeForFlagFileparseLanguageVersionrunJsCompilerAsyncrunJvmCompilerAsyncrunMetadataCompilerAsyncsessionsDirjarForJavaSourceSetclearBuildModulesInfobuildModulesInfojarForSingleTargetJsafterResumeunparkgetIsolatedClassLoaderrunInProcesstoPrettyStringescapeQuotesForWindowssnapshotescapeQuotes
runViaExecfromTaskContextgetPlaceholderParameterNamesshouldSkipDumpgetValueParameterNamesForDebugdumpTreesFromLineNumber
remapTypesnameForDeclaration!generateOverriddenFunctionSymbols"declareSimpleFunctionWithOverridesgetInlineClassBackingFielddumpKotlinLikewithinScopetransformInPlacetransformSubsetFlattransformFlattransformIfNeededreplaceInPlacetransformDeclarationsFlatwithReferenceScope	withScopeisFunctionMarkergetImmediateSupertypesgetPrimitiveArrayElementTypeisClassWithNamecollectAllSuperclassesisKFunction
isUnsignedisClassWithNamePrefixisInterfaceisSuspendFunctionOrKFunctiongetAllSuperclassesisThrowableisTypeFromKotlinPackageisExternalObjectisTypeParametercollectAllSupertypesisKSuspendFunctionisSuspendFunctionTypeOrSubtype
isFunctionisSuspendFunctionisFunctionOrKFunctiongetAllSubstitutedSupertypesisFunctionTypeOrSubtypegetExternalPackageFragmentNamegetFunctionNamegetEnumEntryNamegetTypeParameterNamegetVariableNamegetValueParameterNamegetClassNamegetTypeAliasNamegetFileName)approximateFunctionReferenceParameterTypeaddSpecialAnnotationapproximateUpperBoundsapproximateType approximateFunctionReferenceTypewithTypeErasureisMutabilityFlexibletranslateTypeArgumentstranslateTypeAnnotationsresolveTypeParameterisTypeAliasAccessibleHereapproximateByKotlinRulescompleteExceptionallyapproximatetoIrTypeAbbreviationtranslateTypecommonSupertypeafterCompletioncomposeEnumEntrySignaturecomposeFieldSignaturecomposeAnonInitSignaturewithFileSignaturecomposeSignatureinvokeOnCompletiongetCancellationExceptioncreateIrClassFromDescriptor$remapDeclaredExternalPackageFragmentremapDeclaredTypeAlias remapDeclaredFilePackageFragmentremapDeclaredScript#remapDeclaredLocalDelegatedPropertyvisitVarargvisitClassReferencevisitExpressionhandleOnCompletionExceptionjoindeepCopySavingMetadatasignatureStringsignatureMangle	fqnManglemangleFieldString	fqnStringhashedManglemangleStringisPlatformSpecificExportmangleEnumEntryString
isExportedgetCompletionExceptionOrNullchildCancelledcancellationExceptionMessageonStartattachChildgetChildJobCancellationCauseonCompletionInternalcancelInternalcollectRealOverridesresolveFakeOverrideOrNullcollectAndFilterRealOverridesresolveFakeOverridepatchDeclarationParentsvisitPackageFragment
createCopyadjustAnnotationArgumentValue!generateConstantValueAsExpression!extractAnnotationParameterOffsetsextractAnnotationOffsets!generateAnnotationConstructorCall-generateConstantOrAnnotationValueAsExpression#generateAnnotationValueAsExpressiondeepCopyWithSymbolsfindDescriptorBySignatureinitializeParameterArgumentsinitializeTypeArgumentsstripEnhancedNullabilityregisterDeclarationsdeserializeClassisStaticFunction computeExternalDeclarationOrigingenerateFacadeClassisPropertyWithPlatformFieldhasEnhancedNullabilitygetContainerSource$isAccessorWithExplicitImplementationdispatchinvokeOnTimeoutscheduleResumeAfterDelaytryResumeWithException$generateUnboundSymbolsAsDependenciesgetColumnNumbergetSourceRangeInforesumeUndispatchedgenerateValueParameterStubgenerateStubBySymbol$generateOrGetScopedTypeParameterStubgenerateEnumEntryStubgenerateTypeAliasStub-generateOrGetEmptyExternalPackageFragmentStubgenerateClassStubgenerateOrGetTypeParameterStubgenerateOrGetFacadeClassgetDeclarationgenerateFunctionStubgenerateMemberStubgenerateFieldStubgenerateConstructorStubcomputeOrigingeneratePropertyStubgetNameWithAssertisInlineArrayConstructorgetPropertySetterhasEqualFqNamecompanionObjectisAnnotationWithEqualFqNamegetPropertyDeclarationfilterOutAnnotationsrenderTypeAbbreviationrenderTypeInnerrenderTypeAnnotationsrenderSimpleFunctionFlagsrenderEnumEntryrenderTypeParameterFqnrenderTypeParameterrenderDeclarationParentFqnrenderTypeAliasFlags
runTrimEndrenderTypeWithRendererrenderDescriptorrenderPropertyFlagsrenderReturnTyperenderFieldrenderTypeAliasFqnrenderAsAnnotationArgumentrenderConstructorFlagsrenderValueParameterFlagsrenderClassifierFqnrenderVariableFlagsnormalizedNamerenderDeclarationFqnrenderScriptFqnrenderClassFqnbuildTrimEndappendIterableWith!renderLocalDelegatedPropertyFlagsrenderOriginIfNonTrivialrenderFlagsListrenderClassFlagsrenderFieldFlagsrenderClassWithRenderergetSuccessfulResultinvokeOnCancellationresumeUndispatchedWithException
trySuspenddumpConstructorValueArgumentsorderedindented	takeStategetTypeParameterNames	dumpItemscompleteResume
resumeWithdumpTypeArguments	withLabelgetFullTypeParametersListdumpInternaldumpAnnotationsdumpElementsgetExceptionalResultparentCancelleddumpLabeledElementWithbuildSimpleTypemakeTypeProjectionbuildTypeProjectioncancelCompletedResultmakeTypeIntersectioninitSuperTypescreateIrTypeCheckerStateisTypedEqualsInValueClass.generateSyntheticFunctionParameterDeclarationsbuildMembergenerateEqualsMethodBodygenerateHashCodeMethodBodygetIrPropertycommitSubstitutedirThisirOther	tryResumegenerateHashCodeMethodgetHashCodeFunctionInfogenerateToStringMethodBodygetHashCodeOf
addToClassgetHashCodeOfPropertyclassNameForToStringshiftResultOfHashCodeirGetPropertygenerateToStringMethodgenerateCopyFunctiongenerateEqualsMethodgenerateComponentFunctionextractTypeParametersremapSymbol getContinuationCancellationCause
nameStringgetStackTraceElementwriteSpecificAttributesgetElementTypegetDeclaredgetReferenced
isNullablegetArtifactTypeisStrictSubtypeOfClassisSubtypeOfClasstoArrayOrPrimitiveArrayTypegetMinSdkVersionForDexingsubstituteTypesubstituteTypeArgumenttypeParameterConstructorfromHasQuestionMarkcalculateConfigHashcalculateIrFunctionHash"calculateIrAnnotationContainerHashcalculateIrSymbolHashtransformFunctionChildrentransformValueArgumentsasFilecreateSerializablegetVariantSourcesjoinToStringmapStatementOrigingetMainSplittransformReceiverArgumentsmapDeclarationOrigintransformDeclarationsTogetMainSplitOrNullasFilesshallowCopyCall
asFileTreetransformTogetReferencedReturnTargetcopyRemappedTypeArgumentsFromasFileTreeWithoutTaskDependency	addSourceaarMetadatagetTransformedLoopcopyTypeParametercomputeBuildOutputFilegetMainSplitArtifactextractArtifactForSplit
isModifiedloadJsIrFragmentmeasure	startNextloadJsIrModulerebuildCacheForDirtyFilesmakeNotNulltypeWithParameterstoKotlinTyperemoveAnnotationstypeWithtypeWithArgumentsmergeNullabilityaddAnnotationscomputeUniqueDirForSplitgetOutputNameForSplitaddInverseDependencyaddDirectDependency
getOutputs	getOutput printValueParametersWithNoIndentprintAnAnnotationWithNoIndentdisallowChangesprintTypeWithNoIndent'printMemberAccessExpressionWithNoIndent"printCallableReferenceWithNoIndentprintAccessorprintATypeParameterWithNoIndenttransferFromprintVisibility_get!printWhereClauseTypesWithNoIndentaddInitialProvider	printTypeprintVariable	republishcloseRequestprintElementgetResgetAidlgetRenderscript	getKotlin	getAssetsprintFieldAccess
getJniLibsgetMlModelsprintTypeArgument
getShadersprintTypeArgumentWithNoIndentpgetBaselineProfiles
printLabelprintModifiersWithNoIndentgetJava#printParameterModifiersWithNoIndent$printWhereClauseIfNeededWithNoIndentprintTypeParametersWithNoIndentcustomModifierprintlnAnnotationsprintVarianceWithNoIndentprintStatementContainercommentBlock printConstructorCallWithNoIndent printAValueParameterWithNoIndentprintSimpleFunctionprintExtensionReceiverParameterprintAnnotationsWithNoIndentifExistsbuildMapUntilbuildSetUntilicErroruseCodedInputIfExistsnotFoundIcError
findStdlibuseCodedOutputcollectSignatureProvidersgetSignatureProvidersForLibloadUnboundSymbolstopLevelSignaturenearestPublicSigpackageFqName	adaptMaskflagsisPackageSignatureasPublicaddParentSignaturesresolveFakeOverrideFunctioncollectImplementedSymbolcrossModuleReferencesHashForICreadHash128BitsFromProtoStreamupdateAnnotationContainerupdateConfigKeysupdateSymbolfinalizeAndGetHashupdateForEachrenderDeclaredInrenderSuperQualifierrenderSymbolReferencerenderReflectionTargetappendNullableAttributeescapeIfRequired#renderParentOfReferencedDeclarationrenderValueParameterTypesrenderElementNameFallbackrenderReference!buildModuleArtifactAndCommitCachecreateLinker loadFunctionInterfacesIntoStdlibloadModulesforEachFileallFileswriteIdSignatureskipIdSignaturereadIdSignatureparseFingerprintsFromManifestaddNewMetadataflatSignatures	toMutablecreateCompilerForIC%calculateInlineFunctionTransitiveHashaddAllSignatureSymbolscalculateSymbolHashgetReachableSignaturesgetImplementedSymbolsgetSignatureToIndexMappingisExportedSignaturesUpdatedfetchCompiledJsCodefetchModuleInfoloadRequiredJsIrModuleswriteIfNotNullloadProgramHeadersFromCachecommitModuleInfocommitCompiledJsCodecopyFilesFromgetOrPutFilesbuildSingleModuleExecutablebuildExecutablebuildMultiModuleExecutablegetStopwatchLapscommitBinaryAstcommitMetadataisArrayisKClass
isSequenceisNullableArrayisUShortisFloatisDoubleisChar	isBooleanisDoubleArrayisComparableisAnyisClassWithFqNameclassFqNameEqualsisByteisNotNullClassTypeisCharArray!isDoubleOrFloatWithoutNullabilityisUnsignedTypeisCollection
isIntArrayisShortArrayisKotlinResultisNullableClassTypeisUIntisUBytehasFqNameEqualToSignatureisNullablePrimitiveTypeisLongisNullableStringisByteArraygetUnsignedTypegetPublicSignature
isIterableisShortisBooleanArrayisFloatArraygetPrimitiveOrUnsignedTypeisLongArrayisStringClassTypeisULongisIntisNullableContinuationisKotlinPackageeliminateDeadDeclarations
buildRoots
isConstant
addRootsTounreachableDeclarationMethodfqNameForDceDumpdumpDeclarationIrSizesIfNeedcontainsMetadata&containsInterfaceDefaultImplementationusePrototypefilterDescendantsOftransformToJsConstDeclarationtransformToDotLikeStringtransformToStringBytransformToJsonStringshrusubbuildBinaryOperatorbuildUnaryOperatorlowertoTransformconvertVariancecontainsTypeConstructorgetTypeParameters!getNameForClassUnderKotlinPackagegetSuperTypes
toListenToexecuteOperations$shouldReplaceToStringWithRuntimeCalltransformEnumValueOfIntrinsictransformEnumValuesIntrinsictransformEnumTopLevelIntrinsictransformToIndexedReadtransformToIndexedWritebuildDynamicCallbuildIncrementalCacheArtifactfetchSourceFileMetadataupdateSourceFileMetadatagetCacheFilefetchSourceFileFullMetadatacollectModifiedFilescommitSourceFileMetadataprocessWithDiagnosticcollectUsedSuperTypesremovingBodyprocessUselessDeclarationprocessFieldWithDiagnosticshouldKeepAnnotationprocessFunctionWithDiagnosticuseDispatchReceiveraddOperationregisterExtension$syncAndroidAndKmpClasspathAndSourcesgetFileOperationstoSerializablegetSizecomputeProvidersgetManifestsisDefinitelyNotNullTypegetTransformationRequestfinalConfiguregetRemovedVersionMessagegetBuildableArtifactgetSourceDirectoryTrees	resourcesjniLibsexecuteProcessBatchisPackageable
decodeList
readHeaderlogStructuredlookupgetProcessBuildercheckPrefabConfigexecuteProcesssetPathsetBuildStagingDirectorytransformClassesWithisCapturedDynamicisCapturedType	setMergessetPickFirstsdefineClasssigninggetArgumentOrNullvariantSourcesForModeltoKeyComponent
computeKeylazyInitisNotNullTypeParameter_internal_getSigingConfigshadersisSimpleTypegetIsDefault isDefinitelyClassTypeConstructorsetIsDefaultgetLocalJarsForAargetEdgecreateDependencieshasTypegetAllArtifactsgetToolchainAbigetDefaultStlgetStlSharedObjectFilegetObjcopyExecutablegetStripExecutablesubmitCompilecompileOutputForgetAndroidAttrSymbolsmergeOptionsanySuperTypeConstructorgetBuildConfigFieldsgatherProguardFilesgetResValuesgetInstrumentationRunnergetDefaultProguardFileshasPostProcessingConfigurationresourcesShrinkingEnabledcodeShrinkerEnabledgetMethodOfAnygetPostprocessingFeaturescollectDeclarationsvisitFieldAccessisOverriddenExternal$isAccessorForOverriddenExternalField!addToUsefulPolyfilledDeclarationsprocessFieldprocessConstructorvisitValueAccessgetTextSymbolOutputFileisExternalOrOverriddenExternalgetSourceOutputDirsetRuntimeOnlyClasspathcreateModeladdReachabilityInfoIfNeededaddWithPredicategetLowestUnderlyingTypetransformEqeqOperatorisDefaultEqualsMethodallValueArgumentsAreNullableunboxParamWithInlinedClass$isMethodOfPotentiallyPrimitiveJSTypetransformCompareToMethodCall	isBuiltintransformEqeqeqOperatortransformLongComparisonfindEqualsMethodisBoxIntrinsic'chooseEqualityOperatorForPrimitiveTypestransformEqualsMethodCalloptimizeInlineClassEqualityisMethodOfPrimitiveJSTypecanBeUsedWithJsEqisCharBoxinggetFunctionSymbolgetFunctionDeclarationcanAddOrSubOverflowtransformRemtransformRangeUntiltransformRangeTotransformIncrementtransformCrement
irBinaryOptransformHashCodeconvertResultToPrimitiveTypetransformSubtransformAddbooleanNegatewithLongCoerciontransformUnaryMinustransformMultoInt32transformDivtransformDecrementbuildReinterpretCastbuildCompositebuildTypeOperatorbuildRawReferencebuildSetValuebuildDelegatingConstructorCall
buildBlock	buildWhenbuildContinuebuildGetFieldbuildReturn	buildNullbuildSetField
buildCatchbuildVar
buildThrowbuildSetVariablebuildIfElsebuildBooleanbuildTry
buildArraybuildGetValue
buildBreakbuildImplicitCastbuildGetObjectValuehandleJavaLibrary!loadIrAndMakeIrFragmentGenerators#collectExportedSymbolsForDirtyFilesrebuildDirtySourceMetadataactualizeCachesloadModifiedFiles!updateStdlibIntrinsicDependencies$addDependenciesWithUpdatedSignaturessetAllDependenciescompileDirtyFiles#getExportedSignaturesAndAddMetadata-addDependenciesWithRemovedInverseDependenciesbuildAndCommitCacheArtifacts"commitCacheAndBuildModuleArtifactsaddDirtFileStataddDependentsWithUpdatedImportsaddFilesWithRemovedDependencies)collectFilesWithModifiedExportsAndImports"loadIrForDirtyFilesAndInitCompilercollectFilesToRebuildSignaturesgetLibIncrementalCachegenerateIrFragmentsgetStopwatchLastLapsgetDirtyFileLastStatsimplicitCastIfNeededTo
isToStringisEqualscopySuperTypesFromallOverriddencopyToWithoutSuperTypescreateDispatchReceiverParametergetArgumentsWithIrisFalseConstisElseBranchremapTypeParameterscopyAnnotationsWhencopyValueArgumentsFromsimpleFunctionsisTrueConstisSuperToAnyisCompositecoerceToUnitIfNeeded!createStaticFunctionWithReceiverscopyAnnotations makeTypeParameterSubstitutionMapcreateParameterDeclarationspassTypeArgumentsFromisEffectivelyExternalsetDeclarationsParentcopyTypeAndValueArgumentsFromcopyAnnotationsFromreferenceClassifier*copyAndRenameConflictingTypeParametersFromisNullConstaddSimpleDelegatingConstructorcopyTypeParametersextractRelatedDeclarationfindInterfaceImplementation	ir2stringgetTypeSubstitutionMapcreateStubDefaultValuecoerceToUnitcopyParameterDeclarationsFromhasInterfaceParentgetKFunctionTypeusesDefaultArgumentsisMethodOfAnyisIntegerConstisFakeOverriddenFromAny7createImplicitParameterDeclarationWithWrappedDescriptor!isExternalOrInheritedFromExternalirConstructorCallcopyValueParametersToStaticgetAllArgumentsWithIraddArgumentscopyReceiverParametersFromcomputeAllOverridden
isHashCodegetArgumentsWithSymbolsremapReceiverir2stringWholeaddExplicitParametersTofindDeclarationshallowCopyOrNullgetPackageFragmentcollectSuspendableNodeshandleAndroidLibrarydoesNotReturncleanUpStatementsisContinuationItselfisSuspendableNodemarkNodeneedUnboxingOrUnit!computeLivenessAtSuspensionPointsassignStateIdsgenerateJsTestsgetOrCreateGetInstanceFunctiontoMavenNamecreateSerializerForFiledeclareFieldStubreferencePropertyIfAny referenceExternalPackageFragmentforEachDeclarationSymbolforEachSymbolImpldeclareSimpleFunctionFromLinkerdeclareExternalPackageFragment declareSimpleFunctionIfNotExistsdeclareEnumEntryIfNotExistsintroduceValueParametercreateConstructorSymboldeclareClassWithSignaturedeclareConstructorIfNotExistsdeclarePropertyIfNotExistsdeclarecreateOwnerSafeintroduceLocalgetByDescriptor"declareSimpleFunctionWithSignaturedeclareConstructorWithSignaturedeclareLocaldeclareAnonymousInitializer
referenceddeclarePropertyWithSignaturedeclareVariablecreateEnumEntrySymbolcreateTypeAliasSymboldeclarePropertydeclarePropertyFromLinkerdeclareScript)declareExternalPackageFragmentIfNotExistsdeclareLocalDelegatedPropertydeclareConstructorFromLinkerreferenceLocalDelegatedPropertydeclareClassIfNotExistscreateTypeParameterSymboldeclareScopedTypeParametergetLocalcreateSimpleFunctionSymboldeclareEnumEntryFromLinkergetByIdSignaturereferenceValuedeclareTypeAliasdeclareValueParameterdeclareTypeAliasIfNotExistsdeclareClassFromLinkercreateFieldSymbolreferenceSimpleFunctionIfAnycreateClassSymboldeclareClassreferenceConstructorIfAnycreatePropertySymboldeclareConstructordeclareIfNotExistsdumpTodeclareFieldWithSignaturedeclareFieldcheckOriginaldeclareEnumEntrydeclareGlobalTypeParameter$fixReferencesToConstructorParameterscreateEntryAccessorNamebackendSpecificExplicitRootgetArgumentFromSingleSegmentlowerEnumEntrytoArrayLiteralcreateInvocationisEffectivelyVisibleFromTestsisVisibleFromTestssuiteForPackagecanBeInstantiated
createLong
lowerConstuseAsResultuseAsReturnValuebuildSafeCalluseReturnableExpressionAsType'getValueForInstanceFieldForTheFirstTimegenerateInitInstanceFieldcreateVarsForTrailingParametersemitCopyVarargToArraytoPrimitiveArrayLiteralunboxElementIfNeededboxArrayIfNeededhandleJavaModulehandleAndroidModule	isGetUnit1createInnerClassConstructorWithOuterThisParameter-getInnerClassOriginalPrimaryConstructorOrNullgetOuterThisField.getInnerClassConstructorWithOuterThisParameterbuildInitDeclarationbuildConstructorDelegatebuildFactoryDeclarationbuildConstructorFactorytransformAccessortransformMemberToStaticFunctionvarWithNameExistsInScopeOf	visitVarsvariableWithNameExistsgetCurrentConstructorReferenceexcludeFromExportgenerateThisVariablereplaceSuperCallsAndThisUsages
irAnyArraygenerateCreateFunctiongenerateInitFunction!generateExportedConstructorIfNeedcreateAccessorisTopLevelPrivatecontainsCallsTomoduleDeserializerbuildThrowErrortransformErrorExpressionirCastIfNeededtoLintModelinitializeForStandalonecreateBridgegenerateBridges.initializeForStandaloneWithKotlinMultiplatformgenerateCommandLineArgumentsoutlineJsCodeIfNeededvisitValueParameterNewregisterValueDeclarationwithLocalScopefindValueDeclarationWithNameirNullabilityCheckcallGetClassByTypecallGetKClassFromExpressioncreateKTypecallGetKClassgetOpenPrimitiveKClassprimitiveClassPropertygetFinalPrimitiveKClasscreateEnumEntryInstanceVariablecreateFunctiongetFunctionBodyOffsetsgetReturnType prepareForEvaluateScriptFunctiontransformLastExpressionmaybeDoDispatchtransformArgumentsaddStatement
doContinuenewState
doDispatchlastExpressionbuildExceptionTrapStatebuildIsCheckbuildDispatchBlockbuildUnboxingStatebuildGlobalCatchpendingExceptionfinalizeStateMachinesetupExceptionStatetempVarisBlockEndeddoDispatchImpladdExceptionEdgebuildTryStatehasResultingValueresetExceptionStateIfNeededtransformLoopcomputeTopLevelClassNameputLocalClassNamesanitizeNameIfNeededgetActualPrimitiveCompanion+getActualPrimitiveCompanionPropertyAccessor!buildPropertiesInitializationBodycreateInitializationFunctionbuildBodyWithIfGuardcreateInitializationFielduseAsasLintPathsuseAsValueArgumentuseAsExtensionReceiveruseAsDispatchReceiveruseAsVarargElementvisitNameRefinitializeGlobalInputsisDeclaredInsideJsCodetransformErrorDeclarationhasSuperContextParameterparametersForCall"shouldReplaceWithSyntheticFunctionlowerExternalEnumEntryclassAsReceivercreateFieldForEntryfindApkscollectNativeImplementationspropertyWithPersistentSafeallFieldsInFilePurecreateIrGetFieldwithPersistentSafeinjectisForLazyInitisCompatibleDeclarationcalculateFieldToExpressiontransformEnumConstructorgetParameterTypetoBlockBodycreatePrimaryConstructorgetWrapperVisibilitycurrentScopeSymbolgetSuperTypeForWrapperwrapInGlobalThisneedToBeWrappedWithGlobalThishasDefaultArgsgenerateJsNameAnnotationCallintroduceDefaultResolutiongenerateDefaultStubBody!createDefaultResolutionExpressioncreateResolutionStatementaddThrowableConstructorSlotundefinedValueextractThrowableArgumentsisGetJsCallgenerateDirectConstructorUsagegenerateDirectValueUsagegenerateDefaultArgumentStubFromintroduceContextParam.replaceSecondaryConstructorWithFactoryFunctionisSafeToInlineexplicitlyConvertedToStringmoveOpenClassesToSeparateFilesgenerateFactoryBodygenerateInitBodygenerateStubsBodycreateInitEntryInstancesFun"createEntryInstancesInitializedVargetArrayContentEqualsSymbolchooseConstructor+implementAnnotationPropertiesAndConstructorcalculateFileFieldsPurenesscreateGetEntryInstanceFunhackExceptionsgenerateDefaultResolutioncreateJsObjectLiteralgenerateBoxParameteraddBoxParameter!replaceThisWithBoxBeforeSuperCallhackSimpleClassWithCapturing	hackEnumsremoveConstructorForExportconvertToRegularConstructorwithoutFirstcreateEnumValuesBodycreateEnumValueOfBodysearchForValuesFunctionarrayOfEnumEntriesOfbuildEntriesFieldcreateEnumEntriesBodyisIntrinsicisStdLibClass"validateNestedExternalDeclarationsisBuiltInClass'moveBodilessDeclarationsToSeparatePlacevalidateIsExternalisPlacedInsideInternalPackage#addToClassListWhichNeedBoxParametercontainsCapturedValues#shouldBeConvertedToPlainConstructor%collectImplicitlyExportedDeclarations shouldBeMarkedWithImplicitExportmarkWithJsImplicitExportrequiredToHaveBoxParameterbuildGetterLambdagetJsTypeConstructorbuildAccessorLambdabuildSetterLambdabuildLocalDelegateLambdanameExpressiondiagnosticMethodshouldBeExcludedFromExport&isExportedSyntheticEnumEntriesPropertyexcludeFromJsExportisComponentMethodOfDataClassgetOriginalFunctiongenerateJsExportIgnoreCallprocessStatementsdestructureCompositematerializeLastExpressionisReceiverNonDetachablemakeTempVargenerateBuildClassmakeLoopLabelasExpressionmapArgumentsgetOrdinalExpressiontransformBodygetNameExpressionlowerEnumEntryClassConstructorslowerEnumConstructorsBody#lowerEnumEntryInitializerExpressioninitializeStateMachinecreateCoroutineInstancebuildCoroutinetransformInvokeMethodbuildNewCoroutineClassbuildInvokeSuspendMethodisReturnIfSuspendedCalltransformSuspendFunctiongetCoroutineClassgetSuspendFunctionKind4removeReturnIfSuspendedCallAndSimplifyDelegatingCallbuildCreateMethod1isSubclassOfExternalClassWithRequiredBoxParameter2hasPrimaryDelegatedToSecondaryOrSecondaryToPrimarycanBeOptimizedcheckIfCanBeOptimizedcreateReceiverFieldcollectNamesForLambdabuildReferenceClasscreateNamePropertybuildFunctionReference#createFunctionReferenceInvokeMethodmakeContextDependentNamebuildInvokecreateLambdaInvokeMethodbuildLambdaReferencecountContextTypeParameterscreateInvokeMethodmutableReferenceOfwriteBooleanwriteDoublewriteCollection	ifNotNullwriteByteArraygetClassRefdeserializeJsIrProgramFragmentisImportedFromModuleOnlyhasStaticDispatchhasStableJsNamefindUnitGetInstanceFunctionprependFunctionCallinvokeFunForLambdaisEqualsInheritedFromAnypreConfigureasArgumentsflatten
toIdStringrelocateconfigureForStandaloneregisterOutputArtifactsdoIncrementalTaskActiononDifferentVersionsFoundtoJsNameisInKeep
shouldKeepisExportedClassisExportedMemberhasStrictSignaturejsConstructorReferenceisTheLastReturnStatementInisUnitInstanceFunction getFqNameWithJsNameWhenAvailableisExportedInterfacegetVoidgetKotlinOrJsQualifierirEmptydeclareStableNamefindFreshNamedoFullTaskActionisSuitableForMainParametersSizegetMainFunctionOrNulleraseGenericsisContinuationParameterisStringArrayParameterisLoweredSuspendFunctionnameIfPropertyAccessorjsFunctionSignaturemangleIfNotcalculateJsFunctionSignaturemapToKeytoJsIdentifiergenerateNextNamenameBySignaturekeepNamereserveNamepersistLoopNamepersistReturnableBlockNamegetDestinationDirwriteCompositeBlockinternalizeName
writeBlockinternalizeStringwriteLocalAliaswriteIrIcModelwriteCommentwriteParameterwriteFunctionwriteFragmentwriteImportedModulewriteExpressionwriteStatement	writeVarsreadExpressionreadIrIcClassModelreadNamereadCommentreadCompositeBlockreadStatementreadVarsreadRepeated	readArray
readDoublecreateDynamicBundleTaskreadParameterreadLocalAliasreadJsImportedModulereadFragmentreadBoolean	readBlock
setActionsisJsNativeGetter!getJsNameForOverriddenDeclarationdfsOverridableJsNameOrNullgetDeprecatedisJsNonModulegetJsModule
isJsExportgetSingleConstStringArgumentisJsNativeSettergetJsQualifierisJsExportIgnoregetJsNameOrKotlinName	getJsNameisJsImplicitExporthasJsPolyfillassociatedObjectisJsNativeInvokeasCallableReferencecreateFunctionExpressionbuildLambdaBody7replaceLambdaConstructorCallWithReferenceToLiftedLambda%createOldToNewInvokeParametersMappingreplaceWithFactoryremapCapturedFields+replaceLambdaConstructorCallWithFactoryCallcreateLambdaDeclaration"referencesVariablesDeclaredInLoopstransformCallableReference&lambdaCapturesVariablesDeclaredInLoopssetDynamicPropertyinlineLambdaBodyextractReferenceReflectionNamedontWarnlambdaInnerClassesbuildFactoryBodygetLambdaConstructorCalls
liftLambdagetNameForValueDeclarationgetEndLocationForIrElementnewFilecheckIfJsCodegetStartLocationForIrElementgetNameForReturnableBlockcheckIfHasAssociatedJsCodegetNameForLoopnewDeclarationgetLocationForIrElementgetExportCandidate1shouldDeclarationBeExportedImplicitlyOrExplicitlyisOverriddenExportedshouldDeclarationBeExportedtoExportedVisibility isExportedImplicitlyOrExplicitly"isAllowedFakeOverriddenDeclarationtoTypeScriptFragmentjoinTypeScriptFragmentsgetCorrespondingJsClassgenerateTopLevelGettersgenerateClassMembers
bindToThisgenerateInnerClassAssignmentgenerateModuleExportgenerateDeclarationExportasFragmentsasCrossModuleDependenciesclassExportabilityexportClass#shouldPresentInsideImplementsClauseexportEnumClass%canBeUsedAsSuperTypeOfExportedClassesexportAsEnumMemberexportClassDeclarationsfunctionExportabilityexportEnumEntryexportFunctionwithAttributesForexportPropertyUnsafelyaddMagicInterfacePropertygenerateTagTypeshouldNotBeImplementedshouldAddMagicPropertyOfSuperexportParameter*addMagicPropertyForInterfaceImplementationisOwnMagicPropertyAddedexportDeclarationexportDeclarationImplicitlygetExportedIdentifier
exportTypeexportConstructorgenerateExportexportOrdinaryClasscollectSuperTransitiveHierarchy*shouldContainImplementationOfMagicPropertyexportTypeParameterexportTypeArgumentgenerateJsCodekeepAttributestsIgnoregenerateTypeScriptStringtoExtendsClausetoImplementsClausewithProtectedConstructorsgenerateTypeScriptasNestedClassAccesstoReadonlyPropertytsDeprecatedgenerateTypeScriptFragment generateObjectsNamespaceIfNeeded#hasSuperClassWithPrivateConstructorcouldBePropertymakeModuleHeadergetAllPolyfillsFor'registerDeclarationNativeImplementation)saveOnlyIntersectionOfNextDeclarationsForasImplementationList$collectSuperTypesTransitiveHierarchycollectTransitiveHierarchy'collectSuperTypesTransitiveHierarchyForfindNearestExportedClasscalculateTypeSubstitutionMap	addAssigngreaterThanassignmentToThisField
assignmentnewJsIf
lessThanEq
inequalitydeBlockIfPossiblegreaterThanEqequalitydecomposeAssignmentlessThantypeOfIsasSourceMappingUrlcopyModificationTimeFromoverridesExternal$isAccessorOfOverriddenStablePropertyisSimpleSuperCallshouldExportAccessoroverriddenStablePropertyescapedIfNeed
foldString translateJsCodeIntoStatementListgetFullTsDefinitiongetRequireEsmName renameImportedSymbolInternalNamegetApkFileswriteJsCodeIntoModuleCache	endRegiontransitiveJsExportprocessClassModelsdeclareAndCallJsExporterlinkJsNamesassertSingleDefinitionstartRegionaddWithCommentbuildRenamesgenerateStatementgetJsStatementsgenerateExpressionsafeName	fromFlagsmakeJsExporterNamemakeInternalModuleNamemakeCrossModuleNameRef	fieldDatagenerateSimpleName isDefinedInsideExportedInterfaceaccessorRefgenerateAssociatedObjectsisFunctionTypeshouldCopyFromgetOrGenerateIfFinalOrEs6ModeprototypeAccessRefgenerateSetMetadataCallgenerateSuspendAritygenerateAssignmentIfMangledgenerateAssociatedObjectKeyhasMangledNamegetMetadataConstructorasConstructorRefgenerateMemberFunctiongenerateInterfacesListmaybeGeneratePrimaryConstructorisUpdateRequired!generateImportVariableDeclarationgenerateJsImportStatement"generateCrossModuleImportStatementinitJsImportsForModuleEmptygenerateSingleWrappedModuleBodygenerateWrappedModuleBodyresolveCrossModuleDependencieswrapEsModulerequiresEscapingtranslateCalljsElementAccesscheckOnNullabilityasBlockjsUndefinedvarargParameterIndex
withSourcedefinePropertyoriginalNameForUseInSourceMap argumentsWithVarargAsSingleArraypureIfPossibletranslateFunctionjsAssignmentgetSourceLocationobjectCreateisFunctionTypeInvokewithEmbeddedSourcevalidWithNullArgsisVoidGettertoJsNodecanUseSuperRefaddSourceInfoIfNeedgetStartSourceLocationprefixOpwithTranslatedArgsbinOp
mergeFiles	postfixOpcollectReplacementsForCallgetJsFunctionImplementationgenerateResultStatementtoJsImportedModulebuildCrossModuleRefsrelativeRequirePathbuildExportNamesgenerateKLibcreateBuiltInsgetSerializedDatagetUniqueNameForEachFragmenttoIoFileOrNull!KlibMetadataIncrementalSerializergetIrModuleInfoForKlibgetIrModuleInfoForSourceFilesgetDescriptorForElement!generateModuleFragmentWithPluginspreparePsi2IrserializeModuleIntoKlib)compareMetadataAndGoToNextICRoundIfNeededsortDependenciesdeserializeDependenciesbuildJsSwitchisSuitableForSwitchdetectSwitchtryOptimizeisTrueConstantmaybeOptimizeIntoSwitch wrapInCommentsInlineFunctionCallbodyLoweringexternalModuleNamegenerateExportWithExternalsgenerateMainArgumentsgenerateModulemakeIrFragmentsGeneratorsdoStaticMembersLoweringassociateIrAndExportmakeJsCodeGeneratorFromIrgenerateProgramFragmentbinaryOperationpostfixOperationtoDoubleConstprefixOperation	compileIroptimizeProgramByIroptimizeFragmentByJsAstdeclarationTransformer!parseSerializedIrFileFingerprintsjoinIrFileFingerprintslowerPreservingTagsisTypeInlinedshouldValueParameterBeBoxeddeclareSharedVariabledefineSharedValuesetSharedValuegetSharedValuelazy2prepareAnalyzedSourceModulegetModuleDescriptorImplrunAnalysisgetModuleDescriptor"isFunctionTypeInterfacePackageFilemakePackageAccessorcalculateKlibHashcalculateKlibFingerprintcalculateFileFingerprint
testsFoundisSideEffectFree%primitivesWithImplicitCompanionObjectgetOperatorByNamegetJsCodeForFunctiongetJsInternalFunctionreferenceOperatorsgetJsInternalClass
getIrClassaddOutlinedJsCodegetJsInternalPropertygenerateMainFunctionCallsjvmResolveLibrariessetupPartialLinkageConfigisPartialLinkageRuntimeErrorresolveModeresolveLogLeveltoCompilerPhasemakeBodyLoweringPhasemakeDeclarationTransformerPhasemakeCustomJsModulePhasemakeJsModulePhasetoModuleLoweringrunOnFilesPostfixgetIgnoreFailuresgetReportsDirvisitModuleDeclarationisMainFunctioncomputeCustomizationthrowLinkageErrorplatformSpecificSymbolisJavaDescriptorresolveDescriptorisCleanDescriptorgetResultsDirdeclareJavaFieldStubresolveBySignatureInModulegetAdditionalTestOutputEnabledgetAdditionalTestOutputDirwrapInDelegatedSymbolgetInternalWithoutPackagegetInternalFunctiongetFunctionInKotlinPackagegetInternalWithoutPackageOrNullgetInternalClassWithoutPackagegetInternalPropertysetIgnoreFailuresgetCoverageDirectorygetLocalDeclarationParentinventNameForTemporary"createTemporaryVariableDeclarationwithImplicitlyExportedgetEnvVariable	blockBodygetDeprecationTargetMessagesetSourceRangeprimitiveOp1eqeqeq
equalsNull	whenCommaprimitiveOp2
elseBranch	irDoWhileirGetObjectirWhilecreateTmpVariable
irContinuebuildStatementirBreak
buildClassbuildReceiverParameteraddConstructorbuildPropertybuildFunctionbuildFunaddPropertybuildTypeParameter
buildFieldaddTypeParameter	addGetterbuildVariableaddBackingFieldaddDefaultGetteracceptChildrenVoidfindMemberWithMaxVisibilityisEffectivelyPrivateisVisibleForOverridebuildFakeOverrideMemberisOverridablePropertyisInFriendModulesisOverridableMemberOrAccessorisOverridableFunctionisPrivateToThisModulelinkFakeOverridefakeOverrideMembergetDeclarationDescriptorfactoryreportRenamedConfiguration
setOutTypereportDeprecatedValuereportOptionIssuesIfAnyreportRemovedApireportDeprecatedApitoAnnotationDescriptordetermineFileFordefaultLocationWithoutPathdetermineForcomputeLocationForOffsetdetermineModuleFortoIrBasedKotlinTypetoIrBasedDescriptorIfPossibletoIrBasedDescriptorreportDeprecatedConfigurationreportObsoleteUsagereportDeprecatedUsageisInStandardEvaluationModeremapTypeArgumentslockHandlerinstantiateExtensiongetStorageManagerisCapturedFromOuterDeclarationgetIndexcreateExtensioncreateComponentExtensionconfigureProjectinitExtensionFromSettingsgetAnalyticsPluginTypeconfigureExtension	isDefaultgetCorrespondingPropertygetProjectBuillder&setInitialMemorySampleForConfigurationregisterSpaninitializeResourceManagerworkerAddedworkerStartedsetConfigurationSpansgetProjectPathrecordEventgetTypeNamegetTaskRecordgetVariantBuilderrecordBlockgetProjectBuilderreflectFunctionClassFqnreflectionFunctionClassNamerecordApplicationIdcreateAnalyticsServiceworkerFinishedonTestResultEventsetTestVariantDatagetTestVariantDatapreVariantCallbackcreateBuildFeatureValuesgetCorrespondingClass createHostTestBuildFeatureValuescreateDefaultComponents$createTestFixturesBuildFeatureValues#createAndroidTestBuildFeatureValuescreateVariantDatacreateVariantBuilder
toIntArraynewDecoratedInstance
lockValuesgetOrSetActionPerformedgetLeasingAapt2registerAaptServiceinitializeAapt2InputfileProvidercreateEmptyTasklockProperties	isPrimarygetConstructedClass extractAndBindOverridesForMembercollectOverriddenDeclarationsisReturnTypeMoreSpecificcreateTypeCheckerStateareEquivalent determineModalityForFakeOverrideisMoreSpecificThenAllOfisOverridableBy(isOverridableByWithoutExternalConditionsisMoreSpecificisVisibilityMoreSpecific#extractMembersOverridableInBothWaysgetOverriddenDeclarations#updateAccessorModalityAndVisibilitygetBothWaysOverridabilityisAccessorMoreSpecificselectMostSpecificMember filterOutCustomizedFakeOverridescreateAndBindFakeOverridesfilterVisibleFakeOverridesbuildFakeOverridesForClass generateOverridesInFunctionGroupcreateAndBindFakeOverride0buildFakeOverridesForClassUsingOverriddenSymbolsgetMinimalModalitysetPropertyOf'newNullablePropertyBackingDeprecatedApifunctionClassNamenewPropertyBackingDeprecatedApifileTreeFactoryinlineStatementsetProviderOfnewListPropertyForInternalUsenewProviderBackingDeprecatedApitoRegularFileProvidernullableProviderOfregularFilePropertymapPropertyOfdirectoryPropertylistPropertyOfnullablePropertyOf
propertyOf
providerOfcreateUserVisibleVariantObjectonTestedVariantlongfloatdefaultValueForTypecomputeTaskNamedoublepublishBuildArtifactsshortcharbooleantypeParameterDescriptormemberDescriptorcreateValueParametercreateTypeParameterscreateMembersfinalizeAndLockcomputeLocalPackagedJarscreateThisReceivergetArtifactNamevalueParameterDescriptorcreateFunctionClass classReceiverParameterDescriptorgetJavaClasspathgetResolutionResultgetAdditionalArtifactsgetElementscomputeLocalFileDependenciesisAssignmentOperatorisAssignmentOperatorWithResult
putElementcheckArgumentSlotAccessimplicitCastToputArgumenthasNoSideEffectsisUnchangingcopyTypeArgumentsFromputTypeArgumentputValueArgumentgetTypeArgumentgetValueArgumentirIfThenReturnTrueirUnitirLongirSamConversion
irGetFieldirBranchirGetObjectValueirIntirIsirReinterpretCastirIfThenReturnFalse	irBooleanirRawFunctionReferenceirStringirAsirConstantPrimitiveirConstantObject
irExprBodyirCallConstructorgetFailuresirFunctionReferenceirReturnTrueirIfThenMaybeElseirLetSgetResolvedArtifactsirTemporaryirCallOpirSetirConcatirConstantArrayirTrueirEqeqeqirCharirTryirIfThenElseirIfThenirReturnFalseirIfNullirReturnirImplicitCastirNotEqualsirEqeqeqWithoutBoxirDelegatingConstructorCallirNullirElseBranchirVarargirEqualsNullirNotIs
irSetFieldtypeOperatorirWhenirFalseirReturnUnitirGetgetClassTypeArgumentsgetClassTypeArgumentgetConstructorTypeArgumentputClassTypeArgumentgetConstructorTypeArgumentIndexputConstructorTypeArgumentgetConstructorTypeArgumentsequalsByAdapteeCall	isAdaptergetAdapteeCallSymboltransformPostfixisObjectgetClassifiergetSupertypesirClassFqNamegetIrFunctionFromGivenClassgetRealFunctionloadOuterClassesIntospliteratorrenderReceiversgetAttributesForConfignullStateOfTypedefaultEqualswasAlreadyCalledfallbackIfMethodNotFounddefaultToStringdefaultHashCodehasTheSameFieldsWithasInt
toKbStringmustBeHandledAsReflection	asBooleancheckNullabilityisNullasStringOrNullasBooleanOrNullconvertGetterToKFunctionStateisKProperty2isKMutableProperty1isKProperty0isKMutableProperty0isKProperty1isKMutableProperty2getEqualsFunctiongetKotlinNamegetIrFunctiongetToStringFunctioncreateToStringIrCallgetHashCodeFunctionhasNoSubFramesaddSubFrameforEachSubFrame"getLineNumberForCurrentInstructionjavaDoc$removeSubFrameWithoutDataPropagationgetSpeccopyMemoryIntoreverseMetadatadoTaskActiongetComponentFiltergetArtifactFileCollectionremoveSubFramereportBuildAnalyzerIssue"unrollInstructionsForBreakContinuecreateAndroidExtensionloadUpValuesnewSubFramedropFrameAndCopyResultreturnFromFrameWithResultgetStackCountcopyUpValuesFromPreviousFrame	dropFramedropSubFramestoreUpValuesdropFramesUntilTryCatchnewFramecanEvaluateFunctioncanEvaluateEnumValueisMarkedWithisMarkedAsEvaluateIntrinsic"isMarkedAsIntrinsicConstEvaluationisMarkedAsCompileTimecanEvaluateReferencemustCheckBodyOf
isContractisCompileTimeTypeAliashandleUserExceptionverifywithExceptionHandlercreateInvokeFunctiongetArity&isCallToInvokeOrMethodFromFunInterface'isCallToNonAbstractMethodOfFunInterfacegetAndroidTargetsetAsmFramesComputationModeinterpretTernaryFunctioninterpretUnaryFunctioninterpretBinaryFunctionevaluateAdditionalStackTracecopyFieldsFrommaybeLoadClassDatagetShortDescriptiongetFullDescriptionevaluateFieldsrecalculateCauseAndMessage
setMessagesetCausecustomEvaluateInstructionarrayToStringgetEnumEntryByNameunwindInstructionscanHandleFunctionWithNamewarningIfErrortransformAnnotationtransformSingleArgreportIfErrorcanBeInterpretedtransformVarArgconvertToConstIfPossiblepushSimpleInstructionpushCompoundInstructiongetOriginalOverriddenSymbolsgetStaticMethodgetConstructorMethod!isValueParameterPrimitiveAsObjectgetMethodTypegetCorrespondingFunctionmustBeHandledWithWrappergetCompanionObjectgetSignatureisReturnTypePrimitiveAsObjectgetJavaOriginalNameisExtensionReceiverPrimitivegetEnumEntrygetJvmClassNamegetStaticGettergetReflectionMethodgetProguardFiles
resetCachecreateTopLevelTaskscalculateBuiltInshandleIntrinsicMethodsdoCreateTasksForVariantcalculateRangeTotrySubstituteFunctionBodyallAvdsgetCachedFunctionsetCachedFunctionconvertToStategetIrClassOfReflectionFromListcopyWithNewCallStackstateToIrExpressioncreateConstructorCallcreateGetValuecreateTempFunctioncloseOpenEmulatorscreateGetObjectcopyArgstoIrConstOrNullcreateTempVariablewrapWithBlockBodyirIfNullThenElseemptyArrayConstructorcreateGetFieldcreateTempClasscreateReturngetTypeIfReifiedgetVarargTypegetLastOverriddengetFunctionThatContainsDefaults	checkCastgetThisReceiverisSubclassOfThrowable$isAccessorOfPropertyWithBackingFieldgetArgsForMethodInvocationisAccessToNotNullableObjectgetOriginalPropertyByNameaccessesTopLevelOrObjectFieldgetEvaluateIntrinsicValuegetFirstNonInterfaceOverriddenunsignedToStringgetSingleAbstractMethodloadReifiedTypeArgumentsgetDefaultWithActualParametersgetReceivergetCapitalizedFileNamegetOnlyNamegetExtensionReceivertoPrimitivehasFunInterfaceParenttoPrimitiveStateArrayspecialToStringForJssaveContextvisitBodyIfNeeded	asVisitedgetInnerDeclarationsisGetterToConstValvisitValueArgumentsunfoldCatchunfoldThrow
unfoldBodyunfoldBranchunfoldCallableReferenceunfoldClassReferenceunfoldBlockhandleAndDropResultunfoldValueParameters
unfoldWhenunfoldSetValueunfoldEnumEntryunfoldGetValueunfoldVariableunfoldGetEnumValueunfoldTypeOperatorCall	unfoldTryunfoldConstructorunfoldDoWhileLoopunfoldGetObjectValueunfoldInstructionunfoldStringConcatenationunfoldInstanceInitializerCallunfoldFieldunfoldFunctionunfoldGetClassunfoldWhileLoopunfoldCompositeunfoldVarargunfoldContinueunfoldSetFieldunfoldStatementsunfoldEnumConstructorCallunfoldPropertyReferenceunfoldBreakunfoldFunctionReferenceunfoldReturnlazyVar"createEmptyExternalPackageFragmentincrementAndCheckCommandsinterpretConstructortryResetFunctionBodyinterpretStringConcatenationinterpretFunctionReferenceinterpretConst
deleteAvdsinterpretClassReferenceinterpretEnumConstructorCallinterpretTypeOperatorCallinterpretBranchinterpretBlock"interpretDelegatingConstructorCallinterpretConstructorCallinterpretFunctionExpressioninterpretGetClassinterpretFieldinterpretReturninterpretVararginterpretGetObjectValueinterpretThrowinterpretGetEnumValuewithNewCallStackinterpretTryinterpretValueParameterinterpretCallinterpretDoWhileinterpretEnumEntryinterpretPropertyReferencegetUnitStateinterpretSetFieldinterpretBodyinterpretWhileinterpretFunctioninterpretGetFieldgetOptionalLibraries	tryLoadIrcreateLazyAnnotationsgenerateReceiverParameterStub
lazyParentcreateLazyParentcreateInitialSignatureFunctioncreateValueParametersgetTopLevelDeclarationcreateReturnTypecreateReceiverParametergetRenderScriptSupportJargetEmulatorLibFoldergetBuildToolsRevisiongetCoreLambaStubsgetAidlFrameworkgetSplitSelectExecutablegetTargetBootClasspathgetCoreForSystemModulesJargetAidlExecutablegetAdbExecutablegetAndroidJargetTargetPlatformVersiongetSystemImageLibFoldergetFileFromBuildToolgenerateChildStubsgetApiVersionsFilegetBuildToolsInfogetAnnotationsJargetIrValueParameter	addMemberfindPsiElementgetLineOffsetsgetRecognizableNametransformStatementdeepCopyWithVariablesgetAdditionalLibrariesfromSerializedStringremoveIfNecessaryisAmdDefineisTopLevelFunctionisDefineInlineFunctionisDefineModuleisWrapFunctionisObjectDefinePropertyisObjectFunctionextractRootsImplextractLocationextractReachableRootsisSpecialFunctionisKotlinFunction isObjectGetOwnPropertyDescriptor	printTreezipFilegetZipModificationTimehandleAmdDefineisProperFunctionalParameterprocessFunctionhandleObjectCreate'extractVariableInitializedByEmptyObjectprocessAssignmenthandleObjectDefinePropertyenterFunctionWithGivenNodesreachshouldTraversereportAndNestreachDependencies"createPrepareLintJarForPublishTaskreachDeclarationnestedwithErasedThisvisitNameLikeNodeisValidES5IdentifierisES5IdentifierStartisES5IdentifierStartFullisES5IdentifierPartisAllowedLatinLetterOrSpecialisAllowedSimpleDigitisNotAllowedSimpleCharacterresolvePolicyclearVisitedaddExpressionevacuateFromextractNodeImplmakeDependenciesaddUsedByAstNodeextractNodeaddNodesForLocalVarspathFromRootmembercreateInstallTaskrefreshLabelNamesaliasArgumentsIfNeededrenameLocalNamesisFunctionCreatorgetInnerFunctionreplaceThisReferencereplaceNamesgetReturnReplacementprocessCoroutineResultapplyToNamedNodefixForwardNameReferencescanHaveSideEffectcanHaveOwnSideEffectgetSimpleIdentgetCallerQualifierImplgetCallerQualifierhasCallerQualifiergetSimpleNameisCallInvocationtoIdentitySetIdentitySetzipWithDefaultremoveUnusedImportscollectUsedImportsemergePrimitiveKClassfindBreakInNestedLoopisLocalFunctionDeclarationcreateVariantPreBuildTasktrySaveIncrementalDatatoTranslationDatatranslateWithoutCodetranslateUnitsserializeInlineDatavalidateJsAstupdateMetadataMap	translate
unuseLabeluseLabelcreateJacocoTaskrenameLabelsextractSingleStatementlhsEqualsubstituteKTypes$checkNoInvocationsWithRecursiveKType checkDoesNotCreateRecursiveKTypegetTransitiveKTypeappendArgumentscollectDefinedNamesInAllScopesextractImportTagcollectLocalVariablescollectDefinedNames collectNamedFunctionsAndMetadatacollectNamedFunctionscollectLocalFunctionscollectAccessorscollectFreeVariablesgetImportTagcollectBreakContinueTargetscollectInstancesextractImportTagImpl collectNamedFunctionsAndWrappersextractFunctioncollectUsedNamescollectReferencedNamescollectNamedFunctionsOrMetadatahasContinueisReachableaddRemovableReferencegetReferencedByisReferenceToRemovableCandidatemarkReachableaddCandidateForRemovalsimplifyWrappedFunctionsremoveDefaultInitializersgetNameFromInitializermarkAssignmentAsStaticRefisNameInitializedgetDefaultParamsNamesprocessLocalFunctionprocessNonLocalFunctionwasProcessedreplaceMany
doTraverselabelLoopBreaksAndContinuesremoveUnusedFunctionDefinitionshandleProviderpostJavacCreationremoveDuplicateImportsshouldConsiderUnusedcleanUp	sdkLoaderuseVariableshouldConsiderTemporaryreferencedIntassignVariablegetCodemetadataFileskjsmFileForPackagegetOutputFilestransformLabeledBlockToDoWhile%removeUnusedLocalFunctionDeclarationsreferencedMethodnewNamingContextreplaceNameapplyRenameTowithParentsOfNodestoStatementimportFunctionDefinitionmarkInlineArgumentsreplaceExternalNamesreportInlineCyclewithFunctioninlinecopyInlineMetadata$patchReturnsFromSecondaryConstructor!tryCreatePropertySetterInvocationdoAcceptStatementList!tryCreatePropertyGetterInvocationhasToBeInlinedisResultNeededgetResultReferencereplaceThisgetThisReplacementapplyCapturedArgsgetLabelPrefixuncoverClosuregetThisAliasprocessReturnshasThisReferencegetResultLabelgetInlineableCallReplacementgetBreakLabelgetInnerCallmarkDefaultParamsrewindToIdentifierStartoffsetreadFunctionFromSource	remapPathremoveRedundantPathPrefixstartMethodVisitrenameModulesendMethodVisitreferencedStaticFieldreferencedStringaddInlinedModuleaddNameBindingshouldProcessencodeForSignaturenameTypeParametersgetOwnTypeParametersencodeSignaturedebugVerbose
mapSourcesdebugToStringreplaceSourceslookUpStaticFunctionlookUpFunctionIndirectloadInfofragmentByTaggetFunctionDefinitionImpltryExtractCallableReferencelookUpStaticFunctionByTaglookUpFunctionExternalhasFunctionDefinitionlookUpFunctionDirectgetFunctionDefinition
skipSpacesexpectCharAndAdvanceparseNumberparseHexEscapeSequencetakeExponentTo	parseNodeadvanceAndThenexpectStringparseEscapeSequencetakeIntegerDigitsToparseObject	lastUsagegenerateDeclarationscalculateDeclarationsgetUsageSequence	tryRecordcollectStatementsStringReadertoJsAstparseFunctionparseExpressionOrStatementshouldReportUnusedParameter
handleNoderecordUsagesapplySourceMapfileIsNotReachablesetFlavorDimensionsisNotBeforeanalyzeFilesWithGivenTracecheckForErrorsbase64valueskipCharcreateErrorsuggest	mangledIdmangleNameIfNecessarygetSuggestedNamegetStableMangledNamegenerateDefaultmangleRegularNameIfNecessarygetInternalMangledNamegetPrivateMangledNamesetName	getSymboldoCreateNamegetRequireNamewithNewAdditionalStatementsprocessByIndicesprocessOrAndextractToTemporaryaddStatementspreserveEvaluationOrdervisitMultiLineCommentvisitDefaultvisitDoublevisitImport
acceptListvisitRegExpvisitProgramvisitPropertyInitializervisitExport	visitNullvisitDocComment	visitCase
visitSuperacceptWithInsertRemove
visitEmptyvisitBooleanvisitStringacceptLvaluevisitInt	visitThisvisitSingleLineCommentisTransparentunderlineAsHtmlunderlineAsTextcheckSuperClassextractModuleCalleecheckReifieidTypeParametersextractStringValueisJsCallreportInOperation
reportedOnisNonAbstractMemberOfInterfacefindPsilockdeclareNamecheckEntriesfindRootnormalizeDescriptorcheckJsModuleUsagemarkDiagnosticisAllowedReflectionApigetKotlinOrJsNamegetJsNameArgumentcheckOnlyDynamicFlexibleTypeisInlineReasonableisCommonDiagnosticReportedpresentsInGeneratedCodecheckOverrideClashessuggestAllPossibleNamesgetScopecheckDescriptorisFakeOverridingNativeareDescriptorsEquivalentinner
addVariant"getAnnotationsOnContainingJsModule%computePlatformSpecificDefaultImports configureModuleDependentCheckersconfigureModuleComponentstransformCoroutinesaddSourceMappingURLcalculateRelativePathTogenerateCoroutinePrototypegenerateDoResumegenerateContinuationConstructorcollectAdditionalLocalVariablesgenerateCoroutineBodygenerateCoroutineMetadataassignToFieldtransformSimplegenerateCoroutineInstantiationassignToPrototypecollectFinallyPaths(replaceSpecialReferencesInSimpleFunctioncollectNodesToSplit&collectVariablesSurvivingBetweenBlocksisStateMachineResultcollectTargetBlocksreplaceLocalVariablesreplaceCoroutineFlowStatementsreplaceSpecialReferencesaliasedNamesetInlineCallMetadatagenerateTestFunctionsgenerateTestFunctionannotationFinderfindPromisegenerateSignatureexpandIsCallsinvokeKotlinFunctiontoInvocationWithgenerateAliasexpandArgumentForTwoInvocationsgetReplacementForAndPredicategetReplacementForOrNull hasOwnParametersWithDefaultValueaddFunctionButNotExportdefinePackageAliasaddFunctionToPrototypesplitToRanges!getPrimitiveNumericComparisonInfogetPrecisePrimitiveTypeNotNullcreateCoroutineResultcreatePrototypeStatementsgetPrecisePrimitiveTypegetReferenceToJsClass'hasOrInheritsParametersWithDefaultValueaddAccessorsToPrototypegetReferenceToJsClassOrArrayresolveAccessorCallgenerateDelegateCallexportStatementgetLocalPackageNameexportObjectgetPathRelativeToSourceRootscalculatePathRelativeToOutput"calculatePathRelativeToSourceRootsgetNameForCapturedDescriptorgetNameForCapturedReceiver
isCapturedhasCapturedExceptContainingisReceiverAncestorgetJsNameForCapturedDescriptorisSingletonReceiverisInLocalDeclarationcaptureIfNeedusedgetTranslationResultnormalizeImportTagscreateIntrinsicappendSourcesgetNameIndextoVLQSignedstartMappingaddEmptyMapping
getOutFileappendSourcesContentskipLinesAtBeginninggetSourceIndexsplitIfNecessary
preProcesshasEnclosingFinallyBlockgenerateFinallyExitwithBreakAndContinueupdateFinallyPathrelativeFinallyPathhandleExpressionstatejumphandleSuspendstateAndJumpjumpWithFinallywrapIfNecessaryaddClassPostDeclarationsdefineModuledecomposeTestInvocationtryUpdateTests	isFlagSet
mergeNamestryUpdateMainisBuiltinModulebuildNameMapaddFragmentaddClassPrototypesisFakeOverrideAssignmentaddExportStatements(addImportForInlineDeclarationIfNecessarycreateTypedArraytypedArraysEnabled
intrinsifygetTagcastOrCreatePrimitiveArrayunsignedPrimitiveToSignedcreateConstructorIntrinsiccallHelperFunctionmethodIntrinsicwrapIntrinsicIfPresentgetObjectIntrinsicgetFunctionIntrinsicgetBinaryOperationIntrinsicisEnumEqualsIntrinsicApplicableappliedToDynamicprimitiveTypesbinaryIntrinsicbinaryOperationTypescomplexBinaryIntrinsiccoerceTocomputeAndCachebuildReifiedTypeArgstranslateAsSet	getCachedtranslateAsGettranslateAsBlocktranslateForExpressioncreateWhiletranslateForPropertyAccessortranslateForPropertybindIfNecessarytranslateForFunctionisSetterVisiblewrapPropertyCallableRefwrapFunctionCallableReffirstOrNullexpandWildcardstranslateCatchestranslateCatchBodyfunctionWithMetadatadecomposeCreateFunctionCalldecomposeWrapper	decomposewrapFunctionwrapWithInlineMetadatagetCorrectTypeParametersreportInlineFunctiontranslateAndAliasParametersisLocalInlineDeclarationaddDeclarationmoveCapturedLocalInsidedeclareAliasInsideFunctionaddFunctionDeclarationwithCapturedParametersgetStaticRefgetTemporaryNamesInScopegenerateValuesFunctiongenerateValueOfFunctiongenerateStandardMethodsaddGetterAndSetterhasCustomSettertranslateAccessorshasCustomGetter/contextWithPropertyMetadataCreationIntrinsified(translateDelegateOrInitializerExpressiongenerateDefaultSetterFunctiongenerateDefaultGetterFunctiontranslateHostgenerateDelegatedGetterFunctionnewDeclarationIfNecessarytranslateAsSwitch)translateWhenConditionToBooleanExpressiontranslateOrConditiontranslateExpressionConditiontranslateIsConditioncollectConstantEntriescollectPrimitiveConstantEntriestranslateConditionstranslateCondition	isNegatedtranslateEntryExpressiontranslateRangeConditioncollectEnumEntries,transformCoroutineMetadataToSpecialFunctionsref,transformSpecialFunctionsToCoroutineMetadataaddInitializerStatementgenerateClassOrObjectparseParametersdeserializetranslateUnresolvedArgumentsremoveLastUndefinedArgumentsconcatArgumentsIfNeededtranslateResolvedArgumenttranslateVarargArgumentwrapInUArrayhasSpreadElementOrNamedArgumentprepareConcatArgumentsgetSuperClass%generateDelegateCallForFunctionMembergenerateDelegatesaddInitCodegenerateDelegated%generateDelegateCallForPropertyMembergenerateGettergenerateDefaultSettertranslateCustomAccessorgetCustomSetterDeclarationgetCustomGetterDeclarationgenerateDefaultAccessoraccessorDescriptiongenerateDefaultGettergenerateSetter
copyMethodfindMemberToCopyfindOptionalArgsMemberToCopycopyMemberWithOptionalArgsgenerateBridgeremoveRepeated/tryCopyWhenImplementingInterfaceWithDefaultArgscopyProperty
copyMembercopyDefaultMembersgenerateBridgeMethodsgenerateBridgesToTraitImplcopySimpleMembergenerateClassModelcopyInvisibleFakeMemberfindOverriddenDescriptorgenerateOtherBridgesgetDisplayStringemptyResultunsupportedcreateCallInfogetCallInfotranslateVariableAccess
toOriginalmayBeMarkByRangeMetadataexpectedReceivers!computeExplicitReceiversForInvoketranslateSettranslateGetargsWithReceivergetRootsbuildDefaultCallWithoutReceivergetDataResourceProvider$buildDefaultCallWithDispatchReceiver.nativeSpreadFunWithDispatchOrExtensionReceivergetProgramResources	intrinsicdoTranslatefinishedinitializeUsageTrackertranslateAsIntRangeChecktranslateAsLongRangeChecktranslateAsRangeCheckvalidateQualifierisSuperInvocationisGetAccessisNativeconstructAccessExpressiongetAccessDescriptorhasSpreadOperatorgetAccessDescriptorIfNeededgetKotlinTypeFqNamehasPrimaryConstructorgetJetTypeFqNameaddClosureParametersemitConstructorswithUsageTrackerIfNecessarymayBeAddThrowablePropertieswithDefaultLocationtranslatePrimaryConstructorcreateMetadataRef*translatePropertiesAsConstructorParametersisTraitgetSupertypesNameReferencesgenerateEnumStandardMethodscreateEnumInitFunctionaddMetadataObjectaddMetadataTypeaddSuperclassReferencesaddObjectCachegenerateSecondaryConstructor!maybeConvertInterfaceToSamAdapterisObjectLikeaddObjectMethodscomputeBlockScopeVariableInfofilterOutVariablesOutOfScoperegisterVariableDeclaredInScoperenderInstruction	setResultdefinitelyInitializedcreateInitializedExhaustivelymayBeInitializedsetResolvedTargetoutgoingEdgeToupdateCopyInfo*visitInlinedFunctionDeclarationInstructionwriteZipcacheStringstartProcess	doConvertdoLinkstopProcess	_initWithpopulateTemplateParametersgetSupportNativeLibFoldergetSupportBlasLibFoldercomponent22component23component24component25/visitInlinedLocalFunctionDeclarationInstructiongetSubtypesPredicateexpectedTypeForgetElementValuesRecursivelygetReceiverTypePredicategetExpectedTypePredicatecalcSideEffectFreegetContainingPseudocodegetPseudocodeByElement$getPrimaryDeclarationDescriptorIfAnymarkReferablePointsgetElementParentDeclaration-getDeclarationDescriptorIncludingConstructorsbindElementToValue
repeatPartprocessInstructiongetNextPosition!repeatLabelsBindingForInstructionrepeatWholeaddExitInstruction
copyLabelsaddSinkInstructionaddErrorInstructionrepeatInternalcreateLabel	getLabelsgetLocalDeclarationsmarkDeadInstructionsaddInstructionaddValueUsageaddMergedValuesgetMergedValuesgetJumpTarget$collectAndCacheReachableInstructionscollectReachableInstructionscopyInstructiongetMissingCasegetNullCaseIfMissingwhenSubjectTypeisWhenExhaustivegetEnumMissingCasesgetSealedMissingCasesgetClassIdForEnumSubject getClassDescriptorOfTypeIfSealedgetClassDescriptorOfTypeIfEnumcontainsNullCasecheckReservedPrefixcheckDeprecatedWhenSyntaxgetClassIdForTypeIfEnum whenSubjectTypeWithoutSmartCasts#createWhenMissingCaseForClassOrEnumgetMissingClassCasesgetReference
isRelevantgetCheckedDescriptorgetLeavesOrReachableChildrenhasChildrenInSetmergeAdjacentTextRanges.removeReachableElementsWithMeaninglessSiblingsgetUnreachableTextRangessafeReferenceUsagesafeCallUsageinsideLValuesafeThisUsage extractValWithTrivialInitializergetDeclaredVariablesgetAllDeclaredVariables%mergeIncomingEdgesDataForInitializersisTrivialInitializercomputeInitInfoForTrivialVals/addVariableInitStateFromCurrentInstructionIfAnyaddVariablesFromPseudocodecomputeUseInfoForTrivialValsisValWithTrivialInitializergetDefaultValueForInitializersgetUpperLevelDeclaredVariablesreplaceDelegate isVariableWithTrivialInitializerisPropertyWithoutBackingField%computeDeclaredVariablesForPseudocodecomputeVariableInitializersgetNextInstructionsgetInstructionsupdateEdgeDataForInstructiongetPreviousInstructionstraverseFollowingInstructionstraverseIncludingDeadCodeisStartInstruction(getPreviousIncludingSubGraphInstructionsgetStartInstructioncollectDataFromSubgraphgetLastInstructionreportCompilationErrorsgenerateIrForKlibSerializationnextIntapplyToolchainbyCompilerArgumentsyncOptionsAsConventionfillCompilerArguments
jsInternaljs
fromPresetfindSharedLibfindExecutablefindStaticLibfindFrameworkgetExecutableserializeSingleFirFilecollectFilesmergeStdlibPartscreateInsertionPlacecollectInputFilesmapSourcePathsgetModuleNameFromPathcollectInputFilesFromZipexecImplcollectInputFilesFromDirectorymetaJsfindTestsingleInputFile	takeUntilgroupedsliding	dropUntil	dropRight
tailOptionvalues	toJavaMaphead	takeRightstringPrefixtailbimap
initOptiontransformFirToIrserializeFirKlibshouldGoToNextIcRoundloadPluginsForTestsgenerateFinallyBlockhandleJumpInsideTryFinallygetMagicKind
popBuilderpushBuilderaddNewIndexForRootsaddIndexgetTestgetStaticLib
printLinespreRegisterisAtLeastJava9	findFieldresolveSupertypesreadsconfigureJdkClasspathRootsaddJavaSourceRootsaddJvmSdkRootsaddJvmClasspathRootsaddJvmClasspathRootisModularJdkloadJrtFsJar
clearRootsisBlockInDoWhilegetValueAsFunction$generateInitializersForClassOrObject"generateHeaderDelegationSpecifiers0generateDeclarationForLocalClassOrObjectIfNeededgenerateAndGetReceiverIfAnyprocessEntryOrObjectcheckNothingTypeelementsToValuesgetDeferredValuewriteLoopParameterAssignmentgenerateArrayAccessWithoutCallvisitWhenExpressiongetResolvedCallAccessTargetvisitInlinedFunctionprocessParameterscreateNonSyntheticValuecheckAndGenerateCallgenerateArrayAssignmentgenerateTryAndCatchesgetCorrespondingLoop jumpDoesNotCrossFunctionBoundarygenerateArrayAccessvisitSuperTypeEntrygetArraySetterArgumentsvisitDelegatedSuperTypeEntryvisitSuperTypeCallEntryvisitTryExpressiongetDeclarationAccessTargetreturnCrossesTryCatchBoundarygenerateCallvisitInitializerListdeclareLoopParameterprocessLocalDeclarationvisitObjectDeclarationgenerateQualifiergenerateLoopConventionCallgenerateJumpsToCatchAndFinallycheckReturnLabelTargetgenerateImplicitReturnValuegenerateArrayAccessArgumentsgeneratePseudocodejumpCrossesTryCatchBoundarygenerateBooleanOperationmergeValuesgetNearestLoopExpressiongenerateInstructionsvisitKtElementgenerateInitializergetBoundOrUnreachableValue	copyValuevisitBreakExpressionvisitSuperTypeListisIncrementOrDecrementvisitReturnExpressionvisitContinueExpression getCorrespondingLoopWithoutLabelvisitThrowExpressionvisitAssignmentvisitDoubleColonExpressiongenerateCallOrMarkUnresolvedgenerateBothArgumentsAndMarkgetReceiverValuesgenerateValueArgumentcomputePseudoValueForParametercreateSyntheticValuereadClassIdsgetClassIdsForRootAtfindJavaSourceClassatClass	tokenTextatRecordfindJavaSourceClassesgetSharedLibgetFileTypecheckAccessibilityfindJavaModule#getAnnotationsForModuleOwnerOfClassgetFrameworkIdeaKpmProjectcleanDirmarkUsedgetProjectType(configureAdditionalFreeCompilerArgumentsbuildAllcanBuildbuildIdeaKpmProjectbuildSerializationContextkeepcomputeChildrencollectCommonCompilerStatsgetOrCreateDirectoryprepareCleanerCallbackfindSystemModulematchesReleasecodeForcollectModuleRootscreateModuleFromSignatureaddUserModulereportCompiledSourcesListprocessSourceModuleisIncrementalCompilationEnabledaddPlatformOptionslowerIrcompileAndTransformIrNew)setupPlatformSpecificArgumentsAndServicessplitByPathSeparatorcreateMetadataVersionprepareIcCachesprocessSourceModuleWithK2buildCompilerArgsgetNameSequenceinitChildrenArrayFromList0parseZip64CentralDirectoryRecordsNumberAndOffsetparseCentralDirectorygetUnsignedShort+parseCentralDirectoryRecordsNumberAndOffsetextraJvmDiagnosticsFromBackendlogErrorWithOSInfosetupIdeaStandaloneExecutioncleanOpenFilesCachedeletecallCompilerAsyncclearHandlersCachecreateIfUnmappingPossibleresultcreateTrace-registerVersionSpecificProjectExtensionPoints)registerVersionSpecificAppExtensionPointssetKotlinCodeAnalyzercheckConstructorConsistencycheckIsInitializedmarkUnusedExpressions checkAssignmentBeforeDeclarationcheckWhenExpressionsreportUnreachableCodeprocessUnusedDeclarationtraverseCallscheckDefiniteReturncheckIfExpressions!isInitializationBeforeDeclarationgetResultingExpression"checkInitializationForCustomSetter!markReadOfSuspendLambdaParameterscollectReturnExpressions markReadOfSuspendLambdaParameter4reportVisibilityWarningForInternalFakeSetterOverridemarkAnnotationArgumentsmarkUnusedVariablesprocessUnusedParameterrecordUsedAsExpressionmarkStatements(checkImplicitCastOnConditionalExpressionisDefinitelyInitializedreportValReassignedcheckWhenStatementmustBeReportedOnAllCopiescollectUnreachableCodecombineKindsmarkAndCheckRecursiveTailCallsmarkAndCheckTailCalls#markImplicitReceiverOfSuspendLambdaisUsedAsResultOfLambda&checkForSuspendLambdaAndMarkParametersmarkUninitializedVariablescheckExhaustiveWhenStatementrecordInitializedVariables5collectResultingExpressionsOfConditionalExpressionRec2collectResultingExpressionsOfConditionalExpressionisCapturedWriteisInsideTrycheckLocalFunctionsgetJavaModuleRootscomputeDefaultRootModulessetupHighestLanguageLevelconvertAnalyzedFirToIrcollectSourcesgenerateCodeFromIr)compileModulesUsingFrontendIrAndLightTree!createIncrementalCompilationScopewriteOutputscreateProjectEnvironment%needCreateIncrementalCompilationScopefindBinaryClasshasMetadataPackagefindVirtualFileWithHeaderfindMetadatafindBuiltInsDatafindBinaryOrSigClassfindSourceClassfindSigFileIfEnabledfindSourceOrBinaryVirtualFiletryLoadModuleMappingfindMainFunctionaddRootswriteOutputgetBuildFilePaths+createOutputFilesFlushingCallbackIfPossibleconfigureFromArgscreateLibraryListForJvmwriteOutputsIfNeededloadPluginsLegacyStyleprocessPluginOptionsloadPluginsSafeloadRegisteredPluginsInfoloadPluginsModernStyleaddPackagePartProvider getAnnotationsOnContainingModulefindFilesForPackagepackageExistsgetKotlinInternalClassescreateInstanceOfLightScriptcreateInstanceOfLightFacadegetFakeLightClassfacadeIsApplicablecreateFacadeForSyntheticFilegetSubPackages&findClassOrObjectDeclarationsInPackagedeclarationLocationfindFilesForScriptfindFilesForFacadecreateInstanceOfLightClass$createInstanceOfDecompiledLightClasslibrariesTracker%createInstanceOfDecompiledLightFacadegetCompletedfindFilesForFacadeByPackagefindClassOrObjectDeclarations
higherThangetJvmSignatureDiagnosticsforClassOrObject	forFacadecalculateForFacadecreateCoreFileManagercomputeLightClassCachedValuegetLightClassCachedValueshouldGenerateClassMembers	selectKeydoSetupcheckInHeadlessModesearchdoTravelPathfindChildPackage
cachesPath
travelPathconfigureSourceRoots toAbstractProjectFileSearchScopeasPsiSearchScopetoAbstractProjectEnvironmentapplyModuleProperties)registerPluginsSuppliedExtensionsIfNeeded createSourceFilesFromSourceRootsforAllFilesgetKlibModulesresetCallbacksetCallbacksetCallbackIfNotSetnoSuppressionalreadyReportedtoSafeTopLevelClassIdtoSafeFqNamesafely
runCodegencompileBunchOfSourcesrepeatAnalysisIfNeededcompileModulesrunLoweringsanalyzeAndGeneratefindInferredAnnotationsisInferredAnnotationfindInferredAnnotationanalyzeFilesWithJavaIntegrationcreateModuleContextcreateContainernewModuleSearchScopeisExternalAnnotationisExternalAnnotationWritablehasConfiguredAnnotationRoothasAnnotationRootsForFilefindExternalAnnotationsFilesfindExternalAnnotationchooseAnnotationsPlacefindExternalAnnotations
deannotate)findDefaultConstructorExternalAnnotationschooseAnnotationsPlaceNoUieditExternalAnnotationannotateExternallywithLanguage getNamesCountToUseImportOnDemandisToImportOnDemandisGenerateFinalParameterscreateFacade
getTabSize isSpaceAroundAssignmentOperatorsisSpaceAfterCommaisGenerateFinalLocals isJavaDocLeadingAsterisksEnabledisSpaceBeforeCommauseFQClassNamesgetIndentSizecomputeLightClassDataidleCleanupregisterExtensionPointscreateJrtFileSystemtoSearchScopegetSearchScopeByPsiFilestoHexStringanalyzeAnnotationpossiblyHasAliasresolveToDescriptorgetUltraLightClassSupportanalyzeWithContentfindVirtualFileForTopLevelClassfindModulesfindClassByTopLevelClassfindClassInPsiFileforEachClassIdgetNonTrivialPackagePrefixesfindPsiClassfindPsiClassInVirtualFilefindVirtualFileGivenPackage
runBackendcompileModulecompileModulesUsingFrontendIRrunFrontend collectIncompatiblePluginNamesTomodularBinaryRootreadManifestAttributesmodularSourceRoot tryLoadVersionSpecificModuleInfofindSourceModuleInfocomputeRootsconvertClasspathRootsaddModularRootsconfigureModuleChunk createProjectEnvironmentForTestscreateForProductioncreateApplicationEnvironmentdisposeApplicationEnvironment!registerApplicationServicesForCLIregisterExtensionsFromPlugins!getOrCreateApplicationEnvironmentunderApplicationLockregisterProjectExtensionPointsfindLocalFile)getOrCreateApplicationEnvironmentForTestscreateForTestsgetCacheDirectorypreregisterServices.getOrCreateApplicationEnvironmentForProductioncollectAdditionalSourcesregisterApplicationServicescreatePackagePartProvider#getSourceRootsCheckingForDuplicatescreateForParallelTestsregisterJavaPsiFacade3registerApplicationExtensionPointsAndExtensionsFromregisterProjectServicesregisterKotlinLightClassSupportregisterPluginExtensionPointsregisterProjectServicesForCLIupdateClasspathFromRootsIndexconfigureProjectEnvironmentcountLinesOfCode configureJavaModulesContentRootsregisterJavacIfNeededsetupJvmSpecificArguments%handleClosureGenerationSchemeArgumentconfigureStandardLibsconfigureKlibPathsaddModularRootIfNotNullgetJavaVersionconfigureJdkHomeisModularJavaparseBackendThreads"configureContentRootsFromClassPathconfigureAdvancedJvmOptions"configureJdkHomeFromSystemPropertyfirstMismatchWhilefirstMismatchFilteredforAllreplUnescapeLineBreakslistLocalUrlsAsFilesensureNotEmptyreplNormalizeLineBreaksscriptResultFieldNamereplRemoveLineBreaksInTheEndmakeScriptBaseNamerenderReplStackTracereplEscapeLineBreaksreplAddLineBreakreplInputAsXmllistAllUrlsAsFilesreplOutputAsXmlcreateCoreEnvironmentisUseOldBackendAllowedthrowFirstErrorAsExceptionreportSpecialErrorsreportByFile"reportDiagnosticToMessageCollectorthrowErrorDiagnosticAsExceptionfindNextPositionreadNextLineverifiedPopmakeReplClassLoaderlastCodeLinecheckHistoryIsInSyncresolveCompilerArgumentsfirstMismatchingHistorycopyAll
copyValuescopySources
tryResetToifMadePublic
makePublic prependClassLoaderWithNewClassessetupPublicationForModuleadjustHistoriesassertSameSizeassertSameIdrefinesregisterCompileTaskssetupExtendsFromRelationslocationStringinvokeFunction
invokeImplproxyInterfacegetInterfaceprioritizedHistoryfindMapping	getEnginenextCodeLinecreateBindingsgetCurrentStateconfigurationToResolvegetInvokeWrapperoverrideScriptArgsasJsr223EvalResult
getProgramgetMimeTypesgetLanguageNamegetOutputStatementgetEngineNamegetEngineVersiongetMethodCallSyntaxgetLanguageVersion
writeAllToregisterDependencyResolveraddKotlinSourceRootlocationToCLILocationseverityToCLISeveritygetOutputDirectoryaddSourceFilesgetJavaSourceRootsaddClasspathEntryaddCommonSourceFilesaddFriendDirgetFriendPathsgetClasspathRootsgetCommonSourceFilesregisterDependencyTransformer$registerExtrasSerializationExtensionregisterDependencyEffectcopyOfInternalgetInstanceWithFreezeStatuscheckFrozenresolveExtrasSerialized"registerAdditionalArtifactResolverresolveDependenciesSerializedcopyPropertiescopyBean&setApiVersionToLanguageVersionIfNeededcopyFieldsSatisfyingcopyValueIfNeededcopyInheritedFields
copyBeanTo
mergeBeanscopyK2JSDceArgumentssetupArtifacts getSourcesForFragmentCompilationcopyCommonToolArgumentscopyCommonCompilerArgumentscopyK2JVMCompilerArgumentsanalyzeAndReportreportDiagnosticreportDiagnosticsreportIncompleteHierarchies reportAlternativeSignatureErrorsreportSyntaxErrorscopyK2MetadataCompilerArgumentscopyK2JSCompilerArgumentscopyK2NativeCompilerArgumentsreportDuplicateAnnotationparseJsr305StatereportUnrecognizedReportLevelparseAnnotationWithReportLevel&parseNullabilityAnnotationReportLevelsparseJspecifyReportLevel+parsePlainNullabilityAnnotationReportLevelsloadAsyncProfilerClassreadArgumentsFromArgFilepreprocessCommandLineArgumentsparseNextArgumentconsumeRestOfQuotedSequenceupdateField%parsePreprocessedCommandLineArguments(parseCommandLineArgumentsFromEnvironmentvalidateArgumentsupdateInternalArgumentsparseCommandLineArgumentssetIdeaIoUseFallbackstopProfilingrestartProfilingstartProfilingcheckPluginsArgumentstoBooleanLenient&getCommonSourcesForFragmentCompilationincrementalCompilationIsEnabledgetLibraryFromHome$incrementalCompilationIsEnabledForJstoLoggercheckKotlinPackageUsageformatMeasurementcreateFlexiblePhaseConfigcreatePhaseSetFromArgumentsisInFriendModulephaseSetFromArgumentscreatePhaseConfigcomputeEnabled"reportUnsafeInternalArgumentsIfAnybuildHmppModuleStructurereportArgumentParseProblemsswitchToFallbackModeIfNecessarycomputeKotlinPathssetupLanguageVersionSettingsaddFriendPathdoMainNoExitprintVersionIfNeededparseArgumentsdefaultMessageRendererdoMaindisableURLConnectionCachesgetProperFunctionsetCapabilitiesexecAndOutputXmlsetupAttributes,tryLoadScriptingPluginFromCurrentClassLoader
capabilitywhenPublicationAssignedassignMavenPublicationexecFullPathsInMessagesregisterSourceArchiveTaskreportCompilationCancelledbuildKotlinMetadataLibraryprocessCompilerPluginOptions extractPluginClasspathAndOptionsprocessCompilerPluginsOptionsrunCommonAnalysisIteration!runCommonAnalysisForSerializationanalyzeAndSerializerecordGcTimenotifyIRGenerationStartednotifyIRTranslationStartedcreatePerformanceReportnotifyIRLoweringStartednotifyGenerationFinishednotifyIRGenerationFinishedrecordJitCompilationTimeaddSourcesStats%enableCollectingPerformanceStatisticsrecordInitializationTimenotifyIRLoweringFinisheddumpPerformanceReportnotifyCompilerInitialized	deltaTimegetMeasurementResultsrecordPerfCountersMeasurementsnotifyIRTranslationFinishedrenderCompilerPerformancenotifyAnalysisStartednotifyGenerationStartedgetTargetInfonotifyAnalysisFinishedoffsetOfprepareSessionscreateSingleSessionprepareJvmSessionsprepareNativeSessions!createSessionsForLegacyMppProjectcreateSessionsForHmppProjectprepareCommonSessionsprepareJsSessionsserializeBuiltInsFilecreateSerializerExtensionserializeStringTableserializeMembersserializeClassesgetPackageFilePathfindOwnNameOrDeclaredependencyOnBuiltInsmoduleDescriptorForModuleInfo'packageFragmentProviderForKotlinLibrary$packageFragmentProviderForModuleInforegisterDependencyForAllModulesglobalNameForlabelFor	exitCatchlocalNameFor
enterCatchreferenceFordeprecationWarn)configureLanguageFeaturesFromInternalArgscheckProgressiveModeparseOrConfigureLanguageVersionfindOutdatedVersioncheckLanguageVersionIsStablecheckOutdatedVersionstoLanguageVersionSettings.checkApiVersionIsNotGreaterThenLanguageVersionenabledPluginCountreportCannotLoadgetEnabledPluginsgetGlobalErrorsisBrokenaddIncompletePlugincheckAndAddfinishLoadinggetPluginErrors
addServicegetComponentListToAddisPluginEnabledfindEnabledModuleupdateEnabledPluginsgetUnsortedEnabledModulesgetEnabledModulesisModuleEnabledfindEnabledPlugingetRawListOfEnabledModules#removePluginAndUpdateEnabledPluginsgetTopologicalComparatorenablePluginpluginPathToUserStringtoPluginDescriptorstoPluginSet
checkCyclegetParentPath
toLoadPathfindInJarFilesloadUsingZipFilegetChildBaseformatErrorMessagecheckOptionalConfigShortNameisPluginDisabledputMoreLikelyPluginJarsFirstgetDescriptorsToMigrate"fileNameIsLikeVersionedLibraryNameloadUncachedDescriptorsloadFromPluginDirloadDescriptorFromFileOrDir,computePlatformPluginUrlAndCollectPluginUrlscreatePluginLoadingResultloadDescriptorloadForCoreEnvcollectPluginFilesInClassPathloadDescriptorFromArtifactloadDescriptorFromJarloadDescriptorFromDirloadDescriptorsFromPropertyresolveArchives testLoadDescriptorsFromClassPathloadDescriptors+loadBundledDescriptorsAndDescriptorsFromDirrequireDescriptorreadExtensionsreadListenersreadProductcheckXIncludereadOldDependsfindAttributeValueparseReleaseDatereadRootAttributesgetNullifiedContentreadOsreadActionsreadServiceDescriptorreadContentgetEventTypeStringreadIncludeapplyPartialContainerreadModuleDescriptorreadExtensionPointsreadComponentsreadModuleDescriptorForTestreadRootElementChild	readOrdergetNullifiedAttributeValueconsumeChildElementsgetPluginClassLoaderallowBundledUpdatesetCategorygetUntilBuildcheckCompatibility	isBundledgetCategorygetResourceBundleBaseName	createSubgetChangeNotesgetProductCodegetVendorEmail
setEnabled	getVendorgetOptionalDependentPluginIdsgetDescriptorPathgetReleaseVersionsetPluginClassLoaderprocessOldDependenciesdoRegisterExtensionsgetUrlgetVendorUrlgetPluginIdgetSinceBuildmarkAsIncompleteisImplementationDetailgetReleaseDategetPluginPathisRequireRestartisLicenseOptional"restorePersistentEnumeratorFromWalrestoreFromWalrestoreMemoryEnumeratorFromWalrestorePersistentMapFromWalrestoreHashMapFromWalreadData
tryCompactreadByteArrayreadWalreadNextEvent	enumerateinteractWithUIcheckCancelledloadSingleCallbacksubmitWritecloseAndDelete
appendDatawriteToByteArrayappendRecord	putRecordremoveRecordgetAttributeValuenextTagreadXmlAsModel"createNonCoalescingXmlStreamReadercreateXmlStreamReaderprocessInitializedComponentsgetServiceByClassName
nameEqualsgetQualifiedNametryGetInstancegetClientIdLoggerdecorateBiConsumertrySetCurrentClientIddecorateRunnabledecorateFunctionoverrideLocalIddecorateCallabledecorateProcessor	isLocalIdcoroutineContextwithClientId'isBuiltinFunctionWithDifferentNameInJvm
getJvmNamevalueParametersAreEmpty#hasBuiltinSpecialPropertyFqNameImpl findBuiltinSpecialPropertyFqName;getOverriddenBuiltinFunctionWithErasedValueParametersInJava#isBuiltinWithSpecialDescriptorInJvmgetSpecialSignatureInfo'doesOverrideBuiltinWithDifferentJvmNamefirstOverriddenCallable(getOverriddenBuiltinWithDifferentJvmNamefirstOverriddenFunctionisFromBuiltinClassgetJvmMethodNameIfSpecialcomputeFunctions
javaOriginbuildErasurehasPrimitiveReturnTypeInJvmdoesReturnTypesHaveSameKind*buildTypeParametersSubstitutorIfCompatibleisTypeParameterDependent"isEqualArrayElementTypeProjectionsisPrimitiveInJavabuildJavaClassbuildJavaFieldbuildJavaConstructorisEqualforceWarningbuildJavaMethodCopybuildJavaMethodoverriddenMembers"doProcessDirectOverriddenCallablesbuildJavaValueParameterCopybuildJavaValueParameterenhanceConeKotlinTypeenhanceInflexibleTypeenhanceMutabilitymutableToReadOnlycomputeSubtreeSizesenumArgumentstoEnumNamesextractDefaultQualifiersloadMemberAnnotationsreplaceSuperTypeRefstransformSuperTypeRefstransformDeclarationsreplaceCompanionObjectSymbolloadAnnotationIfNotSpecialloadAnnotationvisitClassLiteral!isRepeatableWithImplicitContainertoFirClassReferenceExpressiontoDefaultResolvedTypeRef loadAnnotationMethodDefaultValueguessArrayTypeIfNeeded)toEnumEntryReferenceExpressionWithResolvecreateConstant(toEnumEntryReferenceExpressionUnresolvedreplaceDefaultValuereplaceDelegatedConstructor
addSourcestransformDelegatedConstructor0useDisambiguationClassifierAsSourceSetNamePrefix	compositeresolveFriendPathsdefaultSourceSetNameonPublicationCreated+overrideDisambiguationClassifierOnIdeImportattributeProviderregisterSessionaddStack!transformDelegatedConstructorCalltransformRegularClasscreateSuspendViewgenerateSyntheticPropertySymbolcomputeJvmDescriptorForGettercollectFunctionscreateOverridePropertyIfExistsisVisibleInCurrentClasssyntheticPropertyFromOverridetoFir4processOverridesForFunctionsWithErasedValueParameter;shouldBeVisibleAsOverrideOfBuiltInWithErasedValueParameterschooseModalityForAccessorfindGetterByName0processOverridesForFunctionsWithDifferentJvmNamehasErasedParametersdoesOverrideSuspendFunctionhasKotlinSuperisOverriddenInClassByprobablyJavaTypeRefToConeTypehasSameJvmDescriptorcomputeJvmDescriptorForSetterprocessSpecialFunctionsfindSetterOverridedoesOverrideRenamedBuiltinsfindGetterOverridegetTopLevelFunctionSymbolsTo&computePackageSetWithTopLevelCallablesgetTopLevelPropertySymbolsTogetClassLikeSymbolByClassId!knownTopLevelClassifiersInPackagegetTopLevelCallableSymbolsTocomputeCallableNamesInPackagegetForCurrentBuildloadAnnotationsFromClassFilebuildDeclaredMemberScopefindJavaSuperClassgetUseSiteMemberScope getStaticMemberScopeForCallables!buildSyntheticScopeForAnnotations$buildUseSiteMemberScopeWithJavaTypesfindClosestJavaSuperTypesgetNestedClassifierScopebuildJavaEnhancementScopeisCalledFromSubclassisInPackagegetCallableSignature*findJvmBinaryClassAndLoadMemberAnnotationscomputeJvmParameterIndexShift
getClasses	buildStubsetProperTypehasMetadataAnnotationcreateConstantIfAnycreateArrayOfCall-extractNullabilityAnnotationOnBoundedWildcardcreateConstantOrErrortoFirJavaTypeReftoConeFlexibleTyperesolveIfJavaType toConeKotlinTypeForFlexibleBound)argumentsMakeSenseOnlyForMutableContainer toConeKotlinTypeProbablyFlexible!collectAllDependentSourceSessionsnewReferenceListmapToCanonicalString#collectAllDependentSourceSessionsTonewTypeParameterList
toFirClass	packFlagsaddSupertypesReferencesListsmapToCanonicalNoExpansionStringprepareTypeParametersmutationNotSupportedenhanceValueParametergetPurelyImplementedSupertypeenhanceValueParameterTypeenhanceSuperTypesenhancedFunctionenhanceSuperType
getTypeRefreplaceBoundsenhanceMethodenhanceReturnType$performSecondRoundOfBoundsResolutioncomputeDefaultQualifiers)enhanceTypeParameterBoundsAfterFirstRoundupdateIsOperatorFlagIfNeeded#enhanceTypeParameterBoundsForMethodenhancedProperty#performFirstRoundOfBoundsResolutionenhanceTypeParameterBoundenhanceReceiverTypesetMultimapOflistMultimapOfasReversedFrozengetVariantscustomComputeIfAbsentpromotebuildJavaTypeRefsetAnnotationsFromJavamapJavaRetentionArgumentmapJavaTargetArgumentsbuildEnumCalltoFirAnnotationCallfillAnnotationArgumentMappingconvertAnnotationsToFirwithNewSourcebuildUserTypeRefbuildErrorTypeRefbuildErrorTypeRefCopybuildStarProjectionbuildDynamicTypeRefbuildFunctionTypeRefbuildFunctionTypeRefCopybuildIntersectionTypeRefbuildImplicitTypeRefCopybuildImplicitTypeRefbuildResolvedTypeRefCopybuildResolvedTypeRefbuildPlaceholderProjectionunwrapDefinitelyNotNullbuildTypeProjectionWithVariancetoIrInitializercreateThisReceiverParameterhasJvmStaticAnnotationshouldHaveDispatchReceiverarrayElementTypevarargElementTypeisPotentiallyArraycreateOutArrayTypegetFakeOverridesByNameisAbstractMethodOfAnyisSuitableForTypeprepareTypeconvertJavaMethodToFirtoSourceElementbuildSelfTypeRef+convertJavaAnnotationMethodToValueParametercreateFirJavaClasscreateDeclarationsForJavaRecord"buildConstructorForAnnotationClasstoFirTypeParametertoRefstopLevelNameupdateStatusescreateTargetConfiguratorconvertJavaConstructorToFirconvertJavaClassToFirhasTopLevelClassOfconvertJavaFieldToFirisTypeMismatchDueToNullabilityisKPropertyisKMutablePropertyisKClassTyperemoveQuestionMarkdoUnifyapproximateToSubTypeapproximateToSuperTypegetCoordinates
predefinedfindSourceSetattributeAccessorareCompatibleExpectActualTypes*createExpectActualTypeParameterSubstitutorisStrictSubtypeOf"removeIfNonSingleErrorOrInRelationisSubtypeOfAnyforEachTyperenderReadablerenderForDebuggingwithAlternativetoTypeProjection#replaceArgumentsWithStarProjectionsrenderReadableWithFqNamesmapTypesapproximateIntegerLiteralTypegetKindByClassNamePrefixhasExtensionKindshasKindWithSpecificPackageconstructClassTypeconstructClassLikeTypeconstructStarProjectedTypeconstructTypegetBaseBoundFqNameByMutability>areTypesMayBeLowerAndUpperBoundsOfSameFlexibleTypeByMutabilityisAnyOfBuiltinTypeisStableSmartcastisOfTypeconeTypeUnsafegetSourceSetCInteropMetadatatoConstKinddropExtensionFunctionAnnotationhasNotNullUpperBoundgetSourceSetCompiledMetadatafindCommonIntersectionType$valueParameterTypesIncludingReceiverisNotBasicFunctionType
returnTypeisSomeFunctionTypecreateFunctionTypeWithNewKind+reflectFunctionTypeToNonReflectFunctionType#valueParameterTypesWithoutReceivers"findSubtypeOfBasicFunctionTypeImpl&customFunctionTypeToSimpleFunctionTypecontextReceiversTypesisBasicFunctionTypeisSuspendOrKSuspendFunctionTypespecialFunctionTypeKindfindSubtypeOfBasicFunctionTypereceiverTypeisReflectFunctionTypeisFunctionOrKFunctionTypeisNonReflectFunctionTypefindBaseInvokeSymboltypeOrDefaultisFunctionTypeWithPredicatefindContributedInvokeSymbolisSubtypeOfFunctionTypecommonSuperTypeapproximateIntegerLiteralBounds&commonSuperTypeBetweenTwoConstantTypescreateSupertypeList/commonSuperTypeBetweenIntegerTypeAndRegularTypegetApproximatedTypeImplwithNullabilityAndAttributescreateClassLikeTypeextractKindsFromAnnotationsextractSpecialKindsImplconfigureWithVariantcheckBeforeLayoutAppliedcheckCreatedSourceSetkotlinSourceSetName allBoundsAreNullableOrUnresolvedboundsunknownConstructorErrorcreateConeType!computeSupertypePolicyAndPutInMapgetCorrespondingSupertypescaptureTypecomputeSupertypesMapdefaultKotlinSourceSetNamebyNamedoCreateSourceSet!getApproximatedIntegerLiteralTypereplaceArgumentsisBuiltinFunctionTypeOrSubtype$getNonReflectFunctionTypeConstructorwithNotNullProjectioneraseContainingTypeParametersremoveExactAnnotationhasNoInferAnnotationtypeConstructorProjectiongetFunctionTypeFromSupertypesisUnitTypeConstructor	isSpecialcreateEmptySubstitutorsafeSubstituteisCustomAttributehasExactAnnotation!getReflectFunctionTypeConstructorcreateCapturedType.createTypeWithAlternativeForIntersectionResultisTypeVariableisCapturedTypeConstructor)createStubTypeForTypeVariablesInSubtypingsingleBestRepresentativecreateSubstitutorForSuperTypesisSignedOrUnsignedNumberTypefreshTypeConstructorsetUpSourceSetDefaultsisFinalClassConstructor!createStubTypeForBuilderInferencegetOriginalTypeVariable(extractArgumentsForFunctionTypeOrSubtype typeSubstitutorByTypeConstructor1useRefinedBoundsForTypeVariableInFlexiblePositioncontainsInternal*isFunctionOrKFunctionWithAnySuspendabilityisTypeOrSubtypeOfconvertToNonRawcreateNestedClasscreateTopLevelClassdisambiguateNamecreateMemberPropertycreateTopLevelPropertycreateTopLevelFunctionwithReplacedReturnType4shouldApproximateAnonymousTypesOfNonLocalDeclarationcanHaveSubtypescommonSuperTypeOrNullwithAttributesintersectTypesOrNulleraseToUpperBoundgetProjectionsForRawTypeeraseAsUpperBoundcreateIdeaPropertiesEvaluatorcaptureFromArgumentsInternaleraseArgumentsDeeplyisRawwithoutEnhancedNullability#captureArgumentsForIntersectionTypeconeFlexibleOrSimpleTypeeraseToUpperBoundsAssociatedconvertToNonRawVersionmakesSenseToBeDefinitelyNotNullwithReplacedConeTypetoClassSymbolcaptureFromExpressionInternallowerThanBoundcaptureArguments&makeConeTypeDefinitelyNotNullOrNotNullcreateDefaultPrivateConstructor&generateNoArgDelegatingConstructorCall	superTypegenerateValueParametervalueParameter#createDelegatingTestReportProcessorsettergetAllDefaultImportsaddConvention similarFunctionsOrBothProperties
toConeTypeboundinitTypeParameterBoundsusedAtConfigurationTimegenerateTypeParametergenerateStatusproduceContextReceiversTostatus	toNameSetfilterOutOverriddenfilterOutOverriddenFunctionsfilterOutOverriddenPropertiescomputeJvmSignatureisVoidappendConeType"computeJvmDescriptorRepresentation!buildSubstitutorForOverridesCheckisPublicInAny	hasTypeOfgetDestinationDirectory!collectFunctionsFromSpecificField
buildScope"collectPropertiesFromSpecificField*getPropertiesAndFieldsFromSupertypesByName*computeDirectOverriddenForDeclaredProperty#processClassifiersFromImportsByNamegetStaticsScope!processCallablesFromImportsByNamebuildResolvedImportByClassIdbuildPseudoPropertyByNamegetDynamicScopeForbuildPseudoFunctionByNamebuildImportedCopysetDestinationDirectoryaddTestResultsFromisCompatibleTypeParametersisEqualReceiverTypesisEqualBoundmaybeEqualErrorTypesprepareSignaturesgetOrCreateSubstitutedCopygetOrCreateCopylazyNestedClassifierScope&declaredMemberScopeWithLazyNestedScope5wrapNestedClassifierScopeWithSubstitutionForSuperTypeafterDependsOnAddedcreateNestedClassifierScopekotlincreateDeclaredMemberScopeisIntersectionOverrideupdateReturnTypegetDirectOverriddenSymbols-processDirectOverriddenCallablesWithBaseScopeprocessCallablesByNameprepareIntersectionScope'isWrappedIntegerOperatorForUnsignedType-getOrBuildScopeForIntegerConstantOperatorTypeisWrappedIntegerOperatorwrapIntOperator%createSubstitutionOverrideConstructor$processDirectOverriddenWithBaseScopecreateSubstitutedDatagenerateNestedClassifiergetCallableStoragegenerateMemberFunctionsgenerateMemberPropertiesgetExtensionsForClassgroupExtensionsByNamegetClassifierStoragecreateCopyForFirFunctioncreateCopyForFirConstructorcreateCopyForFirProperty	buildCopyincrementAndGetOrdinal%createNewTypeParametersAndSubstitutorcheckStatusIsResolved configureAnnotationsAndSignature#createSymbolForSubstitutionOverride
getOrdinalcreateCopyForFirField shouldOverrideSetContainingClassbuildCopyIfNeededsubstituteReceiverAndReturnType.configureAnnotationsTypeParametersAndSignaturereportString getFunctionsFromSupertypesByNamereportBoolean/processDirectOverriddenMembersWithBaseScopeImplcollectDeclaredFunctionsreportNumberextractSomeSymbolFromSuperType*computeDirectOverriddenForDeclaredFunctioncollectFunctionsFromSupertypesgetSingleClassifiergetDeclaredConstructors!processOverriddenFunctionsAndSelf"processOverriddenPropertiesAndSelfprocessClassifiersByNamedebugCollectOverridescomputeReturnTypecollectAllPropertiesprocessAllPropertiesprocessAllFunctionscollectAllFunctionscreateImportingScopesdoCreateImportingScopesconfigureClassInspectionForICbuildSourceSetProcessorremoveFlaggedselectMostSpecificMembersextractBothWaysOverridablecreateOverridableGroupsisSymbolFromUnstableSmartcastcollectStartMetricsprocessTypedCompositemarkSymbolFromUnstableSmartcastscopeForSupertypescopeForClasssubstitutorscopeForClassImplresolveToClassDescriptorscreateSerializergenerateMetadataExtraFlagsgetLocalClassIdReplacement&processOverriddenPropertiesWithVisitedgetDirectOverriddenFunctionsaddOverridden"processDirectlyOverriddenFunctionsprocessOverriddenProperties*getDirectOverriddenPropertiesWithBaseScopeprocessAllOverriddenCallablesdoProcessAllOverriddenCallablesprocessOverriddenFunctions#processDirectlyOverriddenProperties)getDirectOverriddenFunctionsWithBaseScope'getDirectOverriddenMembersWithBaseScope%processOverriddenFunctionsWithVisitedgetDirectOverriddenPropertiesgetDirectOverriddenMemberswriteGenericArguments$hasNothingInNonContravariantPositiongetJvmShortNamewriteInnerPartsisPrimitiveBackedgetClassInternalNamewriteGenericTypeparentClassOrNullsegmentsbuildPossiblyInnerTypegetScriptInternalNameaddReturnTypecollectRealOverriddenchooseIntersectionVisibility"createIntersectionOverrideVariablecollectClassifiersrealOverridden"chooseIntersectionOverrideModalityintersectReturnTypes"createIntersectionOverrideFunctioncollectMembersGroupedByScope&collectIntersectionResultsForCallablesmaxByVisibility,convertGroupedCallablesToIntersectionResultsnonSubsumed"createIntersectionOverridePropertycreateIntersectionOverrideFieldcreateIntersectionOverride	toIrClassbindMethodMetadatabindPropertyMetadatabindFieldMetadatatoIrAnnotations$generateSingleFieldValueClassMembersgenerateDataClassComponentBodygenerateCopyBodycreateSyntheticIrParametergenerateDataClassCopyBody#generateMultiFieldValueClassMembersgenerateDataClassMembersgenerateComponentBody!generateDispatchReceiverParametercreateSyntheticIrFunctionapproximatedcopyToFreeAccessor#makeFirMetadataSerializerForIrClasscopyToFreeProperty/makeLocalFirMetadataSerializerForMetadataSourcecopyToFreeAnonymousFunctionmakeElementSerializersetReceiversetDefaultValueinitializeBackingFieldconvertFunctionContentsetPropertyAccessorContentconvertClassContentconvertPropertyContentconvertFieldContenttoIrDelegatingConstructorCallrepresentativeUpperBoundasTypeParameter%possiblyErrorTypeConstructorByClassIdgetNameForErrorTypecontinuationTypeConstructorfunctionNTypeConstructornegatetransformIdentityOperatorCallgetSymbolAndOriginForComparisonconvertComparisonExpressiongenerateEqualityOperatorCallconvertEqualityOperatorCallgenerateComparisonCalltryGenerateDynamicOperatorCallrecordProjectsEvaluatedrecordBuildFinishcreateTestRegistryserializePackageserializeFunctionmethodSignaturemapTypeDefault&isJvmFieldPropertyInInterfaceCompanionserializePropertyserializeJvmPackageserializeClassfieldSignature,writeVersionRequirementForJvmDefaultIfNeeded(writeInlineParameterNullCheckRequirement(needsInlineParameterNullCheckRequirementserializeFlexibleTypewriteLocalPropertiesserializeErrorTypeserializeConstructorserializeTypeParameterserializeTypeAnnotations
getBindingrequiresSignaturepropertySignaturefindDelegateToSymbol%bindDelegatedMembersOverriddenSymbolsgenerateBodiesgenerateDelegatedFunctiongenerateDelegatedPropertyisDefaultJavaMethod
boundClassshouldSkipDelegationForunwrapDelegateTargetcreateDelegateBodygetPrimitiveTypeOrSupertype!promoteIntegerTypeToIntIfRequiredleastCommonPrimitiveNumericType#inferPrimitiveNumericComparisonInfo,flexibleNullabilityAnnotationConstructorCallregularAnnotationFirSymbolById rawTypeAnnotationConstructorCall,enhancedNullabilityAnnotationConstructorCallspecialAnnotationIrSymbolByIdtoConstructorCall.extensionFunctionTypeAnnotationConstructorCalldoRegisterTaskconvertToDescriptorVisibilitygetDeclarationForSignaturefindDeclarationByHash"getDeclarationForAccessorSignature#getDeclarationForCompositeSignature getDeclarationForCommonSignature)discardAccessorsAccordingToBaseVisibility&calcBaseSymbolsForFakeOverrideFunction#getOverriddenSymbolsForFakeOverride%shouldHaveComputedBaseSymbolsForClasscreateFirFunctionFakeOverridegetFakeOverridescomputeBaseSymbolssetOverriddenSymbolsForPropertycontainsErrorTypecreateFirFakeOverridecreateFakeOverriddenIfNeeded getOverriddenSymbolsInSupertypescreateFirPropertyFakeOverridebindOverriddenSymbolsgenerateFakeOverridesForNameinitComponentsdoTargetSpecificProcessingglobalMemberIsExportedawaitFinalValueenterCallableleaveCallableconfigureSourceSet
withParentdispatchReceiverParameterwhenBuildEvaluatedwithContainingFirClassreturnTargetwithSafeCallSubjectforDelegatingConstructorCalllastSafeCallSubjectdefaultConversionTypeContextcontainingFileIfAnycontainerFirClasswithWhenSubjectparentFromStackparent	lastClass7getConstructorForCurrentlyGeneratedDelegatedConstructorlastWhenSubject!parentAccessorOfPropertyFromStackconfigureArchivesAndComponentcreateAdapterParameterneedSuspendConversion+castArgumentToFunctionalInterfaceForSamTypegetArgumentTypeAt createAdapterFunctionForArgumentapplyConversionOnVarargcreateAdapteeCallForArgument%createAdapteeCallForCallableReferenceneedCoercionToUnit(generateFunInterfaceConstructorReference&needToGenerateAdaptedCallableReference generateAdaptedCallableReference starProjectionTypeRepresentationfindInvokeSymbolapplySamConversionIfNeededtoIrGetValue)createAdapterFunctionForCallableReferenceapplySuspendConversionIfNeeded&generateFunInterfaceConstructorAdapterfindBoundReceiverremoveExternalProjectionshasVarargOrDefaultArgumentsneedSamConversiongetValueParameterType%addCommonSourceSetToPlatformSourceSetnamedSourceSetsContainermangleFunctionmangleSignaturegetIndexOfTypeParameterrunSafeisVarargrenderDeclarationgetTypeSystemContext
mangleTypereferencePropertiesreferenceCallableSymbolsreferenceTopLevelreferenceFunctionscreateDiagnosticReporterreferenceConstructorsreferenceClassLikeSymbolsourcespluginClasspathapplyReceiversapplyCallArgumentsconvertToIrSetCallForDynamicconvertToIrSetCalltryConvertToSamConstructorCallputContextReceiverArgumentsconvertToIrCallableReferencegenerateErrorCallExpressionneedArgumentReorderingfindIrReceiverconvertArgumentfindIrDynamicReceiver$applyImplicitIntegerCoercionIfNeededfindTypeParameterextractArgumentsMappingapplyTypeArgumentstoAnnotationCallconvertToGetObjectconvertToIrCallForDynamic buildSubstitutorByCalledFunctionoverriddenBackingFieldOrNullfindIrDispatchReceiver$applyArgumentsWithReorderingIfNeededsuperQualifierSymbolconvertToIrConstructorCall.applyAssigningArrayElementsToVarargInNamedFormfindIrExtensionReceivertoIrTypeArgumentgetBuiltInClassSymbolisRecursivegetArrayClassSymbol)processLocalClassAndNestedClassesOnTheFlybindFakeOverridesInFileprocessAnonymousObjectMemberssyntheticPropertiesLastregisterFileAndClasses!processClassAndNestedClassHeaders*createModuleFragmentWithSignaturesIfNeededdelegatedMembersrunSourcesConversionregisterNestedClassesprocessRegularClassMembersprocessMemberDeclarationprocessNestedClassHeadersprocessFileAndClassMembersevaluateConstantsregisterClassAndNestedClassesprocessClassHeadersbindFakeOverridesInClass!processLocalClassAndNestedClassesbindFakeOverridesOrPostponedependencyClasspath	primitivegetProvidercreateIrEnumEntrygetIrClassSymbolpreCacheTypeParametersenumClassModalityregisterIrClassfindIrClassgetIrTypeParameterregisterIrAnonymousObjectcreateLocalIrClassOnTheFlygetIrEnumEntrydeclareSupertypesregisterTypeAliassetTypeParametersdeclareIrClass getIrAnonymousObjectForEnumEntrygetCachedIrTypeParametergetCachedLocalClasssetThisReceiverdeclareValueClassRepresentationputEnumEntryClassInScope getIrClassSymbolForNotFoundClasshasAbstractMembersInScopedeclareIrTypeAliasgetCachedTypeAliasdeclareTypeParameters"createIrTypeParameterWithoutBoundsprocessClassHeader$processMembersOfClassCreatedOnTheFly%getFieldsWithContextReceiversForClass&processMembersOfClassesCreatedOnTheFlycreateContextReceiverFieldspreCacheBuiltinClassesgetCachedIrClassdeclareIrEnumEntrygetCachedIrEnumEntrygetIrTypeParameterSymbolhandlePropertyinsertImplicitCastsvisitStatementvisitNamedArgumentExpressionisNullabilityFlexible!insertImplicitNotNullCastIfNeededvisitSpreadArgumentExpression#typeCanBeEnhancedOrFlexibleNullableacceptsNullValuesvisitLambdaArgumentExpressionimplicitCastOrExpressionimplicitNotNullCast implicitCastFromDispatchReceivertoMutableOrEmpty
lazyBodies
buildLabelgetDiagnosticbuildPackageDirectivebuildFunctionTypeParameterbuildFileAnnotationsContainer*unwrapSubstitutionAndIntersectionOverridesdeclareThisReceiverParametercomputeIrOrigin$createFilesWithGeneratedDeclarationsirOrigintoIrConstKind/contextReceiversForFunctionOrContainingPropertycreateSafeCallConstructionextractFirDeclarations.createTemporaryVariableForSafeCallConstruction+processOverriddenPropertiesFromSuperClasses processOverriddenPropertySymbolsgetIrConstKindgetIrSymbolsForSealedSubclassesgetSuperTypesAsIrClasses processOverriddenFunctionSymbolstoSymbolForCall*processOverriddenFunctionsFromSuperClassesgetIrAssignmentOrigin!generateOverriddenPropertySymbolsstatementOriginconvertWithOffsetsunwrapCallRepresentative!generateOverriddenAccessorSymbolsstartOffsetSkippingCommentspushFirTypeParametersdropLastLabelwithNewLabelgetLastLabelforwardLabelUsagePermissionaddNewLabelsetNewLabelUserNodeappendOuterTypeParameterspopFirTypeParametersconvertToIrBlockconfigureTestTaskisTestTaskEnabledtoIrDeclarationconvertCallableReferenceAccessmapToIrStatements*visitEnumEntryDeserializedAccessExpressiongetStatementsOrigin0visitDesugaredAssignmentValueReferenceExpression	findFirstkotlinDebug!isThisForClassPhysicallyAvailable convertQualifiedAccessExpressionvisitAugmentedArraySetCall
kotlinInfo
kotlinWarncleanOutputsAndLocalStatelocateOrRegisterRunTasktoIrStatementvisitCallableReferenceAccessconvertToIrBlockBodyinstantiateTargettoIrClassSymbolcreateCompilationFactoryconvertToIrVarargElement%provideTargetDisambiguationClassifiertoIrWhenBranchcreateKotlinTargetConfiguratoraddBuildScanReportconvertJumpWithOffsetsonFinishconfigureLibraryconfigureTestDependencies"extractOperationFromDynamicSetCallgenerateWhenSubjectVariableconvertToArrayOfCall)tryConvertDynamicIncrementOrDecrementToIrcreateBinariesvisitWrappedArgumentExpressiond8insertImplicitCast!convertToIrArrayAccessDynamicCallconvertToIrReceiverExpressionapplyBinaryengenerateWhenwhenBinaryenAppliedwhenD8Configured
addProjectconvertToIrExpressionOrBlock
orderNodesappendTypeArgumentsadditionalFunctionInitconvertElementtoFirBackingFieldconvertScripttoFirStatementbindFunctionTarget
toFirBlockconvertSafebuildTypeReferenceextractArgumentsTotoFirDeclarationadditionalBackingFieldInitdisabledLazyModeconvertPropertytoFirOrErrorTypeconfigureBlockWithoutBuilding#buildOrLazyDelegatedConstructorCallextractValueParametersToextractAnnotationsFromtoFirOrImplicitTypeextractAnnotationsTo visitCallableReferenceExpressionvisitSuperExpressiontoFirPropertyAccessortoFirEnumEntrytoInitializerExpressiontoFirOrUnitTypeextractSuperTypeListEntriesTotoFirConstructorbuildOrLazyExpressiontoFirPropertybuildFirBody visitCollectionLiteralExpressionextractTypeParameteradditionalPropertyAccessorInit
runOnStubsbuildOrLazyadditionalPropertyInitsplitToCalleeAndReceivervisitClassLiteralExpressionbuildOrLazyBlockisLocalClassOrAnonymousObjecttoLegacyRawContractDescriptioncreateSafeCallgenerateNotNullOrOther processLegacyContractDescriptionbuildBalancedOrExpressionTreegenerateContainsOperationgenerateLazyLogicalOperationtoFirOperationisContractPresentFirCheckgenerateAccessorsByDelegatefilterUseSiteTargetconvertToReceiverParameter generateResolvedAccessExpressiontranslateEscapeparseCharactergenerateComparisonExpressionisContractBlockFirCheckgenerateAccessExpressionasReceiverParametertoFirOperationOrNullpullUpSafeCallIfNecessarytoUnaryNametoBinaryNameescapedStringToCharactercreateConventionCallemptyPersistentHashMapBuilderstackOf	topOrNull	popOrNullcreateIrConstructorgetOrCreateIrPropertygetIrBuiltInsPackageFragmentgetFieldStaticFakeOverrideKeygetIrCallableSymboloriginalDeclarationForDelegatedareCompatiblepreCacheBuiltinClassMembers'convertAnnotationsForNonDeclaredMemberscreateIrFunctiongetIrVariableSymbolcreateIrLocalDelegatedPropertygenerateLazyFakeOverridescreateIrParameterbindAndDeclareParametersregisterFilegetOrCreateIrFunctiondeclareIrSimpleFunctiondeclareIrAccessorgetIrConstructorSymbolgetCachedIrCallableconvertCatchingcreateIrLazyPropertygetCachedIrConstructor	getIrFile$createIrParameterFromContextReceiverdeclareIrConstructorgetIrFieldSymbolgetFakeOverrideInClassgetIrDelegateFieldSymbolgetIrBackingFieldSymbol&getIrExternalOrBuiltInsPackageFragmentgetIrExternalPackageFragmentgetIrPropertyForwardedSymbolsetAndModifyParentcacheDelegationFunctioncacheDelegatedPropertygetCachedIrAnonymousInitializertoStubPropertycreateBackingFieldsaveFakeOverrideInClassgetIrPropertySymbolcreateIrPropertyAccessorcreateIrLazyFunctiongetIrValueSymboldeclareIrFieldgetCachedIrPropertyfindIrFakeOverridedeclareParametersdeclareDefaultSetterParametergetOrCreateDelegateIrFieldcreateIrPropertycomputeDeclarationOrigin createIrFieldAndDelegatedMembersasFakeOverrideKeycreateIrVariabledeclareTemporaryVariable getOrCreateIrPropertyByPureFieldgetIrFunctionSymbol!getCachedIrDelegateOrBackingFieldfindIrParentaddContextReceiverParametersTogetCachedIrFunctioncreateIrField/getCachedIrFieldStaticFakeOverrideByDeclarationdeclareIrPropertyputParametersInScopedeclareIrVariablegetCachedIrScriptgetOrCreateIrConstructorcreateDefaultSetterParametercreateIrAnonymousInitializergetOrCreateIrScript
isEqualsTovalueIfKnownkillEdgeremoveAllIncomingEdgesupdateDeadStatusinsertIncomingEdgeedgeFromremoveAllOutgoingEdgesedgeTotypeEqnotEqisSyntheticisRealtoReturnputAssignmentToSafeCall-constructorTypeParametersFromConstructedClass#generateConstantExpressionByLiteralregisterSelfTypetoDelegatedSelfTypebuildExpressionWithErrorLabelinitCompanionObjectSymbolAttrbuildLabelAndErrorSourcebuildBlockPossiblyUnderSafeCall(dispatchReceiverForInnerClassConstructor/generateIncrementOrDecrementBlockForArrayAccesswithDefaultSourceElementKind!generateIncrementOrDecrementBlockwithCapturedTypeParameters*buildErrorTopLevelDestructuringDeclarationgenerateAugmentedArraySetCalladdCapturedTypeParametersgenerateComponentAccesscreateNoTypeForParameterTypeRefcallableIdForClassConstructorgenerateComponentFunctionstoInterpolatingCallinitContainingClassForLocalAttr4convertUnaryPlusMinusCallOnIntegerLiteralIfNecessaryprepareTargetconvertFirSelectorconvertValueParameterNameregisterIfAbsentImplgenerateAssignmentcallableIdForNamewithChildClassNamevisitArtifactsvisitControlFlowGraphReferenceenterClusterexitClusterrenderEdgesrenderNodesunwrapElementisEqsmartCastedTypeunwrapFakeOverridesIfNecessarytoOperationapproveContractStatementtoPersistentcreateStandardNumericMembersconfigureSuperTypesaddArrayMembersprimitiveIterator'createIntrinsicConstOfToStringAndEqualsreferenceClassByFqname#createStandardNumericAndCharMembersreferenceClassByClassIdensureLazyContentsCreatedfinalizeClassDefinitionforEachSuperClasscreateStandardBitwiseOpsgetNumericConstantsExpressionsgetFunctionsByKeycreateStandardRangeMembersgetMaybeBuiltinClasscreateNumberClasscreatePrimitiveArrayClass(getPrimitiveArithmeticOperatorResultTypenewAssignmentIndexbuildImportedPackagefreezelowestCommonAncestorandForTypeStatementsmergeAssignmentsrecordNewAssignmentjoinFlowcopyStatementsapproveOperationStatementcopyCommonAliasesorForTypeStatementsisAcceptableForSmartcastcopyNonConflictingAliasesaddTypeStatementsisSameValueInaddLocalVariableAlias*translateVariableFromConditionInStatementshasExtensionReceiverisShadowedByPropertyCandidateisShadowedByFieldCandidatestrictlyDerivedFromareEquivalentTopLevelCallablesfilterOutEquivalentCallshandleLevelvisitClassExitNodevisitElvisLhsIsNotNullNodevisitCallableReferenceNodevisitEnterValueParameterNodevisitEnterDefaultArgumentsNodevisitExitValueParameterNodevisitGetClassCallNodevisitElvisRhsEnterNodevisitScriptEnterNodevisitElvisLhsExitNodevisitClassEnterNodevisitExitDefaultArgumentsNode visitSmartCastExpressionExitNode&visitAnonymousObjectExpressionExitNodevisitFieldInitializerEnterNodevisitLocalClassExitNodevisitScriptExitNodevisitAnonymousObjectEnterNodevisitFieldInitializerExitNode"visitWhenSubjectExpressionExitNodevisitElvisExitNode-getOrCreateRealVariableWithoutUnwrappingAliascopyRealVariableWithRemappingexcluderesolveRootProjectgetStabilityremoveRealVariablegetIdentifierBySymbolgetOrCreateIfReal
createRealcreateSyntheticenqueueResolutionTasks#runResolverForDelegatingConstructorrunResolver$buildCandidateFactoriesAndCollectorsdebugCompareToContextReceiverGroup	subscriptdebugKindArrayOfInvokeResolvePriorityTopPrioritizedappendDebugKindInvokeReceiverUnqualifiedEnumLocalkindOf
resumeTasksuspendResolverTaskrunTasksstopResolverTaskenqueueResolverTaskrequestGrouppreparedFilesexitFunctionCall
enterClassenterFunctionCallrecordAssignments visitAssignmentOperatorStatementprepareRootProject	exitClassvisitLocalDeclarationvisitElementWithLexicalScoperecordAssignmentgetInfoForDeclarationprocessScopeForExplicitReceiverprocessHideMembersLevel processExtensionsThatHideMembersprocessQualifierScopes.processCandidatesWithGivenContextReceiverGrouprunResolverForSuperReceiver1processCandidatesWithGivenImplicitReceiverAsValuerunResolverForNoReceiverrunResolverForQualifierReceiverprocessClassifierScope runResolverForExpressionReceiverrunResolverForInvoke8runResolverForBuiltinInvokeExtensionWithImplicitArgument8runResolverForBuiltinInvokeExtensionWithExplicitArgumentprocessLevelForRegularInvokecreateExplicitReceiverForInvoke)createExplicitReceiverForInvokeByCallable#enqueueResolveTasksForSuperReceiver!enqueueResolveForExplicitReceiver(enqueueResolveTasksForExpressionReceivercreateInvokeFunctionResolveTaskenqueueInvokeReceiverTask/enqueueResolverTasksForInvokeReceiverCandidates enqueueResolveTasksForNoReceiverenqueueResolverTasksForInvoke(enqueueResolveTasksForImplicitInvokeCallenqueueResolveTasksForQualifier)buildCallKindWithCustomResolutionSequenceuseMochaloadersproduceExecutabletestTaskconfigureMaindistributiondceTaskconfigureBuildrunTaskwebpackTaskconfigureRuncommonWebpackConfigconfigureDefaultTestFrameworkcreateDependencydetectconfigureCompilationDefaultsdefineConfigurationsForTargetwhenBrowserConfigureduseEsModuleswhenNodejsConfigurednodejsbrowsergenerateTypeScriptDefinitionsuseCommonJsargssetArgssetClasspathconfigurePlatformSpecificModelcreateTestRunconfigureCompilationsdoPodInstallkotlinOptionsappendFromConfigDirjsoncreateTestExecutionSpectoJvmisCachedtoJvmStackTraceElementfindInteropsGroup	attributeprintWarningbuildCompilationProcessorconfigureTargetcreateArchiveTasksfillInStackTracewriteObjectyieldDiagnosticyieldIfNeedreportDiagnosticIfNotNullreceiverExpression
readObjecttoScopeTowerLeveltoMemberScopeTowerLevelenumerateTowerLevels6toScopeTowerLevelForStaticWithImplicitDispatchReceiverreportFailureprocessLevelreplaceExplicitReceiverwithReceiverAsArgumentreplaceWithVariableAccess4shouldSkipCandidateWithInconsistentExtensionReceiver areThereExtensionReceiverOptions%toResolvedQualifierExpressionReceiverdispatchReceiverValueconsumeCallableCandidatetoArgumentToParameterMappingnumDefaultsresolveSupertypesByCalleeNameresolveSupertypesByMembersresolveSupertypesByPropertyNameisCallingMethodOfAnyfindTypesForSuperCandidatesgetFunctionMembersisConcreteMembergetPropertyMembersresolveSupertypesForMethodOfAnyrecordCallableMemberLookupconsumeCandidateswithMemberCallLookup.getOriginalReceiverExpressionIfStableSmartCastprocessMembershasConsistentExtensionReceiverbestCandidates
newDataSetcreateQualifierReceiveraddSubsystemFromExpression	candidateprocessCandidate,removeSmartCastTypeForAttemptToFitVisibilitygetBackingFieldIfApplicablerunningFailureregisterTestTaskcreateErrorFunctionSymbolbuildBaseSystemisRegularClassWithoutCompanioncreateCandidate'isCandidateFromCompanionObjectTypeScopecreateErrorPropertySymbol#unwrapIntegerOperatorSymbolIfNeededgetExpectedReceiverTyperesolveExtensionReceivercreateClientcollectDslMarkerAnnotationsgetDslMarkersOfImplicitReceiver	checkImpl%getDslMarkersOfThisReceiverExpressionupdateTypeInBuilderInferenceupdateTypeFromSmartcastprocessConstructors%processFunctionsAndConstructorsByNamegetFirstClassifierOrNullprocessSyntheticConstructorsprocessConstructorsByNamegetSingleVisibleClassifierisInvisibleOrHidden%computeDefaultMappingForRawTypeMember$markCandidateForCompatibilityResolveisSuperReferenceExpressionisSuperCallisJavaApplicableCandidatefindClosestMatchingReceiversprepareReceiversprocessNonLambdaArgumentsprocessNonLambdaArgumentaddVarargArgumentprocessPositionArgumentprocessNamedArgumentprocessExcessLambdaArgumentsprocessExternalArgumentgetParameterByNameprocessDefaultsAndRunCheckscompleteVarargPositionArgumentsaddSubtypeConstrainthasContradictionregisterTypeVariablesAisContainedInInvariantOrContravariantPositionsAmongTypeParameters=isContainedInInvariantOrContravariantPositionsAmongUpperBoundgetTypeParameterByVariablegetDependentTypeParametersgetDependingOnTypeParameter>isContainedInInvariantOrContravariantPositionsWithDependenciesremoveTypeVariableTypescreateFieldInitializerExitNode"createWhenBranchConditionEnterNode"createPropertyInitializerEnterNode createDelegateExpressionExitNode!createWhenBranchConditionExitNodecreateBlockExitNodecreateEnterValueParameterNodecreateGetClassCallNodecreateFieldInitializerEnterNodecreateExitValueParameterNode#createBinaryOrEnterRightOperandNodecreateStubNode#createWhenSubjectExpressionExitNodecreateFinallyProxyExitNodecreateVariableDeclarationNodecreateSmartCastExitNodecreateLoopConditionEnterNodecreateLoopEnterNode"createDelegatedConstructorCallNode!createWhenSyntheticElseBranchNodecreateWhenExitNodecreateTypeOperatorCallNodecreateElvisLhsExitNodecreateTryMainBlockExitNode!createStringConcatenationCallNodecreateResolvedQualifierNodecreateClassEnterNodecreateClassExitNodecreateEnterDefaultArgumentsNodecreateFinallyBlockExitNodecreateBinaryAndEnterNode%createAnonymousFunctionExpressionNodecreateBinaryOrExitNodecreateFakeExpressionEnterNodecreateJumpNodecreateCatchClauseEnterNodecreateWhenBranchResultExitNodecreateWhenBranchResultEnterNodecreateAnonymousObjectEnterNodecreateLoopConditionExitNodecreateComparisonExpressionNodecreateElvisLhsIsNotNullNodecreateFunctionExitNodecreateTryMainBlockEnterNodecreateThrowExceptionNodecreateSplitPostponedLambdasNodecreateBlockEnterNodecreateWhenEnterNode"createLocalFunctionDeclarationNodecreateCallableReferenceNodecreateFunctionEnterNodecreateEnterSafeCallNode!createPropertyInitializerExitNodecreateInitBlockExitNodecreateTryExpressionExitNodecreateElvisRhsEnterNodecreateExitSafeCallNodecreateBinaryOrEnterNodecreateEqualityOperatorCallNodecreateFinallyProxyEnterNodecreateTryExpressionEnterNode!createBinaryOrExitLeftOperandNode#createMergePostponedLambdaExitsNodecreateQualifiedAccessNodecreatePostponedLambdaExitNodecreateExitDefaultArgumentsNodecreateLoopExitNodecreateElvisExitNodecreateBinaryAndExitNodecreateFunctionCallNodecreateCatchClauseExitNode"createBinaryAndExitLeftOperandNodecreateLocalClassExitNodecreateVariableAssignmentNodecreateLoopBlockExitNodecreateLoopBlockEnterNodecreateConstExpressionNodecreateCheckNotNullCallNode$createBinaryAndEnterRightOperandNodecreateInitBlockEnterNodecreateFinallyBlockEnterNodecreateScriptExitNodecreateScriptEnterNode'createAnonymousObjectExpressionExitNodeconvertTypeVariableType!chosenExtensionReceiverExpressionfinalizeConfigurationdispatchReceiverExpressioncontextReceiverArguments(isNotLessSpecificCallWithArgumentMappingisOfNotLessSpecificShapefilterOverrides.chooseCandidatesWithMostSpecificInvokeReceiverexactMaxWithfindMaximallySpecificCallcompareCallsByUsedArgumentscomputeSignatureTypescreateEmptyConstraintSystemargumentType'createIfSyntheticNamesProviderIsDefined$setterTypeIsConsistentWithGetterTypehasJavaOverridden#shouldSearchForJavaRecordComponentscheckGetAndCreateSynthetic8createToFreshVariableSubstitutorAndAddInitialConstraints!getTypeParameterFromExpandedClassisSubtypeForSamConversionresolvePlainExpressionArgument!checkApplicabilityForArgumentTypenamedReferenceWithCandidateresolveBlockArgumentresolvePlainArgumentTyperesolveArgumentExpression+getExpectedTypeWithImplicintIntegerCoercionisFunctional*captureFromTypeParameterUpperBoundIfNeeded argumentTypeWithCustomConversionprepareCapturedTyperesolveSubCallArgumentcaptureTypeFromExpressionOrNullresolveArgumentprepareExpectedTypehasSupertypeWithGivenClassId getExpectedTypeWithSAMConversioncreateFakeArgumentsForReferenceisKCallableType,needCompatibilityResolveForCallableReferencegetCallableReferenceAdaptationbuildReflectionType&varargParameterTypeByExpectedParametercanBeMutableReference8extractInputOutputTypesFromCallableReferenceExpectedTypeenterRepeatableStatementresetReceiversorderedArgumentshasOverriddenEqualsenterSafeCallAfterNullCheckexitContractDescriptionenterStringConcatenationCallexitLocalVariableDeclarationupdateAllReceiversprocessWhileLoopExitexitAnnotationexitRepeatableStatementprocessLoopExit*returnExpressionsOfAnonymousFunctionOrNullreceiverUpdatedenterAnnotationcommitOperationStatementaddAllStatementsbuildIncomingFlowgetTypeUsingSmartcastInfo	processEqprocessEqNulladdTypeOperatorStatementsprocessEqConstexitBooleanNotexitVariableInitializationcreateFirDataFlowAnalyzermergeWhenBranchEntryFlowaddAllConditionallyhasEqualsOverrideexitComparisonExpressionCallsetFlowmergeIncomingFlowgetOrCreateIfRealAndUnchangedenterContractDescriptionenterCheckNotNullCallmergeBinaryLogicOperatorFlowprocessConditionalContracthasBuilderInferenceAnnotationwrapSubstitutionScopeIfNeedwrapScopeWithJvmMappedreplaceExpectedType&replaceTypeVariableForLambdaReturnTypeprocessCandidateIfApplicable"processAllContainingCallCandidatessetupCompilerArgsskipConditioncreateCompilerArguments
encodeListtransformToResolvedLambda isFunctionExpressionWithReceivershouldBeFlexible%createTypeVariableForLambdaReturnTypehasOnlyInputTypesAttribute*extractLambdaParameterTypesFromDeclaration#createFixVariableConstraintPosition"collectDeclaredValueParameterTypes createArgumentConstraintPositionisFunctionExpression(createTypeVariableForLambdaParameterType0createTypeVariableForCallableReferenceReturnType3createTypeVariableForCallableReferenceParameterType#updateParameterTypesFromDeclarationtoStringRepresentation!extractLambdaInfoFromFunctionTypeintegrateConstraintToSystemextractLambdaInfopreprocessLambdaArgumentpreprocessCallableReferencecreateConstraintSystemcreateFromStreamaddValuetoJsonStringparseExceptiontestFailedMessageoutputregularTextserviceMessageanonymizeOnIdeSizerunWithContextrunCompilerAsyncgetCustomJvmArgsaddEdgeIfLocalClassMemberfromProjecttransformArgscheckClasspathremapTypeAbbreviationremapTypeArgumentremapDeclaredEnumEntryremapDeclaredConstructorforEachGraphOwneraddExceptionEdgesFrompopGraphremapDeclaredProperty!levelOfNextExceptionCatchingGraphremapDeclaredTypeParameterremapDeclaredVariableremapDeclaredFieldexitVariableDeclarationremapDeclaredSimpleFunctionpropagateDeadnessForwardremapDeclaredValueParameteraddEdgeToSubGraphpopAndAddEdgeremapDeclaredClasshandleParentrenderTypeArgumentbuildWithScopegetDeclaredClassgetArrayElementTypeisEmptySubstitution	exitGraphgetSubstitutionArgumentcompleteFunctionCallexitFakeExpressionenterAnonymousFunctiongetExportedSignatures!addNonSuccessfullyTerminatingNodefromProtoStreamtoProtoStreamenterFakeExpressionenterSafeCallprocessClassprocessSuperTypesaddBackEdge"processConstructedClassDeclarationprocessSimpleFunctionfirstInPlaceInitializedMemberaddReturnEdgeshandleAssociatedObjects!mergeDataFlowFromPostponedLambdastransformFunctionAccessbuildIntexitComparisonExpression	enterCalladdNewSimpleNodecopyValueParametersFrom splitDataFlowForPostponedLambdasextractValueParametersgetFunctionSignaturegetBridgeOrigin!unifyDataFlowFromPostponedLambdasuseExpressionAsType	nullConstcreateIrSetFieldunreachableExpressionexitAnonymousFunction
enterGraph
isReservedhasProperConstraintprocessTypeWithoutParameterscomputeDirections-isLowerConstraintForPartiallyAnalyzedVariablehasRequiredKind%directionRequirementsForVariablesHold%collectRequiredDirectionsForVariablescompositeVarianceupdateDirectionenqueueTypesFromConstraintstoFqNamewithCommentsifTruewithLocationbuildFactoryFunctiongetAssociatedObjectKeygetNameForProperty.getTopLevelFunctionSymbolsToByPackageFragmentsloadBuiltInsgetNameForConstructorgetTopLevelCallableNamesgetNameForClassgetNameForStaticFunctiongetNameForFieldgetRefForExternalClasstoTypeScriptgetNameForMemberFieldgetNameForStaticDeclarationgetTopLevelPropertySymbolsgetNameForMemberFunctionmayBeSyntheticFunctionClassName createSyntheticFunctionInterface/getClassLikeSymbolByClassIdWithoutClassIdChecksgetSymbolByTypeRefgetClassDeclaredFunctionSymbolsgetRegularClassSymbolByClassIdgetClassDeclaredConstructorsflatMapToNullableSetisNameForFunctionClassmayHaveTopLevelClassifiergetClassDeclaredPropertySymbolsgetClassDeclaredMemberScopedescribeSymbolcomputeTopLevelCallablescomputeTopLevelPropertiescomputeTopLevelFunctionscreateCopyWithCleanCachescomputePackage!mayHaveTopLevelCallablesInPackagecomputeClassensureNotNullbuildCommonSystemupdateCallsskipCallisSuitableForBuilderInferencegetResultingSubstitutoraddLambdaImplicitReceiveranalyzeLambdaprocessCallableReference-applyResultsOfAnalyzedLambdaToCandidateSystem(createSubstituteFunctorForLambdaAnalysiswriteJsCodesubstituteOrSelftranslateCallArgumentsregisterSyntheticVariablescompleteCandidatesintegrateResolvedCall(createToSyntheticTypeVariableSubstitutorcreateFinalSubstitutorcreateTestContainerFunapproximateLambdaInputType createPostponedArgumentsAnalyzeraddConstraintFromExpectedType"prepareLambdaAtomForFactoryPatterncreateCompletionResultsWriterrunCompletionForCallcompleteCallgetAllFirFiles
recordFileregisterCallablesetFromensureConsistent&createTypeSubstitutorByTypeConstructorsubstitutorByMap$replaceStubsAndTypeVariablesToErrorschainaddDeclarationContextaddStatementContextaddFileContext$computeRepresentativeTypeForBareTypecanBeUsedAsBareType+runContractAndBodiesResolutionForLocalClassgetTransformerCreator createReturnTypeCalculatorForIDE"substituteAlternativesInPublicTyperesolvedToContractsIfNecessaryreportNotEnoughTypeInformationrunCompletiongetOrderedAllTypeVariablesfixVariable'processVariableWhenNotEnoughInformation'getOrderedNotAnalyzedPostponedArgumentscreateCannotInferErrorTypefixNextReadyVariable*transformToAtomWithNewFunctionExpectedType!tryToCompleteWithBuilderInferencefindResolvedAtomBystoreResultmangleTypePlatformSpecificaddReturnTypeSpecialCase!computeCachedTransformationResult!collectLocalClassesNavigationInforunAllPhasesForLocalClasspathForCallabledoTransformConstructordoTransformTypeParameters"transformChildrenWithoutComponentstransformTypeWithPropertyTypetransformAccessorsgetDefaultAccessorStatus+obtainValueParametersFromResolvedLambdaAtomisOriginalDescriptor*transformAnonymousFunctionWithExpectedType/obtainValueParametersFromExpectedParameterTypes&transformPropertyAccessorsWithDelegatestoreVariableReturnTypetransformLocalVariableprepareSignatureForBodyResolve#transformFunctionWithGivenSignatureareEqualgetHashCodetransformAnonymousFunctionBodytoExpectedTypeRefdoTransformRegularClass
updateFromwithFirArrayOfCallTransformerdoBuildcreateTypeParameterScope/replacePropertyReferenceTypeInDelegateAccessors%obtainValueParametersFromExpectedTyperesolveSetterisOneBranch replaceReturnTypeIfNotExhaustive	remapTypetoArrayOfCallwrapProjectionupdateNullabilityIfNeededsubstituteCapturedTypesubstituteBoundssubstituteOriginalsubstituteIntersectedTypessubstituteRecursiveaddValueParametertransformImplicitTypeRefisInner!getUnsubstitutedInnerClassesScopeisData!transformPropertyAccessExpressiontransformSafeCallExpressionvisitNoTransformisDefinitelyNotSamInterfacegetContextReceivers%getDefaultFunctionTypeForSamInterfacetransformSmartCastExpressiongetThisAsReceiverParameter$transformAnonymousFunctionExpressiontransformConstExpressionremapArgumentsWithVarargwriteResultTypeexpectedConeTypevisitCallableDeclarationwithFullBodyResolvesuppressOrThrowErrorareCompatibleTypeParametersareCompatibleModalitiesvalueParametersCountCompatiblefindExpectForActualareCompatibleTypeLists)areDeclarationsWithCompatibleVisibilitiesareCompatibleCallablesareCompatibleFunctions,arePropertySettersWithCompatibleVisibilitiesareCompatibleClassifiersgetMembersToeffectiveModalitygetConstructorsToequalsByequalByareCompatiblePropertiesareCompatibleClassScopes
toTypeList(runCompanionGenerationPhaseForLocalClassinsideAnnotationArgumentrecordThatImportsAreResolvedimportsAreResolved recordThatAnnotationsAreResolvedannotationsAreResolvedresolveAnnotationSymbolgetTypeArgumentsOrNameSourcegetActualTypeParametersCountresolveEnumEntrySymbol!getClassesAlignedToQualifierPartsresolveLocalClassChaincreateDiagnosticsIfExistsresolveUserTypeToSymbolgenerateCompaniongenerateAndUpdateCompanion7runCompilerRequiredAnnotationsResolvePhaseForLocalClass replaceResolvedQualifierReceiversimpleEffectcontractBuilderinvocationKindwithFileAndScopesensureResolvedTypeDeclarationhasOwnBodyOrAccessorBodyrunContractResolveForLocalClassrunContractResolveForFunctionisVarsetOverriddenDescriptorsgetInitialSignatureDescriptorgetUserData	isTailrec
acceptVoidshouldSkipClassnewCopyBuildertryCalculateReturnTypetransformVarargTypeToArrayTypetransformTypeToArrayType$transformRawContractDescriptionOwner*transformLegacyRawContractDescriptionOwnertransformOwnerOfErrorContractwithContractModeDisabledendComputingcomputeOnlyClassStatus"createAllCompilerResolveProcessorscreateCompilerProcessorByPhasecreateAllResolveProcessorscheckSessionConsistencywithValueParameterwithAnonymousObjectwithWhenSubjectTypestoreClassIfNotNested	withField2forConstructorParametersOrDelegatedConstructorCallforConstructorBodyforPropertyDelegateAccessorsforDelegatedConstructorCallforBlockwithWhenExpressiontypeParameterScopeaddNonLocalTowerDataElement&scopesWithPrimaryConstructorParameterswithTowerDataContextsreplaceTowerDataContext$addInaccessibleImplicitReceiverValue)withLambdaBeingAnalyzedInDependentContextforConstructorParameterswithAnonymousInitializerforFunctionBody(buildSecondaryConstructorParametersScopeforPropertyInitializerforAnnotationwithPropertyAccessorwithConstructor'getPrimaryConstructorAllParametersScopewithScopesForScriptforEnumEntrywithTowerDataModewithScopesForClasswithTowerDataCleanupwithInferenceSession%withCallableReferenceTowerDataContext storeContextForAnonymousFunctionwithAnonymousFunctionwithSimpleFunctioncreateSnapshotForLocalClasseswithContainerClass%withAnonymousFunctionTowerDataContextwithTemporaryRegularContextwithWhenSubjectImportingScopewithTypeParametersOfwithTowerDataModeCleanupdropContextForAnonymousFunctionupdateLastScopewithContainingClass(getPrimaryConstructorPureParametersScopewithContainerresolveToPackageOrClass$replaceLambdaArgumentInvocationKinds!unwrapAnonymousFunctionExpression runTypeResolvePhaseForLocalClassrunStatusResolveForLocalClasstransformImportForFqNamegetOriginalapplyResolvedSupertypesToClassgetResolvedSupertypeRefs,createOtherScopesForNestedClassesOrCompanioncreateErrorTypeRefpushAll%runSupertypeResolvePhaseForLocalClassresolveSupertypesInTheAirtypeParametersScopepushIfNotNullextractClassFromTypeRef%lazyResolveToPhaseWithCallableMemberslazyResolveToPhaseupdateCalleerequiredToSaveshouldRunAnnotationResolveresolveFromImportScopecreateDeepCopywithFileScopeswithFileAndFileScopes/isHiddenForResolutionEverywhereBesideSupercalls isHiddenToOvercomeSignatureClashresolveRegularClassafterTransformingChildrenbeforeTransformingChildren
noReceiver
noArgumentasContractElementparseInvocationKindisAccessorOfasContractValueExpressiontoValueParameterReferenceasContractBooleanExpressiontoExpectedTypegetSupertypesComputationStatusstoreSupertypesstartComputingSupertypesgetOrPutFileScopegetOrPutScopeForCompaniongetOrPutScopeForNestedClasses
breakLoopsgetCheckerscollectMissingCasesprocessExhaustivenessCheckcomputeAllMissingCasesgetSubjectType#computeStatusForNonIntersectionTypeunwrapIntersectionTypeapproximateIfIsIntegerConstcollectAllSubclassesprocessBranchcollectAllSubclassesToisPrivateToThiscontradictsWithresolveModalityhasPrivateConstructorresolveVisibilitygetOverriddenStatusesgetOverriddenPropertiestakeIfAcceptablewithBareTypeswithIsOperandOfIsOperator generateCalleeForElvisExpressiongenerateCallInfo%generateSyntheticCheckNotNullFunction/assertSyntheticResolvableReferenceIsNotResolved#generateSyntheticCallForArrayOfCallgenerateCandidategenerateSyntheticSelectFunctiongenerateSyntheticElvisFunctiongenerateCalleeForWhenExpression.resolveCallableReferenceWithSyntheticOuterCall!generateCalleeForCheckNotNullCall$generateSyntheticSelectTypeParametergenerateCalleeForTryExpression$generateCalleeReferenceWithCandidatetoValueParameterprepareScopesresolveAllSupertypesprepareScopeForNestedClassesprepareScopeForCompanionaddSupertypesFromExtensionssupertypeRefsvisitDeclarationContentprepareFileScopescalculateScopes"resolveSpecificClassLikeSupertypes
getOrBuildscopesisInfixexpansionForTypeAliascreateWithEmptyScopeSession
isIteratorisIteratorNextisInvokeisIteratorHasNextfqNameisKFunctionInvokegetDispatchReceiverParameter!moveOrDeleteIrrelevantAnnotations'unboundCyclesInTypeParametersSupertypesgetValueParameters4resolveConstructedTypeRefForDelegatedConstructorCallcopyWithOffsetshasSupertypePathToParameteraddTypeParametersScopewithFileScope	constNullwithClassScopes
constFalsetransformClassTypeParametersresolveClassContentsetAccessorTypesByPropertyTypeannotationShouldBeMovedToField	addScopeswithExpectedTypeexpectedType&createErrorReferenceWithErrorCandidate)createErrorReferenceWithExistingCandidatefullyProcessCandidateprettyStringcreateCurrentScopeList forceResolveStatusesOfSupertypes!transformValueClassRepresentation&forceResolveStatusOfCorrespondingClasstransformClassStatusforceResolveStatusesOfClassresolveClassForSuperTypefindConversionFunction
outerClass	outerTypecreateSimpleOperatorCall	constTruecreateFunctionCall withContainingSafeCallExpressiontoBlocktransformBlockInCurrentScope)resolveCandidateForAssignmentOperatorCallextractSuperTypeDeclarationtransformExplicitReceiveraddReceiversFromExtensionsstoreTypeFromCallee,tryResolveAugmentedArraySetCallAsSetGetBlock!transformTypeOperatorCallChildren5transformToIntegerOperatorCallOrApproximateItIfNeededwithTypeArgumentsForBareTypecreateAssignOperatorCallkFunctionClassDescriptormarkSuperReferenceErrortransformSuperReceivertransformFunctionCallInternalreplaceCurrentlyActiveContextenumMap!replaceAndSetActiveRegularContextreplaceTowerDataModeapplyAttributesFromfullyExpandedTypeNoCacheapplyNullabilityFrommapTypeAliasArgumentsdirectExpansionTypefullyExpandedTypesuspendFunctionClassDescriptorgetCallableReferenceContextstoreAnonymousFunctionContextdropAnonymousFunctionContextgetAnonymousFunctionContext
classScopedelegatingConstructorScopeobtainFirOfClasssmartcastScopefirClassLiketoTypeProjections(isValidTypeParameterFromOuterDeclarationgetSingleAbstractMethodOrNullfindSingleAbstractMethodByNamesisPublicInObjectcomputeSamCandidateNamesbuildSubstitutorForSamTypeAlias3hasMoreThenOneAbstractFunctionOrHasAbstractProperty getFunctionTypeForAbstractMethod&findClassRepresentationThatIsSubtypeOftoSymbolOrErrorfindClassRepresentationgetSymbolByLookupTagbindSymbolToLookupTagwithParameterNameAnnotationwithCombinedAttributesFromtoFirRegularClassSymbolexpandedRegularClassIfAnyreplaceReceiverTypegetOriginalTypeaddContextReceiverkSuspendFunctionClassDescriptorfunctionClassDescriptorputIfNameIsNotNulladdAllContextReceiversgetReceiverIndexgetSourceFilePathregisterFileSourcebuildSamConstructorForTypeAlias	isSamType createSyntheticConstructorSymbol"buildSamConstructorForRegularClassgetSamConstructoruseCheckerslookupSuperTypesisClassBasedTypescopeSessionKeycollectSuperTypescreateSubstitutionForScopecomputePartialExpansioncollectSymbolsForType0computeNonTrivialTypeArgumentForScopeSubstitutorisThereLoopInSupertypescreateSubstitutionForSupertypefromSymbolDescriptorfromSymbolOwner%registerJavaSpecificResolveComponentsregisterModuleDataregisterCommonJavaComponents!registerCliCompilerOnlyComponentsregisterCommonComponentsregisterResolveComponents4registerCommonComponentsAfterExtensionsAreConfiguredregisterJsSpecificComponentscreateSessionWithDependenciescreateEmptySessioncomputeDependencyProviderListforEachFragmentInPackage&createSyntheticForwardDeclarationClasscreateArgumentsMappingprepareQualifiedTransformreplaceTypeRefWithSubstitutedhandleVarargstoResolvedReferenceirBlockBodyhasAdditionalResolutionErrorstransformSyntheticCallChildrenremoveExactAttributecomputeTypeArgumentTypes+transformImplicitTypeRefInAnonymousFunctionirCompositefinallySubstituteOrNullcomputeTypeArgumentssubstituteTypeRefvisitLocalDelegatedPropertytransformSyntheticCallfinallySubstituteOrSelfvisitDeclarationReferencevisitRawFunctionReference.propagateTypeFromQualifiedAccessAfterNullCheck"getAsForbiddenNamedArgumentsTargetgetNarrowedDownSymbolinitialTypeOfCandidate typeForReifiedParameterReferenceconstructFunctionTypetoErrorReference addReturnToLastStatementIfNeededgetContainingClass*transformQualifiedAccessUsingSmartcastInfo)createConeDiagnosticForCandidateWithErrorisIntegerLiteralOrOperatorCall!propagateTypeFromOriginalReceivertypeFromSymbolconstructFunctionTypeRef0transformWhenSubjectExpressionUsingSmartcastInfo!getCorrespondingClassSymbolOrNulltypeForQualifiertypeFromCalleetypeForQualifierByDeclarationapplyResultTypeRefbuildResolvedQualifierForClass3transformDesugaredAssignmentValueUsingSmartcastInfoshouldReturnUnit%transformExpressionUsingSmartcastInfo
ensureTypevisitDynamicOperatorExpression&disableLazyResolveContractChecksInside disableLazyResolveContractChecksvisitSuspendableExpressionresolveAnnotationsWithArguments#resolvedCompilerRequiredAnnotations resolvedAnnotationsWithArgumentsresolvedAnnotationsWithClassIdsisDefinitelyEmptyresolvedAnnotationClassIdsresolveAnnotationsWithClassIdsisEitherModuleOrNonModulevisitBlockBodycheckTypeOperatorCallcheckGetClassCall4isNotEffectivelyExternalFunctionButOverridesExternalgetNodesInOrderforEachParentsforAllSpreadArgumentsOfcheckFunctionIfSubtypeOfhasRequiredAnnotation isBuiltinFunctionalTypeOrSubtype$visitLocalDelegatedPropertyReferenceisPredefinedObjectisNativeObjectisEffectivelyExternalMemberisExportedObjectisNativeInterfacecollectDataForNodecollectDataForNodeInternalsuperClassNotAnysuperInterfacesisNonAbstractMemberIfInterfacecheckPropertyAccessesrequiresInitializationupdateRangeoverwriteRangeaddRangevisitErrorDeclarationfindContainingMemberisRenamableFunctionfindJvmNameAnnotation isValueClassThatRequiresManglingcollectBranchExitscanBeTrueFor	isTrueForisWrongConditionOnNodeisJvm6investigateisInPlaceLambdareferenceToSymboltoQualifiedReferenceisFunctionTypeRefcollectDataForReferencecheckReferencegetParameterCallsEffect"getParameterCallsEffectDeclarationcheckExpressionForLeakedSymbolsgetArgumentCallsEffectaddInvocationInfoisCompiledToJvmDefaultreportIfHasAnnotationcheckInternalgetMinimumVisibilitycheckForInterfacecontainerIsNonCompanionObjectsupportshasAnnotationNamedAscheckOverrideCannotBeStaticcheckAnnotatedchooseMostSpecificgetContainerAthasExternalPartscontainerIsInterfacereportStaticNotInProperObjectcheckStaticOnConstOrJvmField"isTypeConstructorEqualOrSubClassOfremoveOutProjection"isInsideCompanionObjectOfInterfaceisOverridable!isInlineClassThatRequiresManglinghasCustomAccessorisDontMangleClass0isInterfaceCompanionWithPublicJvmFieldPropertiesisInsideJvmMultifileClassFilevisitCallableReference*checkKotlinRepeatableAnnotationDeclaration(checkJavaRepeatableAnnotationDeclarationresolveContainerAnnotation"checkRepeatableAnnotationContainercheckContainerRetentioncheckContainerParameterscheckContainerTargetfindRefinedAnnotationsgetFirstBaseSymbolallNamesEquals	checkTypefindMetaAnnotationsinheritsRefinedAnnotationshasRefinedAnnotationsreportIncompatibleOverridecheckSyntaxvisitExternalPackageFragmentgetInheritedThrowsdecodeThrowsFiltergetClassTypeshasUnresolvedArgumentcheckInheritancecheckObjCNamegetObjCNamesgetObjCNamecheckValOrVarKeywordcheckCommaInBranchConditionvisitDynamicExpressionvisitConstantObjectfindClosesthasSameNameWithoutModifiersisSamegetCallableIdgetNullabilityprocessErrorImportisClassIdPointingToEnumEntrygetOutermostClassNameisRedundantcheckVisibilityModifierreturnTypeRequiredcheckExplicitReturnTypereturnTypeCheckIsApplicableexplicitVisibilityIsNotRequiredisDiagnosticSuppressedcheckConditionExpressionstringParentChildrenCountlightTreeMatcherisCommutativeisCommutativeOperatorcanBeAugmentedisHierarchicallyTrueisLightNodesHierarchicallyTruematchercollectInnerNodesallNodesskipNodecheckPropertyAndReportreportElementisEffectivelyHiddenByfindFunctionVisibilityfindBiggestVisibilitycheckElementAndReportfindPropertyVisibilitycanMakeSetterMoreAccessiblefindPropertyAccessorVisibilityimplicitVisibilityvisitSingletonReferencevisitModuleFragmentvisitContainerExpressionvisitErrorCallExpressionvisitDynamicMemberExpressionvisitValueParametervisitElseBranchvisitConstantPrimitivevisitSuspensionPointvisitGetClassvisitConstantArrayisNullableTypeParametertoggleContractBodycheckArgumentAndReport'isReifiedTypeParameterOrFromKotlinArrayhadExplicitTypeInSourcecheckSpecialFunctionCallcanBeValcheckOptInArgumentIsMarkercheckOptInIsEnabledfindEnclosingSuspendFunctionisRestrictSuspensionReceiver#formOfSuspendModifierForLambdaOrFunsameInstanceOfReceivercomputeReceiversInfocheckNonLocalReturnUsagecheckRestrictsSuspensioncheckSuspendModifierFormreportApiStatusreportApiNotAvailablereportDeprecationgetWorstDeprecationreportApiStatusIfNeededcheckClassLikeSymbolisReturnAllowedreportErrorOnisInsideAnnotationCallisInsideAnnotationClassisCorrectlyPlacedInisEnumEntryInitializerreportElseMisplacedreportNotExhaustivecheckPropertyAsOperator
toTypeInfotoArgumentInfo'checkAnnotationUsedAsAnnotationArgumentcheckNotAClass&checkAnnotationArgumentWithSubElementsparseVersionExpressionOrReportcheckAnnotationsWithVersioncheckDeprecatedSinceKotlincontainingClassOrFilecheckExpressionItselfcheckExplicitReceiverisConflictingErrorcheckInvisibleSettercheckVariableExpected#checkValReassignmentViaBackingFieldisInOwnersInitializer$checkValReassignmentOnValueParameterreportInapplicabilityDiagnostic$isPrimitiveWithNonPrimitiveSupertypegetInapplicabilityFor$isIdentityComparedWithImplicitBoxing#getGeneralInapplicabilityDiagnosticcheckIdentityApplicabilitycheckEqualityApplicability(getIdentityLessInapplicabilityDiagnostic&getSourceLessInapplicabilityDiagnosticcheckSenselessness getEnumInapplicabilityDiagnosticifInapplicableshouldReportAsPerRules1	tryInlinevisitQualifiedAccesseswithAnnotationsFromcheckLocalDeclarationcheckGlobalDeclarationcheckHasReturnIfBlockisFinalExpectClasswrapcheckParentfirstOrThischeckCompatibilityTypecheckVarianceConflictcheckTypeParameters-checkProjectionInImmediateArgumentToSupertype"checkExpandedTypeCannotBeInheritedcheckDelegationNotToInterfacecheckAnnotationOnSuperclass"checkClassCannotBeExtendedDirectlycollectInitializationInforeportTypeMismatchOnVariablereportTypeMismatchOnPropertyreportOverridingFinalMembercheckMutabilitycheckVisibilitycheckDeprecationcheckReturnTypesubstituteAllTypeParameters!reportCannotChangeAccessPrivilegecheckMemberreportNothingToOverridereportVarOverriddenByVal!reportCannotWeakenAccessPrivilegecheckModality checkOverriddenExperimentalities"reportReturnTypeMismatchOnFunction#needsMultiFieldValueClassFlatteningisEffectivelyExpectisInsideSpecificClassprimaryConstructorSymbolisInsideExternalClassisInsideExpectClassoriginalBoundsextractTypeParamNamesunwrapBoundextractTypeParamNamehasThrowableSupertypehasGenericOuterDeclarationcheckReplaceableLegacyOperatorscheckVarargParameterscheckUninitializedParametercheckParameterTypescheckValOrVarParametercheckFeatureIsEnabledvisitErroneousConstantReference!visitErroneousIsInstancePredicatecheckUnresolvedEffects%visitErroneousValueParameterReference$visitErroneousCallsEffectDeclarationvisitErroneousElementvisitContractDescriptionElementcheckContractNotAllowedcheckDeprecatedCalls"checkRepeatedAnnotationsInProperty/checkMultiFieldValueClassAnnotationRestrictionscheckAnnotationContainerreportIfMfvccheckPropertyGettercheckAnnotationTargetcheckAnnotationUseSiteTargetcheckAsFieldNotSubtypecheckAsPropertyNotSubtypehasMoreFollowingInstructionscheckRegularClass	checkFile	hasSetter%hasUnderlyingTypeForbiddenForLateinit	hasGetter&loadExperimentalitiesFromConeArguments&loadClassLikeSpecificExperimentalitiesaddExperimentalitiesisExperimentalityAcceptable6primaryConstructorParameterIsExperimentalityAcceptable"loadExperimentalitiesFromSupertype&loadExperimentalitiesFromTypeArguments$isAnnotatedWithSubclassOptInRequiredloadExperimentalities%loadCallableSpecificExperimentalities"reportNotAcceptedExperimentalitiesisAnnotatedWithOptIn$isExperimentalityAcceptableInContext*reportNotAcceptedOverrideExperimentalities&loadExperimentalityForMarkerAnnotation%loadExperimentalitiesFromAnnotationTocheckDynamicBoundscheckExtensionFunctionTypeBoundcheckConflictingBoundscheckBoundUniqueness$checkInconsistentTypeParameterBoundscheckFinalUpperBoundscheckTypeAliasBoundcheckOnlyOneTypeParameterBoundareAccessorsInlineisFromInterfaceOrEnum'checkExpectDeclarationVisibilityAndBodycheckPropertyInitializerisNotFinalReadOnlyisSubtypeOfCloneableisCloneableIdisRelatedToParameterisInapplicableParameterTypecheckTypeAndArgumentscheckValOverridesVarcheckConflictingMemberssubstituteTypeParameterscheckInheritanceClashexpandedClasscheckGettercheckSetterisImplicitDelegateAccessor!checkAccessorForDelegatedPropertyisLegallyAbstracthasExtensionOrDispatchReceiver2checkSupertypeInitializedWithoutPrimaryConstructorcheckSuperTypeNotInitialized'checkActualFunctionWithDefaultArgumentscheckReturnTypescheckComponentCallcheckInitializercheckCyclesInParametersisAllowedArrayisAllowedClassKindparameterHasCycletypeHasCycleannotationHasCyclecheckAnnotationClassMember checkOuterClassArgumentsRequiredcheckAllUnderFromEnumEntrycheckConflictingImportshasFunctionresolvesToClasscheckCanBeImportedcheckImportApiStatusresolveToClassgetImportStatuscheckOperatorRename getImportStatusOfCallableMembersgetProperDiagnosticcheckTypeRefcheckAmbiguousExpects!isUnderlyingPropertyOfInlineClassrequireActualModifierisExplicitActualDeclaration!checkActualDeclarationHasExpectedallStrongIncompatibilitiesisCompatibleOrWeakCompatiblecheckAnnotationConstructorsfindVisibilityExposurecheckSupertypescheckParameterBoundsgetFieldasProxy
checkClasscheckTypeAliascheckMemberReceiver'isKClassTypeWithErrorOrNullableArgumentreportIfUnderscoregetDelegated	findCyclegetClassSymbolanalyzeGraphfindUsedTypeParameterSymbolcheckQualifiedAccessgetOverriddenSymbolscheckRecursioncheckParameters)checkReceiversOfQualifiedAccessExpressioncheckCanBeInlineddropInstructionsisDefinedInInlineFunctionisInvokeOrInlineExtensioncheckArgumentsOfCallcheckPrivateClassMemberAccess
partOfCallcheckVisibilityAndAccesscheckChildrenWithCustomVisitorcheckParametersInNotInlinecheckInlineFunctionBodycheckNothingToInlineisInlinableDefaultValuecheckAccessedDeclarationcheckSuperCallsisInsidePrivateClasstoVisibilityOrNullgetAll
storeStategetNullableChildgetParentOfParentisCompileTimeBuiltinPropertyisCompileTimeBuiltinCall
fromKotlingetReferencedClassSymbolcanBeUsedForConstValcheckConstantArgumentscheckUnderscoreDiagnosticscheckConflictingElementsisCollectableisExpectAndActualcollectLocalConflictsareCompatibleMainFunctionsgetFileAndPositionInfocollectNonFunctionDeclarationcollectExternalConflictcollectFunctioncollectWithExternalConflictsonConstructorswithProjectiongetModifierListgetModifierpsirewriteState	peekStatehasNoInstructionscontainsStateInMemory	pushState$checkSinceKotlinVersionAccessibilitygetOwnSinceKotlinVersion loadWasExperimentalMarkerClassesbuildDeepSubstitutionMultimapcheckInconsistentTypeParametersisFinalisNonReifiedTypeParameterpopStateallParameterReifiedcheckCastingcheckUpperBoundViolatedgetRetentiongetExplicitAnnotationRetentionextractClassFromArgumentgetImplicitUseSiteTargetList getAnnotationClassForOptInMarkergetAllowedAnnotationTargetsextractClassesFromArgumentgetRetentionAnnotationgetAnnotationRetentiongetDefaultUseSiteTargetcontainsRepeatableAnnotationcheckRepeatedAnnotationisRepeatablegetTargetAnnotationpopInstruction	forSourcewithNavigatorcreateAllDiagnosticComponents	endOfFilevisitFunctionTypeRefvisitTypeRefWithNullabilityvisitDynamicTypeRefvisitUserTypeRefvisitImplicitTypeRefvisitIntersectionTypeRefcheckAndCommitReportsOnvisitResolvedErrorReferencepushInstructioncannotBeResolvedvisitErrorNamedReferencevisitErrorFunction	loadStateprocessErrorReferencereportFirDiagnosticvisitErrorImportcorrectDiagnosticCase$getDiagnosticsSuppressedForContainercollectDiagnosticsvisitDanglingModifierListvisitBackingFieldvisitErrorProperty
COLLECTION renderIncompatibilityInformationrenderIncompatibleClassScopesgetActualTargetListisLhsOfAssignmentisRecursiveValueClassTyperedundantModalities extractArgumentsTypeRefAndSourcefindClosestClassOrObject#explicitReceiverIsNotSuperReferencegetImplementationStatussubjectToManyNotImplementedisVisibleInClass$isRecursiveSingleFieldValueClassTypecollectSupertypesWithDelegates#hasAnnotationOrInsideAnnotatedClassgetAnnotationStringParametergetContainingDeclarationSymboldirectOverriddenFunctionsisSubtypeOfThrowableclosestNonLocalWithmodalityfindNonInterfaceSupertypecollectUpperBoundscheckTypeMismatchouterClassSymbolgetAnnotationFirstArgumentfindDefaultValueisValueClasshasBodygetContainingClassSymbolisSubtypeForTypeMismatchleastUpperBoundisSingleFieldValueClasssetFieldgetListOfAcceptableFunctions#visitQualifiedErrorAccessExpressionvisitDelegatedConstructorCallunwindgetIrFunctionByIrCallrenderSymbol
renderListregisterNativeCheckersregisterJvmCheckersregisterJsCheckersregisterCommonCheckersregisterExtendedCommonCheckerstoDiagnostictoFirDiagnosticsmapInapplicableCandidateError#reportInferredIntoEmptyIntersectionmapUnsafeCallErrormapSystemHasContradictionErrorcreateOntoKtDiagnostic!addSuppressedDiagnosticsToContextvisitWithGetClassCallshouldVisitDeclarationwithTypeRefAnnotationContainervisitWithDeclarationAndReceiver#withQualifiedAccessOrAnnotationCallvisitAnnotationContainervisitClassAndChildrenvisitWithFilewithElementinterceptProxywithAnnotationContainerinterceptCallwithGetClassCallinterceptGetObjectValuevisitWithDeclarationinterceptJavaStaticFieldvisitNestedElementsinsideContractBody(visitWithQualifiedAccessOrAnnotationCallinterceptConstructorrenderSeparatedWithNewlinesrenderInBraces
pushIndent	popIndentbuildChildSourceElementgetSourceForImportSegmentrenderAttributesrenderForSameLookupTagsinterceptEnumEntry5isPlatformSpecificSymbolThatCanBeImplicitlyOverriddenrenderPhaseAndAttributesirEqualsvisitInstanceInitializerCallconvertToIrAndActualizeconvertToIrAndActualizeForJvm
visitConstrenderAnnotationrunResolutionrunCheckersbuildFirViaLightTreeresolveAndCheckFirbuildFirFromKtFiles
renderBodyrenderDelegatedConstructorvisitSpreadElementvisitStringConcatenationvisitBranchvisitEnumConstructorCallrenderParametersrenderFlexibleTypemodalityAsStringrenderModifier!renderAsDeclarationAttributeValuegetAttributesWithValuesbuildContractElementDeclarationbuildRawContractDescriptiontransformSingleacceptAllElementstransformInplacebuildEffectDeclaration!buildLegacyRawContractDescription buildResolvedContractDescriptiongetClassLikeElementcollectLowerBoundscomputeLeafClassesOrInterfaces getHasPredefinedEqualityContractisConcreteType areClassesOrInterfacesCompatibletoFirClassWithSuperClassescollectTypeArgumentMappingtoTypeArgumentMappinggetTypeParametergetCompatibilitytoFirElementhasNoAnnotations
hasReifiedneedsBracketsinBracketsIfNecessaryisAtom toFirWhenConditionWithoutSubjecthasCrossinlinehasLateinithasExternal	hasVararghasModality
hasTailrechasFlaghasOperatorhasNoinlineaddModifiersetFlag	hasActualhasInfixisFunctionalInterface	hasInlinehasConstisDataClasshasOverridevisitGetObjectValuevisitPropertyReferenceisObjectLiteralisEnumEntrydefaultConstructorVisibilityhasValOrVar#toFirPropertyFromPrimaryConstructortoFirDestructingDeclarationnameAsSafeNamegetAsStringWithoutBacktickisClassLocalextractArgumentsFromvisitTypeOperatorvisitExpressionBodyvisitGetValuevisitGetEnumValuevisitSyntheticBodyvisitCompositevisitDelegatingConstructorCallvisitFunctionExpressionvisitSetValuevisitFunctionReferenceisAnnotatedresolveScopedTypeParameterenterTypeParameterScopeleaveTypeParameterScopedeclarationSignatureacquireSymbolcreateLocalDelegatedPropertycreateFunctionWithLateBindingcreateExpressionBodycreateBlockBodycreateErrorDeclarationcreatePropertyWithLateBindingisFunctionReferencemarkSpecialFunctionsaddInlinedDeclaration	hasImport
preprocesshasData
removeDatacopyMetadataFromsetDatagetRawMetadataanalyzeFilesvisitPrefixOperationvisitAnnotated
getParentsgetChildrenAsArrayforEachChildrenforEachChildrenReturnListgetFirstChildExpression getFirstChildExpressionUnwrappedgetFirstChildgetLastChildExpressiongetChildNodesByTypemakeDiagnosticContext	makeLexerbuildLightTreeBlockExpressionbuildLightTreebuildLightTreeLambdaExpressionbuildUserTypeFromQualifierParts
visitForIngeneratedNestedClassifiersgeneratedMemberspartvisitNewregisteredExtensionsgetAllExtensionsconvertIndicesconvertThrowconvertThisExpressionconvertWhenConditionIsPatternconvertTryExpressionconvertCallExpressionconvertFinallyconvertLoopBodyconvertStringTemplate"convertBinaryWithTypeRHSExpressionconvertClassLiteralExpressionparseIfExpressionconvertLoopJumpconvertLambdaExpressionconvertReturngetAsFirExpressioncreateSimpleNamedReferenceconvertWhileconvertValueArgumentconvertCatchClauseconvertSuperExpressionconvertUnaryExpressionconvertBinaryExpressionconvertLoopOrIfBodyconvertWhenEntryconvertValueArgumentsconvertExpressionconvertSimpleNameExpressionconvertAnnotatedExpression"convertCollectionLiteralExpressionconvertQualifiedExpressionconvertDoWhile
convertForconvertArrayAccessExpressionconvertIfExpression"convertCallableReferenceExpressionconvertConstantExpressionconvertLabeledExpression convertShortOrLongStringTemplateconvertWhenExpressionconvertWhenConditionExpressionconvertWhenConditionInRangeextractAttributeFromAnnotationconvertAttributeToAnnotationwithDeclarationAttributeswithResolvePhaserenderElementWithTypeAsStringrenderContextsrenderElementAsStringunwrapIntersectionOverridesrenderMemberDeclarationClassrenderTypeArgumentsrenderVariance!renderAsCallableDeclarationString'visitQualifiedAccessExpressionReceiversrenderSupertypes&noAnnotationBodiesAccessorAndArgumentsvisitPostfixOperationvisitArrayAccessvisitConditionalvisitInvocationmarkedWithMetaAnnotationImplvisitObjectLiteralasSimpleLocationdeepCopy	findLabel
hasOwnNamedeclareNameUnsafefindOwnNamecheckIdentifierisDefinitelyLessSpecificpushSourceInfopopSourceInforegisterKindregisterKindsinstanceneedTransformSupertypescomputeAdditionalSupertypesgetTopLevelClassIdsgetNestedClassifiersNamesgeneratePropertiesgetTopLevelCallableIdsgetCallableNamesForClass$generateTopLevelClassLikeDeclaration"generateNestedClassLikeDeclarationgenerateFunctionsaddNewImplicitReceiversgetInstancesneedTransformStatuscollectAnnotationsendVisitprovideDeclarationsForClassprovideTopLevelDeclarationsvisitIfvisitFormatchHasAnnotatedWithregisterOwnersDeclarationsmatchNonIndexedDeclarationmatchParentWith	matchWith
matchUnder
visitBreakvisitDoWhilevisitReturn
visitWhilecomputeNamesGroupedByPackagegenerateClassLikeDeclarationgenerateTopLevelFunctionsgenerateTopLevelPropertiesvisitExpressionStatementvisitContinuevisitDebuggerbuildErrorNamedReferencebuildExplicitThisReferencebuildBackingFieldReferencebuildExplicitSuperReferencebuildProgramapplygetSupportTokensbuildDelegateFieldReferencebuildResolvedCallableReferencebuildResolvedNamedReferenceconvertFunctionBodyconvertAnnotationconvertValueParametersconvertPropertyDeclarationhasValueParametersfillCoroutineMetadataconvertBlockconvertUserTypeconvertFileAnnotationsContainer"convertDestructingDeclarationEntryconvertTypeArgumentscollectSegmentsconvertGetterOrSetterconvertTypeAlias convertConstructorDelegationCallconvertClassconvertTypeConstraintsconvertModifierListconvertConstructorInvocationconvertImportAlias%convertBlockExpressionWithoutBuildingconvertIntersectionTypeconvertBackingFieldconvertAnnotationEntryconvertPackageDirectiveconvertPrimaryConstructorconvertTypeParameterModifiersconvertInitializerListconvertDelegationSpecifiersconvertTypeProjectionconvertTypeParameterconvertFunctionTypeconvertFunctionDeclarationconvertExplicitDelegationconvertClassBodyconvertAnonymousInitializerconvertTypeModifierList
withOffsetconvertObjectLiteralconvertFileconvertSecondaryConstructorconvertBlockExpressionconvertAnnotationTargetconvertSetterParameterconvertTypeconvertEnumEntryconvertNullableTypeconvertReceiverTypeconvertImportDirectivesconvertTypeArgumentModifierListconvertFunctionTypeParametersconvertImportDirectiveconvertDestructingDeclarationconvertTypeConstraint*buildFromMissingDependenciesNamedReferencebuildResolvedErrorReference0buildPropertyFromParameterResolvedNamedReferencemetaAnnotatedbuildImplicitThisReferencebuildSimpleNamedReferencegetEnumClassfirtoResolvedConstructorSymboltoResolvedValueParameterSymboltoResolvedPropertySymboltoResolvedVariableSymboltoResolvedEnumEntrySymboltoResolvedSymboltoResolvedBaseSymboltoResolvedTypeParameterSymboltoResolvedFunctionSymbolgetBackingFieldReferencetranslateFunctionCallgetIntrinsicbothReceiversnoReceiversextensionReceiverdispatchReceivercanApply
canBeApplygetArgsconstructSafeCallIfNeeded constructSuspendSafeCallIfNeededvisitThrowExceptionInstructionvisitReadValuevisitReturnNoValuesetExpectedcalculatePublicSignaturesetterOrDefaultgetterOrDefaultfakeFileSignaturevisitInstructionWithNextvisitLoadUnitValuevisitNondeterministicJumpvisitReturnValue
visitMergevisitSubroutineExitvisitWriteValuevisitAccessInstructionvisitMarkInstructionbuildSingleExpressionBlock#visitVariableDeclarationInstructionvisitSubroutineSink(visitLocalFunctionDeclarationInstructionvisitUnconditionalJump
visitMagicvisitInstructionvisitCallInstructionvisitSubroutineEntervisitOperationvisitConditionalJump"transformControlFlowGraphReferencetransformResolvedImporttransformCallableDeclarationtransformDanglingModifierList.transformFromMissingDependenciesNamedReferencetransformTypeParameterRefsOwnertransformWrappedExpressiontransformResolvedErrorReferencetransformTargetElement"transformResolvedCallableReferencetransformClassLikeDeclarationtransformResolvable%transformLegacyRawContractDescription)transformContextReceiverArgumentListOwnertransformErrorPropertytransformThisReferencetransformBackingFieldReference"transformAnnotationArgumentMappingtransformTypeProjectiontransformControlFlowGraphOwner$transformResolvedContractDescription*transformResolvedReifiedParameterReferencetransformLabeltransformNamedReferencetransformErrorImporttransformDiagnosticHoldertransformFunctionTypeParametertransformPackageDirectivetransformTypeParameterReftransformContextReceiver.transformEnumEntryDeserializedAccessExpressiontransformResolvedNamedReferencetransformRawContractDescriptiontransformTypeParametersOwnertransformArgumentListtransformLoopJump transformElementWithResolveState#transformTypeProjectionWithVariance"transformResolvedDeclarationStatus#transformContractElementDeclarationtransformResolvedQualifiertransformCalltransformEffectDeclarationtransformStarProjection(transformNamedReferenceWithCandidateBasetransformDelegateFieldReferencetransformVariable!transformFileAnnotationsContainertransformPlaceholderProjectiontransformSuperReference'transformQualifiedErrorAccessExpression!transformClassReferenceExpressionresolveToInstructiongetElementValueinstructionForElementgetValueElements	getUsagescomputeMappingbuildWhenBranchbuildArgumentListbuildArrayOfCallbuildWhileLoopbuildLazyBlockbuildAnnotationbuildComponentCallbuildDoWhileLoopbuildGetClassCallbuildWhenExpressionbuildBreakExpressionbuildElvisExpressionbuildFunctionCallbuildLazyExpressionbuildCheckNotNullCallbuildReturnExpressionbuildExpressionStubbuildTryExpressionbuildAnnotationCallCopybuildTypeOperatorCallbuildResolvedQualifierbuildUnitExpressionbuildContinueExpressionbuildConstExpressionbuildThrowExpressionbuildSafeCallExpressionbuildVariableAssignmentbuildImplicitInvokeCallbuildSmartCastExpressionbuildAugmentedArraySetCallbuildEmptyExpressionBlockbuildEqualityOperatorCallbuildWhenSubjectExpressionbuildCheckedSafeCallSubjectbuildBinaryLogicExpressionbuildErrorAnnotationCallbuildNamedArgumentExpressionbuildElseIfTrueConditionbuildClassReferenceExpressionbuildStringConcatenationCallbuildDelegatedConstructorCallgetMissingCasesbuildAnnotationArgumentMappingbuildErrorResolvedQualifierbuildWrappedDelegateExpressionbuildComparisonExpressionbuildVarargArgumentsExpressionbuildAnonymousObjectExpression#buildQualifiedErrorAccessExpression!buildIncrementDecrementExpressionbuildIntegerLiteralOperatorCallbuildCallableReferenceAccess!buildLazyDelegatedConstructorCallbuildPropertyAccessExpression&buildResolvedReifiedParameterReferencebuildLambdaArgumentExpression buildAssignmentOperatorStatement buildAnonymousFunctionExpression*buildEnumEntryDeserializedAccessExpression0buildDesugaredAssignmentValueReferenceExpressionbuildSpreadArgumentExpressiontargetbuildThisReceiverExpressionbuildArraySetArgumentListbuildResolvedArgumentListbuildBinaryArgumentListbuildArgumentListForErrorCallbuildUnaryArgumentList!checkDefiniteInitializationInWhencollectDataloadIncrementalCacheMetadatacheckSyntaxErrorskeySetmapthrowExceptionenterSubroutinereturnValueenterLoopBodyunwrapLValuetoReferencetoResolvedCallableReferenceunwrapArgumentunwrapAndFlattenArgument	bindValuetransformStatementsIndexedreplaceFirstStatementunwrapSmartcastExpressionunwrapAndFlattenArgumentTobuildConstOrErrorExpressionexitTryFinally	enterLoopmagicexitSubroutinejumpOnFalsedeclareFunctioncreateGetterOrSetterdeclareEntryOrObjectgetLoopExitPointaddDeclarationsaddDefaultBoundIfNecessary
jumpOnTruebuildScriptbuildScriptCopycreateAnonymousObjectbuildPropertyCopybuildEnumEntry	buildFiledeclareParametergetLoopConditionEntryPoint!getDanglingTypeConstraintsOrEmptygetExplicitBackingFieldgetSubroutineExitPointbuildConstructorCopybuildImportbuildRegularClassbuildRegularClassCopybuildErrorImportbuildBackingFieldbuildErrorFunctionbuildAnonymousObjectbuildErrorPropertybuildTypeAliasbuildTypeAliasCopybuildValueParameterCopybuildContextReceiverCopybuildContextReceiverbuildDanglingModifierListbuildResolvedImportbuildTypeParameterCopybuildAnonymousFunctionbuildAnonymousFunctionCopybuildOuterClassTypeParameterRefbuildSimpleFunctionCopybuildSimpleFunctionbuildPropertyAccessorbuildPropertyAccessorCopy%buildConstructedClassTypeParameterRef buildDefaultSetterValueParameterbuildAnonymousInitializerbuildReceiverParameterCopybuildPrimaryConstructorcreateUnboundLabelnewValue!collectTowerDataElementsForScriptpredefinedOperationexactlyatLeastsimplefullasResolveStatenondeterministicJumpjumpToErrorrepeatPseudocodecreateLambdagetImplicitScopegetAvailableScopesaddNonLocalScopeaddNonLocalScopeIfNotNullsetLastLocalScopeaddContextReceiverGroupreturnNoValuegetBoundValue isRecursiveSingleFieldValueClass'substitutedUnderlyingTypeForInlineClass)unsubstitutedUnderlyingTypeForInlineClass'valueClassRepresentationTypeMarkersList!getValueClassUnderlyingParameters extractDeprecationInfoPerUseSite&getDeprecationsProviderFromAnnotationsgetDeprecationsProvider3getDeprecationsAnnotationInfoByUseSiteFromAccessorsgetDeprecationForCallSitegetDeprecationLevel$getDeprecationsProviderFromAccessors/buildDeprecationAnnotationInfoPerUseSiteStoragegetVersionFromArgument*extractDeprecationAnnotationInfoPerUseSiteisEnumConstructorconstructorsSortedByDelegationisAnnotationConstructorprimaryConstructorIfAny(isPrimaryConstructorOfInlineOrValueClassisInlineOrValueClasscontainsDefaultValuefromMap
combineMininheritableOnly
forUseSitecombinePreferLeftcheckForsetSealedClassInheritors0createContractDescriptionForSubstitutionOverridecomputeDeprecationInfoOrNullenterBlockScopecreateContextReceiverValuescollectImplicitReceivers collectTowerDataElementsForClassstaticScopeasTowerDataElement asTowerDataElementForStaticScope(getSingleCompatibleExpectForActualOrNulldeclareInlinedFunctionreadVariableexitBlockScopeattributesAccessorsymbolAccessordatatoDeprecationsProviderisJvmFieldAnnotationhasLowPriorityAnnotationgetKClassArgumentgetBooleanArgumenttoAnnotationClasstoAnnotationClassIdSafegetStringArrayArgumenttoAnnotationClassLikeSymbolhasAnnotationSafegetIntArgumentgetStringArgumentfindUseSiteTargetstoAnnotationClassLikeTypetoAnnotationLookupTaggetAnnotationByClassIdstoAnnotationLookupTagSafegetPrimitiveArgumentValuegetAnnotationByClassIdgetAnnotationsByClassIdtoAnnotationClassIdunwrapVarargValuemapAnnotationsWithClassIdTofindArgumentByName useSiteTargetsFromMetaAnnotation1suspendFunctionTypeToFunctionTypeWithContinuationshouldBeSerializedconvertToConstantValuesgetArgumentTypeconeType
valueProtoserializeAnnotationgetQualifiedClassNameIndexgetFqNameIndexloadUnithasConstantValuegetCallableMembersserializeTypeAliasshouldUseNormalizedVisibilityexitLoopBodyenterTryFinallyloadStringTemplate	getLengthaddExtensionOrNullgetTimeStampgetFileSystemserializeAnnotations	smartPlusreturnExpressionsrenderWithTypeisEnumEntriescopyWithNewSourceKindcopyWithNewSource!withFileAnalysisExceptionWrappingwhileAnalysing	setFileIdfindKDocStringgetInputStreamgetOutputStreamdeclarationFileIdsetKDocfillEffectProto serializeContractOfFunctionIfAnycontractExpressionProto
writeFlagscontractProtoeffectProtoconstantValueProtobufEnuminvocationKindProtobufEnumbuildFirConstantcontentsToByteArrayextractTypeloadContractgetWildcardextractVariable
getNotNull#toQualifiedPropertyAccessExpressionloadConstructorcreateContextReceiversForClassloadFunctionloadTypeAlias	toTypeRefloadPropertySetterloadPropertyGetterloadPropertyloadOldFlagscreateRootContextcreateForPackagechildContextcreateForClassattributesFromAnnotations%createSuspendFunctionTypeForBasicCasetypeRefcreateSuspendFunctionTypetypeParameterSymbolcomputeClassifier
typeSymboldeserializeClassToSymbolpropertiesInOrderaddSerializableIfNeededaddCloneForArrayIfNeededvisitEnumValuevisitUIntValuevisitUByteValuevisitDoubleValuevisitAnnotationValuevisitNullValuevisitStringValuevisitULongValuevisitLongValuevisitKClassValuevisitCharValuevisitByteValuevisitShortValuevisitErrorValuevisitIntValuevisitFloatValuevisitBooleanValuevisitUShortValuecomputeTopLevelDeclarationsrefreshAndFindFileByPathgetProtocolcomputeMemberDeclarations	splitPathfindFileByPathbindSessioncomputeTypeAttributesresolvedTypeFromPrototypeextractContextReceiversCounterrorTypeFromPrototypetryExpandClassIdcopyAsImplicitInvokeCallcreateDependencyModuleDatatoQualifiedAccess%isSuspendOrHasSuspendTypesInSignature3writeVersionRequirementDependingOnCoroutinesVersionserializeVersionRequirementshasInlineClassTypesInSignatureconstructorProtogetClassifierIdgetSimpleNameIndex/createAnnotationForCompilerDefinedTypeAttributewriteVersionRequirementcreateForLambdatypeAliasProto'writeVersionRequirementForInlineClassespropertyProtopackagePartProtofillFromPossiblyInnerTypetypeParameterPrototypeOrTypealiasPrototypeIdcreateAnnotationFromAttribute
classProtofunctionProtogetTypeParameterIdshouldSetStableParameterNameswriteCompilerVersionRequirement&createContextForIncrementalCompilationuseTypeTableshouldGenerateCodeFragmentwriteLanguageVersionRequirement,serializeVersionRequirementFromRequireKotlinvalueParameterProto computeNestedClassifiersForClassenumEntryProtogetAccessorFlagsnormalizeVisibilitycreateChildSerializer	typeProtocreateTopLevelmemberDeclarationsshouldGenerateClassloadClassAnnotationsloadTypeAliasAnnotationscreateArgumentMappingdeserializeAnnotationconstgenerateEntriesGettercreateStatusshouldAnnotateClassshouldGenerateScript nullableSessionComponentAccessorsessionComponentAccessorgetOwnerLookupTagisVariableOrNamedFunctioncontinueQualifierInPackageextractNonFatalDiagnosticsresolveRootPartOfQualifiercontinueQualifierisPrimitiveNumberTypeisPrimitiveUnsignedNumberType%isPrimitiveNumberOrUnsignedNumberTyperecordCallLookuprecordTypeLookuprecordTypeResolveAsLookupreportEnumUsageInWhentoEffectiveVisibilityUanalyzeLambdaAndReduceNumberOfCandidatesRegardingOverloadResolutionByLambdaReturnTypereduceCandidatesImplunwrapFakeOverridesOrDelegatedcontainingClassForLocalgetContainingClassLookupTagdispatchReceiverClassTypeOrNull"unwrapUseSiteSubstitutionOverridesunwrapSubstitutionOverrides!originalIfFakeOverrideOrDelegatedunwrapFakeOverridesoriginalIfFakeOverrideoriginalOrSelfcontainingClassLookupTag$dispatchReceiverClassLookupTagOrNullisVisibleForOverridingcontainingNonLocalClassisClassLikeVisiblecanSeePrivateMemberOf isAllowedToBeAccessedFromOutsideownerIfCompanioncanSeeProtectedMemberOfisSpecificDeclarationVisible%doesReceiverFitForProtectedVisibilitysourceFriendsDependenciessourceDependsOnDependenciesfriendDependenciesdependsOnDependencies"createCallableReferencesInfoForLHS&createErrorReferenceForSingleCandidateselectDelegatingConstructorCallinitTransformershouldGeneratePackagePart+resolveVariableAccessAndSelectCandidateImpl resolveDelegatingConstructorCallcollectAllCandidates2resolveOnlyEnumOrQualifierAccessAndSelectCandidate buildReferenceWithErrorCandidateresolveCallAndSelectCandidateresolveAnnotationCall'resolveVariableAccessAndSelectCandidate createCandidateForAnnotationCallcreateResolvedNamedReferencetoFirTypeProjectiontraverseDirectoriesInPackageloadPropertiesByCallableIdgetCallablesfindAndDeserializeTypeAliastryComputePackagePartInfosgetTypeAliasmayHaveTopLevelClassloadFunctionsByCallableIdwrapStringsfindMainClasscomputeMaskFromModifierListcomputeMaskmaskHasModifiercontentRootToVirtualFilegetStubTyperenderPropertyValuesfindExistingRootfindJarRootreportToMessageCollectorasStaterelativeToPackageforMultifileClassStubforFileFacadeStubdeserializeContractserializeContract#visitBooleanValueParameterReferenceremovePlaceholderfirstMismatchaddPlaceholderaddFinalcompileAndEvalcreateNestedClassId	indexFile
indexClassindexObjectindexFunctionindexPropertyindexTypeAliasserializeFileStubindexScriptindexAnnotationcreateFileStubdeserializeFileStubindexParametercompileToEvaluableaddKotlinSourceRootsgetSourceFilesserializeClassIddeserializeClassIdrenderPreamblerenderConclusionrenderUsagefrozenunfrozen	parseTailgetProjectionKindcanParseparseInternalArgumentconstantElementTypeToKindkindToConstantElementTypeisGettersetupCommonArgumentscreatePerformanceManagernotifyCompilationFinishednotifyRepeatcalculateClassIdcheckReservedYieldBeforeLambdacheckReservedPrefixWord	doExecutesingleElementgetDebugText	appendInn-createPrimaryConstructorParameterListIfAbsent createPrimaryConstructorIfAbsentgetClassKeywordgetClassOrInterfaceKeywordgetFunKeywordgetCompanionObjects	buildTextvisitTypeConstraintListrenderChildrenvisitDynamicTypevisitNullableTypevisitImportListvisitParameterListvisitClassBodyvisitModifierListvisitTypeArgumentListvisitTypeConstraintvisitUserTypevisitTypeParameterList visitConstructorCalleeExpressionvisitImportDirectivevisitSuperTypeListEntryvisitFunctionTypesuppressDiagnosticsInDebugModefindDocCommentdoSetReceiverTypeReferencesetReceiverTypeReferencecontentRange getTrailingCommaByClosingElementisInImportDirectiveisIdentifierisFunctionalExpressionnonStaticOuterClassessafeNameForLazyResolveparameterIndex"getPossiblyQualifiedCallExpressionisPlainWithEscapesisPlainvisibilityModifierTypeOrDefaultisImportDirectiveExpressiongetOrCreateParameterListisCallee
astReplacefindPropertyByNameisTypeConstructorReferencefindLabelAndCallunwrapNullabilitymodifierFromTokenSetisFirstStatementisTopLevelInFileOrScriptflatMapDescendantsOfTypeVisitorgetQualifiedElementSelector%collectAnnotationEntriesFromStubOrPsigetContentRangeisProtectedisDotSelectorgetAssignmentByLHScollectAnnotationEntriesFromPsi getQualifiedElementOrCallableRefforEachDescendantOfTypeVisitormodalityModifierTypegetFileOrScriptDeclarations!isContractDescriptionCallPsiCheckaddTypeArgumentisDoubleColonReceivergetReceiverExpressionfindAssignmentreferenceExpressionquoteIfNeededgetQualifiedElementisExtensionDeclarationvisibilityModifier!getQualifiedExpressionForSelectortopParenthesizedParentOrMe'getQualifiedExpressionForReceiverOrThissafeFqNameForLazyResolveasAssignmentisTopLevelKtOrJavaMembercanPlaceAfterSimpleNameEntrygetLabeledParentblockExpressionsOrSinglegetOutermostParenthesizerOrThisgetCallNameExpressionfindFunctionByName'collectAnnotationEntriesFromStubElementgetOrCreateValueArgumentList!getQualifiedExpressionForReceiver'getQualifiedExpressionForSelectorOrThisisLambdaOutsideParentheses.getTopmostParentQualifiedExpressionForSelectoreffectiveDeclarationsisPropertyParameterisDotReceiverisContextualDeclarationgetTrailingCommaByElementsListmodalityModifierisContractPresentPsiChecklastBlockStatementOrThisvisibilityModifierTypeisSingleQuoted	isPrivateisPackageDirectiveExpressiongetBinaryWithTypeParentexecutableScriptFileNamefindChildByTypeOrClassfindImportByAliasgetNameForGivenImportAliasfindChildrenByTypeOrClassshouldChangeModificationCounthasTopLevelCallablesfindAliasByFqNamegetStubgetTypeAliasKeywordaddModifierListsetModifierListsortModifierswarningleavesgetTexttrimWhiteSpaces getLastParentOfTypeInRowWithSelfgetParentOfTypesAndPredicategetIfChildIsInBranchfindDescendantOfTypegetParentOfTypecontainsInsidenextLeafprevLeafanyDescendantOfTypegetLastParentOfTypeInRowgetTextWithLocationhasValueModifierclosestPsiElementgetTopmostParentOfTypenextSiblingOfSameTypegetChildOfTypegetChildrenOfTypeforEachDescendantOfType
enterLabelgetOutermostParentContainedInsiblingschildrenfindFirstLeafWhollyInRange%unwrapParenthesesLabelsAndAnnotationsprevSiblingOfSameTypecollectDescendantsOfTypegetParentOfTypes2 getNextSiblingIgnoringWhitespacecreateSmartPointergetParentOfTypeshasExpectModifierhasSuspendModifierhasFunModifierparentsstartsWithCommentgetStartOffsetIn+getPrevSiblingIgnoringWhitespaceAndCommentsreplaceFileAnnotationListgetParentOfTypeAndBranchgetParentOfTypes3hasActualModifier
isInsideOfgetParentOfTypeAndBranches getPrevSiblingIgnoringWhitespace+getNextSiblingIgnoringWhitespaceAndCommentselementsInRangecollectDescendantsOfTypeTogetIfChildIsInBranches+unwrapParenthesesLabelsAndAnnotationsDeeply	exitLabelnameForReceiverLabelhasParentheseshasConstructorKeywordcheckPlatformSpecificSettingsgetEqualsTokengetTypeConstraintListcheckIrSupportconfigureLanguageFeaturesconfigureAnalysisFlagsdefaultLanguageVersiongetTypeConstraintsgetTypeParameterListgetReceiverTypeReferencegetNameAsSafeNameloadXIncludeReferencehasDeclaredReturnTypegetNameAsNameremoveSuperTypeListEntryaddDeclarationAftergetSuperTypeListresolveModuleFilegetAnonymousInitializershasSecondaryConstructorsaddDeclarationBeforeresolvePathgetContextReceiverList"getPrimaryConstructorParameterListaddSuperTypeListEntryisEquivalentTogetDeclarationKeywordgetArgumentExpressiongetArgumentNamegetSpreadElementisNamedKtPsiFactoryunpackFunctionLiteraldeleteSemicolonappendExpressionsappendTypeReferenceappendChildRangeappendFixedTextappendNonFormattedTextappendExpression
appendNameimportsAsImportListsetThisTypegetSuperTypegetOriginalContextgetForcedResolveScope
getContextgetVisibilityCheckerimportsToStringgetExceptionHandlerinitImportsgetViewProvidergetResolveScope
isPhysicalgetThisTypeaddImportsFromStringforceResolveScopesetExceptionHandlersetVisibilityCheckersetSuperTypegetContextContainingFilegetOrCreateBodyfindExpressionUndercomputeNameAsStringtypeReferencelabelNameAsNametargetLabelgetLeftTypeRefgetTypeArgumentsAsTypesgetRightTypeRefprocessPatterncreateByPatterncreateDeclarationByPattern'createDestructuringDeclarationByPatternbuildValueArgumentListbuildExpressioncreateExpressionByPattern createValueArgumentListByPatternbuildDeclarationbuildDestructuringDeclarationbuildByPatternisThisWithoutLabel getScopeForClassHeaderResolution%createUnsubstitutedPrimaryConstructor&getScopeForConstructorHeaderResolution,getScopeForStaticMemberDeclarationResolutionreadgetDeclaredCallableMemberschecksumflushensureCompatible&getScopeForMemberDeclarationResolutionisExcludedFromSubSearch
descriptor*getScopeForCompanionObjectHeaderResolution getScopeForInitializerResolutionimportClasstoDisposablegetFileClassessubtreeChangedgetObjectKeywordcontextReceiverstypeReferencesgetContractEffectstoConeKotlinTypegetOrCreateConstructorKeywordcreateEmptyContainer)removeRedundantConstructorKeywordAndSpacegetTargetLabelgetLabelNameAsNamegetDelegationCallgetDelegationCallOrNull)replaceImplicitDelegationCallWithExplicithasImplicitDelegationCallgetModuleDataForClassgetChildExpressionsByStubannotationEntryVisitornamedDeclarationVisitorwhenExpressionVisitorcallExpressionRecursiveVisitorwhenExpressionRecursiveVisitorcallExpressionVisitor#qualifiedExpressionRecursiveVisitor"binaryWithTypeRHSExpressionVisitorclassOrObjectVisitorlambdaExpressionVisitor$simpleNameExpressionRecursiveVisitorreturnExpressionVisitor#referenceExpressionRecursiveVisitorexpressionRecursiveVisitorvalueArgumentListVisitorifExpressionVisitorclassVisitorpostfixExpressionVisitor propertyAccessorRecursiveVisitordotQualifiedExpressionVisitor namedDeclarationRecursiveVisitorprimaryConstructorVisitor lambdaExpressionRecursiveVisitorpackageDirectiveVisitorparameterRecursiveVisitorpropertyRecursiveVisitor&dotQualifiedExpressionRecursiveVisitor prefixExpressionRecursiveVisitorenumEntryVisitorpropertyVisitordeclarationRecursiveVisitorbinaryExpressionVisitornamedFunctionRecursiveVisitorparameterVisitor"primaryConstructorRecursiveVisitormodifierListRecursiveVisitorclassRecursiveVisitorreferenceExpressionVisitor packageDirectiveRecursiveVisitorsimpleNameExpressionVisitor(destructuringDeclarationRecursiveVisitorifExpressionRecursiveVisitorvalueArgumentVisitor binaryExpressionRecursiveVisitorclassOrObjectRecursiveVisitorprefixExpressionVisitormodifierListVisitorqualifiedExpressionVisitorannotationEntryRecursiveVisitorenumEntryRecursiveVisitordestructuringDeclarationVisitorpropertyAccessorVisitorclassInitializerVisitortypeReferenceRecursiveVisitorexpressionVisitordelegatedSuperTypeEntrydeclarationVisitorvalueArgumentRecursiveVisitornamedFunctionVisitorsetReceiverExpressionfindColonColongetAnnotationUseSiteTarget	isOneLinegetOffsetInHostgetRelevantTextRangeaddItemAfteraddItemBeforeisBuiltinTypetoConeTypeProjectiongetApproximatedTypeisConventionOperatorfindCommonSuperTypegetReferencesgetReferencesFromProvidersgetOriginalElementgetNavigationElementcalcReferencedElementgetReferencedNameImplgetReferencedNameAsNameImpl getReferencedNameElementTypeImplcreateNameIdentifierIfPossiblecreateDestructuringParametercreateTypeArguments#createSimpleNameStringTemplateEntrycreateEnumEntryInitializerListcreateParameterListreceivercreateNameIdentifier
createStarcreateBlockStringTemplateEntry
contextualcreateValKeywordcreateIfcreateCallArgumentscreateFunctionTypeReceivercreateLambdaParameterListIfAnycreateCommentcreatePackageDirectiveIfNeededcreateIdentifiercloseParamscreateParameter
bodyPrefixcreateExpressionCodeFragmentcreateFileAnnotationcreateClassKeyword	baseClasscreateConstructorKeywordcreateWhenConditioncreateWhitespaceAndArrowcreateLabeledExpressioncreateStringTemplatecreateSimpleNamecreateBlockCodeFragmentappendInAngleBracketscreateWhiteSpaceinitializercreateImportDirectivecreateBlockcreateColoncreateLambdaExpressioncreateWhenEntrygetStatementscreateEmptyModifierListcreateExpressionlazyBodycreareDelegatedSuperTypeEntryappendImportcreateSingleStatementBlockcreateTypeParameterListcreateAnnotationEntrygetterExpressioncreateTypeIfPossible	createDot!createCallableReferenceExpressioncreateTypeCodeFragmentcreateAnalyzableFilecreateExpressionIfPossiblecreateModifierparamcreateSecondaryConstructorcreateSemicolondoCreateExpressiondoCreateFilecreatePackageDirectivecreatePhysicalFilecreateImportDirectivescreateEmptyBodycreateNewLinetypeConstraintscreateFunctionTypeParametercreateDestructuringDeclarationcreateOperationNamegetBaseExpressioncreatePropertySetter
typeParamssuperDelegationcreatePropertyGettercreateCommacreateLambdaParameterListplaceKeyword&createFileAnnotationListWithAnnotationcreateEmptyClassBodynoReturnTypecreateLoopParametercreateThisExpressioncreateVarKeywordcreateArgumentcreatePropertyDelegatecreateSuperTypeCallEntry%createPrimaryConstructorWithModifierscreateObjectcreateFileWithLightClassSupportcreateSuperTypeEntrywrapInABlockWrappermodifiercreateDeclarationcreateEQ createLiteralStringTemplateEntry
getElementgetCalleeByLambdaArgumentnormalizeRangeisReferenceToImportAliasisConstructorOf!extractAllSpecialKindsForFunctioncanBePsiMethodReferencegetKtReferenceMutateServicemultiResolveisSoft(extractAllSpecialKindsForFunctionTypeRefisAccessorName#extractSingleSpecialKindForFunctionregisterProviderregisterMultiProvidergetReferencesByElementreadWriteAccess1extractSingleExtensionKindForDeserializedConeTyperegisterReferenceProvidersgetValueIfComputed*readWriteAccessWithFullExpressionByResolvegetBracketRangeresolveAnnotationCalleeprepareSubstitutiongetRangefindTagsByNamefindTagByNameisReferenceToViaExtensiongetImportAliasgetLinkTextRangegetLinkTextgetTagIfSubjectgetTokenTypeisNameparseMarkdownLink%eraseInflexibleBasedOnClassDescriptor	eraseTypefindByTagName	markIsRawwithFlexibilityrefinegetContainingDocgetContainingSectiongetNameTextRangegetQualifiedNameAsFqNamegetQualifiergetNameText
calcIndent
hasSubjectchildrenAfterTagNamegetSubjectLinktrimCommonIndentmapKotlinClasstransformJavaClassifierTypetransformArrayTypecomputeSimpleJavaClassifierTypeisConflictingArgumentForcomputeRawTypeArgumentstransformToTypeProjectioncomputeTypeConstructortransformJavaTypecomputeArgumentscreateNotFoundClassisParameterNumberSuitsForMainisMainWithParameter'hasAnnotationWithExactNumberOfArgumentsgetMainFunctionisMainReturnTypegetJVMFunctionNamecreateMainFunctionDetectorgetSubPackageFqNamesgetFacadeNameForPartName createTypeForMissingDependenciesresolveFromEnumValueresolveFromAnnotationresolveAnnotationArgumentresolveFromArrayresolveFromJavaClassObjectType!flatMapJavaStaticSupertypesScopes&getStaticFunctionsFromJavaSuperClassesprocessBoundsWithoutCyclesresolveUpperBoundscomputeNotEnhancedBoundscreateCacheWithPostComputewithArgumentsextensionReceiverTypecanSynthesizeEnumEntriesForcontextReceiver
isExcludedprocessCallablesgetNestedClassSymbolnestedClassifierScopedeclaredMemberScopefindClassifierresolveKotlinBinaryClassdefinitelyDoesNotContainNamecreateSubstitutionOverrideField"createSubstitutionOverrideFunction"createSubstitutionOverridePropertywasContentRequested!resolveMethodToFunctionDescriptorcreatePropertyDescriptorcomputeMethodReturnTypemayContainNamecomputeDescriptorsisOverriddenFunctiongetPropertyTyperesolvePropertyisOverriddenPropertyretainMostSpecificMethodsisNotTopLevelClasschildForClassOrPackagereplaceComponentscomputeNewDefaultTypeQualifierschildForMethod copyWithNewDefaultTypeQualifierswasScopeContentRequested'getPurelyImplementsFqNameFromAnnotation
updateNamecomputeTypeParameterBoundcomputeTargetTypecreateAnnotationAndVisitortranslatePath&searchMethodsByNameWithoutBuiltinMagicdoesOverride*resolveRecordComponentToFunctionDescriptorobtainOverrideForSuspend&hasSameJvmDescriptorButDoesNotOverride,searchMethodsInSupertypesWithoutBuiltinMagic!isVisibleAsFunctionInCurrentClassgetPropertiesFromSupertypesaddPropertyOverrideByMethoddoesOverrideRenamedDescriptorcreateDefaultRecordConstructorcomputeAnnotationProperties!createPropertyDescriptorByMethodsaddFunctionFromSupertypes;createOverrideForBuiltinFunctionWithErasedParameterIfNeeded6createHiddenCopyIfBuiltinAlreadyAccidentallyOverridden)createPropertyDescriptorWithDefaultGettergetConstructorVisibilitydoesClassOverridesProperty,obtainOverrideForBuiltinWithDifferentJvmName!createRecordConstructorParameterscreateDefaultConstructor7obtainOverrideForBuiltInWithErasedValueParametersInJavaaddOverriddenSpecialMethods%createAnnotationConstructorParametersgetFunctionsFromSupertypesaddAnnotationValueParametercreateRenamedCopyprocessComposite.processDirectOverriddenPropertiesWithBaseScopeconvertConstValueparseTypeStringparseVarianceparseDimensionsparseClassOrTypeVariableElementparseClassifierRefSignatureparsePrimitiveTypeparseTypeVariableRefSignatureparseTypeParameterparseTypeParametersDeclaration
mapAsmType#parseParameterizedClassRefSignature parseTypeWithoutVarianceAndArray-processDirectOverriddenFunctionsWithBaseScopeisPlatformSpecificExported(processClassifiersByNameWithSubstitutionisStubTypeForBuilderInference
isStubTypeconvertCanonicalNameToQNamesplitCanonicalFqNamevisitAnnotableParameterCount#convertInternalNameToClassifierTypeprocessValuevisitRecordComponentvisitPermittedSubclassparseClassSignatureisNullableAnyparseMethodDescriptionparseMethodSignaturebuildLazyValueForMapisSuperWildcardcaptureFromArgumentsisMethodWithOneObjectParameterisObjectMethodInInterfaceisObjectMethodgetAnnotationOwnerPsiassertNotLightClassclassifierTypesmethodsfieldsnamedAnnotationArgumentsnullabilityAnnotationsclassespackagesaddTypeParameterscopyForMember1convertNestedClassInternalNameWithSimpleHeuristicresolveByInternalNamemapInternalNameToClassIdpropagatedToOverridesfindInPackageFragmentsgetClassResolvedFromSourceconvertLiteralValuemapJavaTargetArgumentByNamereportCannotInferVisibilityreportIncompleteHierarchypreprocessFilemapOrResolveJavaAnnotationfindMappedJavaAnnotationisFromJvmPackagePartgetParentJavaStaticClassScopecopyValueParametersgetImplClassNameForDeserializedtoDescriptorVisibilityhasErasedValueParametersisJspecifyEnabledInStrictModecompositeAnnotationsOrSinglegetEnhancedNullability
throwErrorisGetterNameisSetterName+getSyntheticMethodNameForAnnotatedTypeAlias*getSyntheticMethodNameForAnnotatedPropertystartsWithIsPrefixshouldEnhanceprepareReplacementsubstitutionResultenhancementenhanceSignatureenhanceTypeParameterBoundsgetDefaultAnnotationsenhanceSignaturescontainsFunctionNcomputeQualifiersForOverrideenhanceInflexibleenhancePossiblyFlexiblenotNullTypeParameterreportClassonCompletedAnalysis	childSafepropertyNamesByAccessorNamepropertyNamesBySetMethodNamepropertyNameBySetMethodNamepropertyNameByGetMethodName(getPropertyNamesCandidatesByAccessorNamesetMethodName"propertyNameFromAccessorMethodNamepossibleGetMethodNames,getPropertyNameCandidatesBySpecialGetterNamefindByDescriptioncreateJavaClassFinderflattenTree extractQualifiersFromAnnotations
supertypesextractQualifierscomputeIndexedQualifiersmostSpecific	toIndexedhasBuiltinSpecialPropertyFqNamefqNameListOfgetPurelyImplementedInterfaceimplementedWith2getDefaultMigrationJsr305ReportLevelForGivenGlobalgetDefaultJsr305SettingsgetReportLevelForAnnotation"getDefaultReportLevelForAnnotationsetScope+getDefaultValueForOverriddenBuiltinFunctionfunction	parameterintersectTypesisPrimitiveCompareTo8isIncompatibleInAccordanceWithBuiltInOverridabilityRulesmapValueParameterType3doesJavaOverrideHaveIncompatibleValueParameterKindsisFromJavaOrBuiltins+getOverriddenBuiltinReflectingJvmDescriptor&getOverriddenBuiltinThatAffectsJvmName%hasRealKotlinSuperClassWithOverrideOfgetOverriddenSpecialBuiltinresolveTypeQualifierAnnotationresolveJsr305CustomStateallIfTypeUseresolveDefaultAnnotationStateisTypeUseAnnotation%resolveTypeQualifierDefaultAnnotation(resolveQualifierBuiltInDefaultAnnotationresolveJsr305AnnotationStateextractMutabilityextractNullabilityknownNullabilityloadModuleMapping)getJvmModuleNameForDeserializedDescriptorfindClassDatafindKotlinClassisIntegerLiteralTypeConstructorcaptureStatusmapBuiltInTypeshouldUseUnderlyingTypecomputeUnderlyingType#getPackageFragmentForMultifileClass$isContainedByCompiledPartOfOurModulewriteArrayTypewriteJvmTypeAsIswriteArrayEndwriteTypeVariableclearCurrentTypegetPackagePartFqNamegetDefaultPartFqNamedecapitalizeAsJavaClassNamegetPathHashCodegetFilePartShortNamegetFileNameByFacadeNamegetFilesWithCallablesclassFileNamefromMethodNameAndDescfromJvmMemberSignature
fromMethod$fromMethodSignatureAndParameterIndexfromFieldNameAndDescmapToJvmTypeforceSingleValueParameterBoxingcomputeJvmDescriptorWithoutNameappendErasedTypegetOptimalModeForSignaturePartgetOptimalModeForValueParametergetOptimalModeForReturnTypeescapeClassNamejavaLang
inJavaUtilinClassjavaFunctionjavaUtiljvmDescriptor
inJavaLang%getPredefinedFullInternalNameForClasspreprocessTypetoGenericArgumentModewrapInlineClassesModedontWrapInlineClassesMode.createWithConstantDeclarationSiteWildcardsModemapTypeAliasesgetModeForReturnTypeNoGenericrenderFileReadingErrorMessagelogFileReadingErrorMessagegetFileContentsgetById!getContainingKotlinJvmBinaryClass$makeDeserializationComponentsForJava#makeLazyJavaPackageFragmentProvidergetPropertySignaturecomputeInternalNamevisitMembers!visitAnnotationMemberDefaultValuegetRepresentativeBinaryClassgetContainingBinaryClass&getKotlinBinaryClassOrClassFileContent,createBinaryClassAnnotationAndConstantLoadertoKotlinJvmBinaryClassfindMetadataPackageParts getBuiltinFunctionNamesByJvmNamecheckParameterdelegateFieldNamepropertyDelegateNamecontextReceiverNamecapitalizeAsJavaClassNamegetPackagePartClassNamePrefixgetScriptNameForFilesanitizeAsJavaIdentifiersubscribeOperatorIndexisSafeIdentifiersafeIdentifiergetPrimitiveArrayTypeloadAnnotationsAndInitializerscaptureFromExpressionloadAnnotationDefaultValueloadConstantFromPropertyloadPropertyConstantjsIdcreateModuleDataasSingleFqNameasFqNameForDebugInfo'findClassWithAnnotationsAndInitializersgetSpecialCaseContainerClass	arrayTypeloadCallableAnnotationsisImplicitRepeatableContainer!findClassAndLoadMemberAnnotations$loadPropertyDelegateFieldAnnotationsgetCachedFileContentloadEnumEntryAnnotationstoBinaryClassisSubpackageOfcallableIdForConstructorparentOrNullfindValueForMostSpecificFqnameisValidJavaFqNameisOneSegmentFQN	isChildOf	classDesctypeDescunknownSignature
methodDescmakeRawValueVersion
internalIdenumsIdjavaAnnotationId	reflectIdprimitiveArrayId
javaLangIdcollectionsIdtypeConstructorbaseIdjvmIdrangesIdjvmInternalId
unsignedId
inverseMapinternalIrIdcoroutinesIdannotationIdconcurrentIdreadClassDatacreateKotlinPackagePartScopesetComponents
parseProtocheckAllgetExceptionMessage!allValuesThreadUnsafeForRenderinggenerateAnyNullableAccessorgenerateAccessorgenerateNullableAccessorforEachScopeflatMapScopesgetFromAllScopeslistOfNonEmptyScopesconcat%getFirstClassifierDiscriminateHeaders	isNothinggetUnsubstitutedUnderlyingTypebfsincDecCheckForExpectClassgetCurrentIndentInUnitsgetIndentUnittoUpperCaseAsciiOnlycapitalizeFirstWorddecapitalizeSmartForCompilerisLowerCaseCharAtcapitalizeAsciiOnlyisUpperCaseCharAtdecapitalizeSmartdecapitalizeWithUnderscorestoLowerCaseAsciiOnlydecapitalizeAsciiOnly*buildNotFixedVariablesToPossibleResultTyperemoveComponentisValidOperator%wrapIntoFileAnalysisExceptionIfNeededreportFileMismatchisInsideisDefinitelyNotInsideFile+wrapIntoSourceCodeAnalysisExceptionIfNeeded)withSourceCodeAnalysisExceptionUnwrappinggetClassIdentifierfindImplementationsInDirectory	parseLinefindImplementationsloadImplementations
parseLinesfindImplementationsInJarcreateDiagnosticMessageleaveCounterenterCounterisNullableNothingensurecontainingNonLocalDeclarationfindImplementationFromInterface&getNonPrivateTraitMembersForDelegationextractValueincrementTimesetTimeCounterEnabledcurrentTimeresetAllCounters#shouldIjPlatformExceptionBeRethrowngetCallStackintervalUsefulTimeexitExcludedMethodpeekOrFalseisEnteredCounterenterExcludedMethodreadVarInt32	readUByte
readUInt64readVarUInt7readSignedLeb128readUnsignedLeb128readVarUInt32readVarUInt1readVarInt64readVarInt7isValidWatIdentifierCharsanitizeWatIdentifier	toWatDatasameLineListnewLineList	limitSizeisMultiFieldValueClasscalculateIdsappendReferencedTypetoWatStringmaybeSubTypeappendIdxIfNotZeroappendOffsetappendRefTypeappendImportPairf64StrappendLocalf32StrappendAlignappendWasmElementappendStructField isStubTypeForVariableInSubtyping
appendCode
appendExprdeserializeToplevelClassconvertPlatformVisibilitygetClassSymbolByIdappendFiledTypegetLocalFunction!withVarUInt32PayloadSizePrependedappendSectiongetDelegatedPropertyputParameterputDelegatedPropertyappendVectorSizeputLocalFunctionvisitParentgetEffectiveParentappendTextSectiongetHeapTypereferencesTypeDeclarationsreferencesTypeDeclarationfunByIdxtagByIdxreadTypeDeclarationreadTagreadRefTypereadValueTypereadBlockType	mapVectorreadVarUInt32AsIntmemoryByIdx
readLimitsreadValueTypeImplforEachVectorElementbyIdx	elemByIdxparseModulereadInstruction
tableByIdxglobalByIdx
NoLocationwriteVarInt64writeVarInt32writeUInt64
createTempwriteSignedLeb128writeVarUInt1writeUnsignedLeb128writeVarUInt7writeVarInt7pureStacklessInstructionisInCfgNodebuildWasmExpressionisOutCfgNodegetCurrentEatLevel
KFunctionN	FunctionNreflectByNameKSuspendFunctionNSuspendFunctionNbuildStructNew	buildBrIfbuildConstI64buildGetGlobalbuildConstI32	buildLoopbuildSetGlobalbuildEndbuildConstF64	buildDrop	buildElsebuildInstrWithNoLocationbuildRefTestStaticbuildRefNullbuildGetLocalcommentGroupStartbuildBrbuildUnreachablebuildStructGetbuildSetLocalbuildIfbuildRefCastNullStaticbuildCallIndirectcommentPreviousInstrcommentGroupEndbuildConstF32buildBrInstrbuildConstI32SymbolbuildStructSetisParameterTypeSupportedisReturnTypeSupportedhasValidJsCodeBodyasGcCountMapasGcTimeMapasMapMs	addTimeNs	addTimeMsisTypeSupportedInJsInteropstartMeasureGcendMeasureGcconvertToIrCallapplyParentFromStackTotraversetoIrTypetopinitContainingClassAttrcurrentDispatchReceiverType	bindLabelprintWithNoIndentprintLineSeparatorprintIndentprintMapprintToaddRow
formatSize
formatTimesendDatacheckResponseAndLogrelativizeIfPossiblepathsAsStringgetTypeStatementprintBuildTimesprintGcMetricsprintTaskLogprintBuildInfoprintTasksLogprintMetricsprintBuildPerformanceMetricsreportBuildStatInFileprintTaskOverviewprintSizeMetricprintBuildAttributesprintBuildReportisModuleMappingFileunwrapVariablereplaceVariable%getRealVariableWithoutUnwrappingAliasdeserializeFromPlainTextserializeToPlainTexttransformClassToPropertiesMapjoinToReadableStringgetLocalVariablefindFieldIncludingSupertypesremoveBeingResolvedpathSegmentsbeingResolvedtryToResolvefindByFqNamestartstaticImportsimportsevaluateBinaryExpressionevaluateValueevaluateUnaryExpressionfindVisibleInnerOrNestedClassgetJavaClassFromPathSegments
findImportfindInnerOrNestedfindJavaOrKotlinClasscreateMockKotlinClassifiercreateClassifierasteriskImportsenclosingClassesstaticAsteriskImportsfilterTypeAnnotationscreateAnnotationArgumentresolveArgumentValuecreateAnnotationArgumentsdeserializeMapFromStringcompareIsChangedobtainReasonForRebuildserializeArgsToStringserializeMapToStringisEnumValuesOrValueOfarrayAnnotationArgumentssetUTF8Encoding	putOptionNonLocal getPackageAnnotationsFromSourceshasKotlinPackagefindClassesFromPackagefindPackageInSymbolsfindClassInSymbolstoVirtualFilefindSubPackagesresolveFieldcreateCommonClassifierType!makeOutputDirectoryClassesVisibleisDeprecatedsetClassPathForCompilationisDeprecatedInJavaDocImplicit!visitWhenBranchConditionEnterNodevisitBinaryAndExitNode#visitBinaryAndEnterRightOperandNodevisitEnterSafeCallNodevisitStubNode visitBinaryOrExitLeftOperandNodevisitBinaryOrEnterNodevisitJumpNode!visitBinaryAndExitLeftOperandNodevisitBlockExitNode"visitMergePostponedLambdaExitsNodevisitDelegateExpressionExitNodevisitTypeOperatorCallNodevisitFinallyProxyEnterNodevisitLoopBlockExitNodevisitBinaryOrExitNodevisitTryExpressionEnterNodevisitCatchClauseEnterNodevisitBinaryAndEnterNodevisitSplitPostponedLambdasNodevisitTryMainBlockExitNodevisitFinallyBlockExitNodevisitFinallyBlockEnterNodevisitCatchClauseExitNodeunresolvedTypeAsItIscontainsErrorTypeInParameterscreateErrorTypeConstructorisErrorClasscreateErrorTypeWithArgumentsisUninferredTypeVariablecontainsUninferredTypeVariablecreateErrorScope!visitLocalFunctionDeclarationNodegetParamvisitBlockEnterNodevisitTryMainBlockEnterNodecreateSubstitutedCopyrequireOrDescribe visitWhenSyntheticElseBranchNodevisitComparisonExpressionNodevisitExitSafeCallNodevisitLoopConditionEnterNode(prepareArgumentTypeRegardingCaptureTypesvisitResolvedQualifierNodefindCorrespondingSupertyperefineTypesdependsOnTypeParametersdependsOnTypeConstructorcreateClassicTypeCheckerStatevisitEqualityOperatorCallNode$hasSupertypeWithGivenTypeConstructorvisitFinallyProxyExitNodevisitLoopBlockEnterNode visitWhenBranchConditionExitNode$visitAnonymousFunctionExpressionNodevisitConstExpressionNode!visitDelegatedConstructorCallNodevisitWhenBranchResultExitNode"visitBinaryOrEnterRightOperandNodeintersectWrappedTypescomputeEffectiveVariance visitStringConcatenationCallNodeextractTypeOfvisitCheckNotNullCallNodevisitWhenExitNodevisitTryExpressionExitNodetransformToNewTypeisStrictSupertype%intersectTypesWithoutIntersectionTypefilterTypeshasNoInferInternal!errorSupportedOnlyInTypeInference&makeDefinitelyNotNullOrNotNullInternalhasExactInternalvisitWhenBranchResultEnterNodevisitPostponedLambdaExitNode0makeSimpleTypeDefinitelyNotNullOrNotNullInternalvisitWhenEnterNodevisitThrowExceptionNodevisitLoopConditionExitNodeinitializeSupertypescreateTypeInfo
noTypeInfo#isPossiblyAmbiguousUnqualifiedSuper,resolveUnqualifiedSuperFromExpressionContextisCallingMethodOfAnyWithSuperreplaceJumpFlowInforeplaceDataFlowInforeplaceJumpOutPossibleresolveDefaultValuecomputeUnsafeReturnTypecheckTypesForReturnStatementsisSuspendFunctionTypecollectReturnscreateFunctionLiteralDescriptorisBuiltinFunctionalType)computeReturnTypeBasedOnReturnExpressionstoAnnotations	isMyClassinsideMyClassgetResolutionScopeForClassrefineBareType checkSenselessComparisonWithNull'replaceArgumentsByExistingArgumentsWith!expandIntersectionTypeIfNecessaryisUnresolvedTypeconstituentTypesshouldBeUpdatedisAnyOrNullableAnyonSuccessfulLevel replaceArgumentsByParametersWithequalTypesOrNulls$extractTypeParametersFromUpperBoundsisArrayOfNothinggetImmediateSuperclassNotAnyisNotNullThrowableisNothingOrNullableNothing*containsTypeProjectionsInTopLevelArgumentscontainsErrorisDefaultBoundinterceptTowerGroupcannotBeReifiedboundClosureisBooleanOrNullableBooleannullabilitymakeNotNullableprocessObjectsByNameisDefNotNullStubTypedefaultProjectionsprocessFunctionsByNameunCaptureProjectionisTypeAliasParametercontainsTypeAliasParameterscontainsSelfTypeParametercreateProjectioncallableScope+upperBoundedByPrimitiveNumberOrNullableTypeisPrimitiveNumberOrNullableTypeclassifierScopecontainsTypeParameterrequiresTypeAliasExpansionunCaptureTopLevelTypereplaceArgumentsWithNothingasTypeProjectionhasTypeParameterRecursiveBoundscontainsTypeAliasesprocessDeclaredConstructorsisNullabilityMismatchaddDiagnostic!chooseMaximallySpecificCandidatesisUnsignedNumberTypeimmediateSupertypesgetCallableNames
hasWriters'reportDeprecatedDefinitelyNotNullSyntaxprocessPropertiesByNamegetClassDescriptorIfAnyresolveInitializer1resolveLocalVariablesFromDestructuringDeclarationgetExpectedTypeForComponent0defineLocalVariablesFromDestructuringDeclaration"resolveComponentFunctionAndGetTypecreateForExpressiontopMostNonClassDeclarationgetVisitorByVariablecreateForDeclarationvisitTryBlockvisitCatchBlocks*clearDataFlowInfoForAssignedLocalVariables"getOuterDataFlowInfoForDeclaration getResolutionScopeForDeclarationgetLabelNamesIfAnygetExpressionUnderLabelgetContainingCallExpressiongetReceiverParameterDescriptorresolveControlLabelgetCallerNamereportLabelResolveWillChangeresolveNamedLabellabelResolutionFailedlabelResolutionSuccessgetElementsByLabelNamegetLabelForFunctionalExpressionresolveThisOrSuperLabelcreateUnresolvedTypegetEffectiveVariancehackForTypeIntersector	superposeoppositeallowsPositionreviseExpectedType6isPrimitiveNumberRangeExtensionContainsPrimitiveNumber%findTypeInModuleByTopLevelClassFqNameisUnsignedIntegerRangeToisTopLevelExtensionOnTypeisArrayOrPrimitiveArrayIndicesisSequenceWithIndexisPrimitiveRangeContains isUnsignedIntegerClassDescriptor isPrimitiveNumberClassDescriptorisUnsignedRangeisClassTypeWithFqnisUnsignedProgressionisPrimitiveRangeToExtensionisUnsignedIntegerUntilisPrimitiveNumberRangeToisPrimitiveNumberDownToexitCallArgumentsisPrimitiveNumberUntilisComparableRangeToisCharSequenceIteratorisIterableWithIndexisCharSequenceWithIndexisCollectionIndicesisCharSequenceIndices getRangeOrProgressionElementTypeisPrimitiveProgressionisPrimitiveProgressionReverseisUnsignedIntegerRangeContainsisUnsignedIntegerDownToisClosedRangeContains"isClosedFloatingPointRangeContains isArrayOrPrimitiveArrayWithIndexisPrimitiveRange&shouldTryResolveLHSAsReservedCallChainresolveReservedCallChainOnLHS/resolveReservedExpressionSyntaxOnDoubleColonLHSsetExpressionTypingServicescheckClassLiteralisMemberExtensioncontextReceiverTypesForresolveReservedExpressionOnLHSgetQualifiedNameStringPart'shouldTryResolveLHSAsReservedExpressionisMutablePropertyReferencebindFunctionReference*reportUnsupportedCallableReferenceIfNeededcreateKCallableTypeForReferencegetCallableReferenceTypetryResolveRHSWithReceiverbindPropertyReferencegetQualifierChainParts canBeReservedGenericPropertyCallreportUnsupportedIfNeeded?buildNewExpressionForReservedGenericPropertyCallChainResolutionreceiverTypeForresolveCallableReferenceRHS&substituteCapturedTypesWithProjections#approximateCapturedTypesIfNecessaryapproximateProjectiontoTypeArgumentexitEqualityOperatorCalllowerIfFlexibleupperIfFlexibletoDefaultAnnotationstoDefaultAttributeswithAbbreviationgetAbbreviatedTypegetAbbreviation.makeIntersectionTypeDefinitelyNotNullOrNotNullenterTryExpression%isSingleClassifierTypeWithEnhancementexitWhileLoopexitWhenExpressionexitWhenBranchConditionenterCatchClause
unsafeCallunresolvedReferencemissingReceiverbindReferencenoneApplicablerecursiveTypenoValueForParameterbindCall%nestedClassAccessViaInstanceReference unresolvedReferenceWrongReceiver	ambiguityabstractSuperCalltypeInferenceFailedrecordAmbiguitycannotCompleteResolvemakeAndResolveFakeCallInContextwrongReceiverTypenoReceiverAllowedresolveFakeCallinvisibleMemberinstantiationOfAbstractClassbindResolvedCall"checkSmartCastsInSubjectIfRequiredanalyzeConditionsInWhenEntriesjoinWhenExpressionBranches!getCalleeExpressionForSpecialCallprocessVariableSubject%checkSmartCastToExpectedTypeInSubjectinferTypeForWhenExpressioninitDataFlowValuenoChangedetectRedundantIscheckTypeForIsmakeValueArgumentcreateDataFlowValuecheckWhenCondition.wrapWhenEntryExpressionsAsSpecialCallArgumentscheckTypeForExpressionConditioncheckTypeCompatibilityanalyzeWhenEntryConditionsexitCheckNotNullCallreplaceWithNonApproximatingbuildSubstitutorrunAssertionsmapArrayType
toVariancemapSuspendFunctionTypemapClassTypemapClasscreateDeferredType%createRecursionIntolerantDeferredTypeisCastPossiblecheckExactTypeForUselessCastmapToPlatformIndependentClassesallParametersReifiedcastIsUselesscreateFunctionPlaceholderTypegetSubtypeRepresentativesameTypeConstructorsgetSupertypeRepresentativegetCustomTypeParameterisCustomTypeParameterenterDoWhileLoopConditionexitResolvedQualifierNodeflexibleTypeintegerLiteralTypesimpleNotNullTyperefineConstructorcomputeMemberScope#simpleTypeWithNonTrivialMemberScopecomputeExpandedTypeexitFinallyBlock!computeExpandedTypeForInlineClasscomputeExpandedTypeInnerisRecursioncreateWithFormalArguments.isTypeVariableAgainstStarProjectionForSelfTypeselectOnlyPureKotlinSupertypescheckSubtypeForSpecialCases!checkSubtypeForIntegerLiteralTypeeffectiveVarianceisStubTypeSubtypeOfAnotherisSubtypeForSameConstructorisCommonDenotableTypehasNothingSupertype2getTypeParameterForArgumentInBaseIfItEqualToTarget"isSubtypeOfForSingleClassifierTypecollectAndFiltercompleteIsSubTypeOf,collectAllSupertypesWithGivenTypeConstructorfindCorrespondingSupertypesstarProjectionType'buildStarProjectionTypeByTypeParameters
exitScriptisExpectClass restoreAdditionalTypeInformationcreateAbbreviationcombineNullabilitycombineAttributesexpandNonArgumentTypeProjectioncreatedCombinedAttributesassertRecursionDepthcheckTypeArgumentsSubstitutionexpandTypeProjectionexpandRecursively combineNullabilityAndAnnotationsexpandWithoutAbbreviation	exitFieldenterBinaryLogicExpressionexitAnonymousObjectExpressionwereTypeArgumentsChangedunwrapEnhancementinheritEnhancementgetEnhancementenhanceTypeArgumentsgetEnhancementDeeplyInternalwrapEnhancementunwrapEnhancementDeeplygetEnhancementDeeplyisIncompatibleEnums"representativeTypeForTypeParametercheckEnumsForCompatibilitygetEffectiveProjectionKindfromVariancehasDifferentFlexibilityhasDifferentFlexibilityAtDepthhasNotNullSupertyperunIsPossibleSubtypeisApplicableAsEndNodehasPathByNotMarkedNullableNodesisPossibleSubtypeneedsRefinementareThereExpectSupertypesisEnumEntryOrEnumenterDelegateExpressioncreateStandaloneInstanceFor+isRefinementNeededForTypeConstructorNoCachecanBeCached#refineWithRespectToAbbreviatedTypesexitWhenSubjectExpression	maybeWrapmakeDefinitelyNotNullcomputeNeighbours renderAdditionalDebugInformation'getAdditionalNeighboursInSupertypeGraphprocessSupertypesWithoutCyclesreportScopesLoopErrordefaultSupertypeIfEmptysetAlternative makeDebugNameForIntersectionTypegetAlternativeTypecreateScopeForKotlinTypetransformComponents	exitBlockexitTypeOperatorCallareFqNamesEqualisSameClassifierhasMeaningfulFqNamestrictEqualTypesInternalstrictEqualSimpleTypes%exitLeftBinaryLogicExpressionArgumentexitSmartCastExpression
enterBlockexitBinaryLogicExpressionrecursiveTypeAliasrepeatedAnnotationconflictingProjectionboundsViolationInSubstitutionexitStringConcatenationCallcreateByParametersMapcreateByConstructorsMapadjustedTyperunForkingPointrunWithArgumentsSettingscustomIsSubtypeOfisAllowedTypeVariableanySupertypegetLowerCapturedTypePolicyinspectStaticsdescendantRelativeTowithReplacedExtensionOrNullextractRadixisPrimitiveOrStringisJavacComponentloadedClassessubstringWithContextpositiongetErasedUpperBoundInternalsubstituteErasedUpperBoundsreplaceArgumentsOfUpperBoundgetErasedUpperBoundsurevalueOfOrNulltopologicalSortcreateStringInternercreateConcurrentMultiMapthreadLocaldecodePluginOptionsisTrivialSuperapproximateLocalTypesapproximateCapturedTypeapproximateIntersectionTypeexitInitBlockisTrivialSubenterInitBlockapproximateSimpleToSuperTypeexitWhenBranchResult$isIntersectionTypeEffectivelyNothingapproximateSimpleToSubTypedefaultResultcheckExceptionalCasesisApproximateDirectionToSuperapproximateParametrizedTypetoApproximationResult approximateDefinitelyNotNullType#shouldUseSubTypeForCapturedArgument	doNothingidentity
alwaysNull
alwaysTrue newLinkedHashMapWithExpectedSizeyieldIfNotNullnewHashMapWithExpectedSize
mapToIndexkeysToMapExceptNulls newLinkedHashSetWithExpectedSize	keysToMapgetOrPutNullablenewHashSetWithExpectedSize+getManifestMainAttributesFromJarOrDirectoryisKotlinJavascriptStdLibrarygetPropertyOrFailgetManifestFromJarOrDirectorygetManifestFromDirectorycheckAttributeValue
getJarFilegetManifestFromJarnextWithoutConsumingisProcessCanceledExceptionrethrowcloseQuietlygetSafesequenceUntilconvertAnyArrayImplallowsNulls&tryCreateCallableMappingFromStringArgstryConstructClassFromStringArgstryCreateCallableMapping%tryCreateCallableMappingFromNamedArgsconvertAnyArray
enterFieldexitVariableAssignmentcontentIfExistsprocessDirectorytraverseDirectoryrunIfFileExiststraverseJsLibrariestraverseArchiveisZippedKlibInZipisZippedKlibisKotlinJavascriptLibraryisKotlinJavascriptIrLibrarygetSuggestedPathcopyLibrarycopyJsFilesFromZipcopyJsFilesFromDirectorytraverseJsLibrarycopyJsFilesFromLibrariescorrespondingSourceMapFiletoMetadataVersionmetadataVersionfilterIsInstanceAndTofilterIsInstanceMapNotNullfilterIsInstanceMapTofilterIsInstanceMapNotNullTofromInteger	toInteger&isCompatibleWithCurrentCompilerVersionexitGetClassCallexitWhileLoopConditionjvmMetadataVersionOrDefault getJdkClassesRootsFromCurrentJregetJdkClassesRootsFromJdkOrJregetJdkClassesRootsFromJregetJdkClassesRootsconvertToHashMapcopyWithNewNamegetAttachmentswithAttachmentwithPsiAttachmentwithVersioncheckWithAttachmentexitValueParameter	sumByLongzipWithNullsassertedCastfirstIsInstanceOrNullsafeAsexitSafeCallpopLastfirstNotNullResultsequenceOfLazyValuesfoldMaplastIndexOfOrNullrunIfapplyIffilterIsInstanceWithChecker
ifNotEmptymeasureTimeMillisWithResult	enumSetOfpartitionIsInstanceflatMapToNullablecastAll	runUnless	flattenTo	enumMapOfflatGroupByflatAssociateBysameindexOfOrNulllastIsInstanceOrNullifFalsefirstIsInstanceloadMetadatahasMetadataparseMetadatareplaceSuffixformatMetadataAsString	classPathexitTryExpressionmemoryOptimizedMaptoSmartListfindIsInstanceAndmemoryOptimizedZipmemoryOptimizedPlusmemoryOptimizedFilterIsInstancememoryOptimizedMapNotNullmemoryOptimizedFlatMapmemoryOptimizedFilterNotmemoryOptimizedFiltermemoryOptimizedMapIndexed annotateByTypeAnnotationProvideraddSuperTypeEntrygetExternalDependenciescannotModifylazyPubcreateDummyJavaFilecreateDummyVoidMethodcreateDummyClasstoLightMemberOrigintoLightClassOriginexitCallableReferencetoAnnotationMemberValueobtainLightAnnotations
getMethodsgetAllMethodsexitDoWhileLoopgetAllFields	getFieldshasNonTrivialBoundsasDescriptor
parametersgetOrCreateInitializingClassgetInitializingClassresolveMethodresolveMethodGenericscollectAugmentsgetParentForLocalDeclarationenterScriptexitThrowExceptionNodeexitDelegatedConstructorCallcomputeParameterTypeexitPropertyenterFinallyBlocksetInitializergetInitializerexitElvisLhsexitConstExpression enterAnonymousFunctionExpressioncheckSuperTypeByFQName
enterElvisenterProperty$returnExpressionsOfAnonymousFunctionenterValueParameterenterDoWhileLoopexitCatchClauseexitTryMainBlockgetPackageFilesFilterfindSyntheticInnerClass!findRepeatableAnnotationContainerfindInterfaceDefaultImplsbyClasspathComparatorfindClassesAndObjectsgetClassNamessortByPreferenceToSourceFileenterCallArgumentsexitDelegateExpressionenterWhenExpressionenterWhenBranchConditionexitQualifiedAccessExpressionenterWhileLoop	exitElvisexitJump	enterJumpcomputeCompletionModegetTopLevelFunctionSymbolsisAcceptablegetTopLevelCallableSymbolsintegrateConstraintsisSyntheticTypeVariableinferPostponedVariablescreateSyntheticStubTypes0fixSyntheticTypeVariableWithNotEnoughInformationhasSyntheticTypeVariablesaddPartiallyResolvedCallgetEnumEntriesPsiMethod'createNonFixedTypeToVariableSubstitutorhasPostponedregisterStubTypesloadMethodsFromFilecontainsStubTypeaddCompletedCallgetEnumConstant(computeCheckNeedToErasureParametersTypescomputeThrowsList*buildTypeParameterListForSourceDeclarationcreatePsiLiteralannotateByKotlinType#createGeneratedMethodFromDescriptorlooksLikeDeprecatedgetKotlinTypecleanFromAnonymousTypes
safeScriptsafeIsScriptescapeStringtryGetPredefinedName	asPsiTypetoQualifiedNamepackMethodFlagsgetClassNamesInPackageasStringForPsiLiteralsimpleVisibilitytoLightAnnotationsapplyCompilerPluginspackCommonFlagssafeIsLocalcreateTypeFromCanonicalTextlooksLikeLevelArgument#buildTypeParameterListForDescriptorhasFieldAnnotationaddScriptDefaultMethodsaddDelegatesToInterfaceMethodsnoArgConstructoraddTypeToTypeListpropertyParametersisTypeForInheritanceListaddMethodsFromDataClassgetFirClassifierContainerFileallSuperTypesgetFirCallableContainerFilegetFirScriptContainerFiledefaultConstructorcreateConstructorsgetFirFilesByPackageshouldGenerateNoArgOverloadcreateInheritanceListgetValuesMethodgetValueOfMethodisClassNameSealed8getTextVariantFromModifierListOfPropertyAccessorIfNeededisImplementationInInterfacecomputeReturnTypeRefsubstituteOrNullregisterClass defaultJavaAncestorQualifiedNamehasParseErrorsAround!classDeclaredInUnexpectedPositiongetOutermostClassOrObjectisPossiblyAffectedByAllOpenshouldNotBeVisibleAsLightClassisEnumEntryWithoutBodybeforePhasecreateSubstitutor
afterPhasestartComputinggetSupertypeByPsiwithPropertycapturedTypeshouldKeepTypeVariableBasedTypeshouldTransformDeclarationwithRegularClass&resolveAnnotationsOnAnnotationIfNeededtryCalculateReturnTypeOrNullcomputeMissingCases"getFirClassifierContainerFileIfAnygetFirClassifierByFqNamemakeNotNullAnnotationwithScopeCleanupcalculateDeprecationswithClassDeclarationCleanuptryGetContainingDescriptorneedResolveMembersneedResolveNestedClassifierstransformDeclarationContent.getFirstSupertypeFQNameForAnonymousDeclarationtransformClassContentshouldRunCompletionaddMarkerInterfaceIfNeededtryResolveMarkerInterfaceFQName(resolveQualifiedAccessAndSelectCandidategetReferenceElements#isAcceptableResolvedQualifiedAccessdropCallableReferenceContextgetParametersCountgetParameterIndex	setParentscopegetPackagePartProviderreceiversAsReversedlastDispatchReceivernavigatecreateModuleBasedSessioncreateLibrarySession!createDeserializedContainerSource
moduleDatagenerateUniqueFieldNamecanNavigategetterIfPropertycanBeDeprecatedcomputeMethodNamecreatePropertyFieldvisitLoopEnterNodevisitLoopExitNodevisitSubGraph visitPropertyInitializerExitNode!visitPropertyInitializerEnterNodevisitFunctionEnterNodevisitFunctionExitNodemethodReturnTypeasJavaMethodvisitInitBlockEnterNodeisInternalNonPublishedApivisitInitBlockExitNodecheckNameAndReportcanNavigateToSourcecheckPsicreateMethodscheckLightTreehasBackingFieldcheckPsiOrLightTreeaddAnnotationContainerdropAnnotationContaineraddSuppressedDiagnostics"addQualifiedAccessOrAnnotationCallexitFilepropertyAccessors	enterFileaddReceiverParameterisTraitFakeOverridepsiTypeisNullabilityAnnotation
unwrapCall#convertToLightAnnotationMemberValuegetAnnotationNamegetDeclarationScopedropGetClassCall	getMirrorgetLanguageLevelcreateFakeJavaFileStubenterContractBodycheckSetModifierPropertyexitContractBodysetModifierPropertyaddImplicitReceiverthrowInvalidOperationgetApplicableAnnotationslightAnnotationsForEntriesisFromSourcesgetAnnotationDescriptorshasAnnotationsInSourcedropDeclarationaddGetClassCalldropElement#dropQualifiedAccessOrAnnotationCallgetData
getOperandvisitQualifiedAccessNode*getTextVariantFromPropertyAccessorIfNeededifSuretryConvertAsRetentionextractArrayAnnotationFqNamestryConvertAsRepeatabletryConvertAsTargettryConvertAs createRetentionRuntimeAnnotationtryConvertAsMustBeDocumentedtryConvertAsRepeatableContainerasUltraLightSimpleAnnotationextractAnnotationFqNamecomputeExpressiongetAccessorLightMethods isSyntheticValuesOrValueOfMethodisGetEntriesMethodifValidgetModuleNameForSource checkIfToArrayConversionExpected!getNotWrappedToArrayNameValuePairgetWrappedToArrayNameValuePairgetCallEntryvisitVariableAssignmentNodecreateUltraLightClassForFacadecreateUltraLightClassForScriptcreateConstantEvaluatorcreateUltraLightClassinterceptFieldsBuildinginterceptMethodsBuildinginterceptModalityBuildingvisitFunctionCallNodecheckModifierscheckPropertycheckCallableDeclarationappendOperatorTagappendRepresentation	representgetLightClassMethodsByNamecanGenerateLightClassgetPsiMethodWrappergetLightClassPropertyMethodsgetLightClassMethodgetLightClassAccessorMethodsgetLightClassAccessorMethodgetPsiMethodWrappersgetWrappingClassesextractPropertyAccessorsgetLightClassMethodsgetLightClassBackingFieldgetWrappingClassgetLightFieldForCompanionObjecthasNonAbstractMembersisNonAbstractMemberpropertyNameByAccessortoLightClassWithBuiltinMappingsyntheticAccessorswithNestedAnnotationstoAnnotationLightMethodcheckIsMangleddefaultImplsChildaccessorNameByPropertyNametoPsiParametersgetRepresentativeLightMethodtoLightSetter(getAccessorNamesCandidatesByPropertyNametoLightElementstoPsiTypeParametersfastCheckIsNullabilityApplied!probablyCanHaveSyntheticAccessors"repeatableAnnotationContainerChildtoFakeLightClasstoLightGettertoLightClassfindFacadeClasstoLightMethodsdeserializeWithHashesavailableValuessupportedValuescreateByLanguageVersionisInTypeConstraintisStableOrReadyForPreview!forcesPreReleaseBinariesIfEnableddescribeDifferencesOrNullsupportsFeaturefromVersionStringfromFullVersionStringisCatchElementParametergetRawIdentifierisRedundantNullable(projectWideOutOfBlockModificationTrackercreateLightFacadeisInConstructorCallee
getRawNamecreateLightScripttoFacadeClassescreateLightClasscreateVisitorvisitVariableDeclarationNodeonDeclarationExitcanHaveAdditionalFilesInFacadewithFilecheckElementfacadeIsPossibleoutOfBlockModificationTrackercachedValueResult
guardedRuninlinePropertyAccessorsinlineFunctionsinlineFunctionsAndAccessors	visitNodeforNewInference$generateInContextWithoutFragmentInfodelegatingCallToAnyConstructorshouldPromoteToSharedVariablegenerateFunctionForFragmentgenerateClassForCodeFragment*generateFragmentValueParameterDeclarationsadditionalCheckgetTypeInferredByFrontendOrFail#getExpressionTypeWithCoercionToUnit	getOrFail)getExpressionTypeWithCoercionToUnitOrFailgetTypeInferredByFrontendgetDynamicOperatorisImplicitInvokeisImplicitSetisImplicitGetcreateWithFragmentParameterInfogenerateObjectLiteralgenerateLocalClass!generateAnnotationsForDeclaration generateEnumConstructorSuperCalladdParametersToCall"generateCallWithArgumentReorderinggenerateValueReferencegenerateSamConstructorCallgenerateFunctionCallgenerateGetVariablegenerateDynamicFunctionCallgenerateConstructorCallgetDynamicExpressionReceivergeneratePropertyGetterCallgenerateDoWhileLoopBodyfindParentLoopgetLoopLabelgenerateForLoopgenerateDoWhileLoopgenerateContinuegenerateBreakoverrideCanBeOmittedgenerateWhileLoopBodygenerateWhileLoopisSamConstructor&getOriginalForFunctionInterfaceAdapter$getSubstitutedFunctionTypeForSamTyperenderClassIdgetPreviousScripts$remapDebuggerFieldPropertyDescriptorgenerateSingleFilecreateStubIrForErrorClassrenderCallableIdrenderArgumentMappingtoIrValueParametergenerateScriptDeclarationlinkCorrespondingPropertySymbolgenerateFunctiongenerateLambdacreateBodyGenerator generateSecondaryConstructorBodygenerateSuperConstructorCallgenerateEnumConstructorCallrenderArgumentsgenerateAnySuperConstructorCallrenderAsPossibleFunctionType generateEnumSuperConstructorCallgeneratePrimaryConstructorBody8generateSetContextReceiverFieldForPrimaryConstructorBody%generateEnumEntrySuperConstructorCallgenerateReturnExpressioncreateStatementGenerator6generateSecondaryConstructorBodyWithNestedInitializers&generateEnumConstructorCallOrSuperCallgenerateFunctionBodyputLoopgenerateEnumEntryInitializergenerateExpressionBodyreferenceExpectsForUsedActualscreateFileScopeContextgenerateValueOfgenerateValuesgenerateSpecialMembers&getStartOffsetOfClassDeclarationOrNull3getStartOffsetOfConstructorDeclarationKeywordOrNull0getStartOffsetOfFunctionDeclarationKeywordOrNullgetErrorExpressionTypegenerateErrorSimpleNamegenerateErrorExpressiongenerateErrorCallextractOffsetsgenerateTypicalIrProviderList(generateSyntheticPropertyWithInitializergeneratePropertyDeclarationgenerateSimplePropertygenerateGetterIfRequired.generatePropertyForPrimaryConstructorParameter:generateDestructuringDeclarationEntryAsPropertyDeclarationactuallyHasBackingFieldgetPropertyDescriptorgeneratePropertyBackingFieldgenerateSetterIfRequiredgenerateSyntheticProperty1createFakeOverrideDescriptorForParentStaticMembergenerateDelegatedMembergenerateDelegateFunctionBodyrenderDefaultValuesubstituteDelegateToDescriptor!generateFieldsForContextReceivershasEnumEntriesWithClassMembers3generateAdditionalMembersForSingleFieldValueClassesrenderErrorExpression&generateDelegatedImplementationMembers"generateMembersDeclaredInClassBody%generateAdditionalMembersForEnumClass&generateFakeOverrideMemberDeclarations5getTypeArgumentsForOverriddenDescriptorDelegatingCallhasMemberDeclarations2generateAdditionalMembersForMultiFieldValueClasses3generateDeclarationsForPrimaryConstructorParametersrenderModifiers%generateAdditionalMembersForDataClass&generateMembersDeclaredInSupertypeListgenerateTryCatch generateWhenConditionWithSubject&addElseBranchForExhaustiveWhenIfNeeded"generateEmptyBlockForMissingBranchgenerateWhenBodygenerateWhenSubjectgenerateWhenExpressioncreateIrWhengenerateIsPatternConditiongenerateEqualsConditiongenerateIfExpressiongenerateWhenConditionNoSubjectgenerateInCondition'generateAnonymousInitializerDeclarationgenerateInitializerBodygenerateEnumEntryDeclaration generateClassOrObjectDeclarationrenderDeclarationAttributesgenerateTypeAliasDeclarationgenerateSyntheticClassOrObjectgenerateMemberDeclarationgenerateFakeOverrideDeclarationgenerateClassMemberDeclaration$generateExpressionAssignmentReceiver!generatePostfixIncrementDecrement%generateArrayAccessAssignmentReceiver%getDynamicAugmentedAssignmentOperator generatePrefixIncrementDecrement%generateAssignmentReceiverForPropertygenerateAssignmentReceivercreateBackingFieldLValueunwrapPropertyDescriptorcreateVariableValuecreatePropertyLValuegenerateAugmentedAssignmentgenStmtgenExprgetPostfixOperatorgetInfixOperatorgetIrTypeOperatorgetPrefixOperator	hasExpect4generateReceiverExpressionForDefaultPropertyAccessor!generateLambdaFunctionDeclaration2generateFunctionParameterDeclarationsAndReturnTypegenerateDefaultGetterBody'generateDefaultAnnotationParameterValue5generateDefaultAccessorForPrimaryConstructorParametergetLabeledExpressiongenerateDefaultAccessorBodygenerateDefaultSetterBody$generateReceiverParameterDeclarationgetChildNodeByTypegeneratePropertyAccessordeclareSimpleFunctionInnergetSyntheticField
addAllFromforEachExpect+generateAsPrimitiveNumericComparisonOperandgeneratePrefixExpressiongenerateComparisonOperatorfindConversionFunctionTogenerateInstanceOfExpressiongetComparisonOperatorSymbolgeneratePostfixExpressioncreateErrorExpressionisDynamicBinaryOperatorgetResultTypeForElvispromoteToPrimitiveNumericTypegenerateBinaryExpressiongenerateCastExpressiongenerateDynamicUnaryExpressionisDynamicUnaryOperatorgenerateExclExclOperatorgenerateIdentityOperatorgenerateEqualitygenerateElvisgenerateEqualityOperatorgeneratePrefixOperatorAsCallgenerateBinaryOperatorAsCallkotlinTypeToIrTypeinvokeConversionFunctiongenerateBinaryBooleanOperatorgenerateDynamicBinaryExpressiongenerateDynamicArrayAccessgenerateInOperatorensureMemberScopecollectDescriptorsgenerateSyntheticDeclarations4generateInitializerForLocalDelegatedPropertyDelegate1generateDelegateVariableForLocalDelegatedProperty%createLocalDelegatedPropertyReferencecreateVariableValueForDelegate createPropertyDelegateDescriptor"createBackingFieldValueForDelegate&createLocalPropertyDelegatedDescriptor*generateInitializerBodyForPropertyDelegatecreatePropertyReference#generateDelegatedPropertyGetterBody getDelegatedPropertyDelegateType#generateDelegatedPropertySetterBody generateDelegateFieldForProperty)getKPropertyTypeForLocalDelegatedPropertycreateLocalPropertyAccessor!generateDelegatedPropertyAccessorupdateNullThisRefValue$getKPropertyTypeForDelegatedPropertycreateThisValueForDelegatetoFirSourceElementgetExpressionInParenthesesgetAnnotatedExpressiongenerateOverridenSymbolsregisterPredicatesrenderSeparatedvisitPrefixExpression&visitStringTemplateEntryWithExpressiongetReturnExpressionTarget postprocessStringTemplateEntriesgenerateStatements declareComponentVariablesInBlockvisitPostfixExpressiongenerateConstantExpressionvisitLiteralStringTemplateEntryscopeOwnerAsCallablevisitEscapeStringTemplateEntryregisterUserDefinedAnnotationgenerateThisReceiver)generateExpressionForReferencedDescriptorvisitSafeQualifiedExpression getAnnotationsWithMetaAnnotationresolveUserType'generateLocalDelegatedPropertyReference maybeKFunctionTypeToFunctionTypeadaptResolvedValueArgumentrequiresCoercionToUnitgetBoundReceiverTyperesolvePropertySymbolrequiresSuspendConversionputAdaptedValueArguments-generateFunctionInterfaceConstructorReference$createFunInterfaceConstructorAdapterkFunctionTypeToFunctionTypecreateAdapteeCalladaptValueArgumentgenerateClassLiteralcreateAdapterFunisAdaptedCallableReferencegetFieldForPropertyReferencevisitPackageFragmentDescriptorcreatePropertyStubvisitTypeAliasDescriptorcreateFunctionStubcreateEnumEntruStubvisitVariableDescriptorvisitPropertySetterDescriptorinsertDeclarationvisitValueParameterDescriptorvisitClassDescriptordeclareAccessorvisitScriptDescriptorvisitConstructorDescriptordefaultArgumentFactoryvisitPackageViewDescriptordeclareTypeAliasStub visitReceiverParameterDescriptorvisitPropertyGetterDescriptorvisitTypeParameterDescriptorcreateClassStubcreateConstructorStubsaveAnnotationsFromPluginfindFirstFunctiongetDynamicReceivergetAnnotationsForPredicateregisterAnnotatedDeclarationisExtensionInvokeCall0applySuspendConversionForValueArgumentIfRequiredgetSuperQualifiergenerateReceiverOrNullgenerateVarargExpressionUsingpregenerateExtensionInvokeCallpregenerateValueArgumentsUsing0generateSamConversionForValueArgumentsIfRequiredgenerateReceivergenerateThisOrSuperReceiver*shouldGenerateReceiverAsSingletonReferencepregenerateCallUsinggetTypeArguments(unwrapCallableDescriptorAndTypeArgumentspregenerateCallunwrapSpecialDescriptor"createFunctionForSuspendConversion3generateContextReceiverForDelegatingConstructorCall+generateReceiverForCalleeImportedFromObjectcomputeVarargTypegenerateValueArgumentUsinggenerateSingletonReferencepregenerateCallReceiversgenerateBackingFieldReceivervisitAncestorAnnotatedWith#computeSubstitutedSyntheticAccessorcopyTypesFromExtensionAccessorloadAtadjustForCalleefileHasPluginAnnotationssafeCallOnDispatchReceiver!getValueArgumentsInParameterOrdersetExplicitReceiverValuevisitParentAnnotatedWithvisitAndgenerateExpressionValuewithReceiversdeclareTemporaryVariableInBlockcreateTemporaryVariableInBlockprocessDeclarationisWithFlexibleMutabilityisWithFlexibleNullabilityasJvmFlexibleTypecreateJvmIrBuildereraseTypeParameterscollectVisibleTypeParametersisValueClassTypeisMultiFieldValueClassTypeeraseToScopeisCoroutineIntrinsicfindContainerisReifiablegetDeclarationBeforeInlineisInlineFunctionCallunwrapInlineLambdaisPrivateInlineSuspendisEffectivelyInlineOnlygetAttributeOwnerBeforeInlinefindInlineLambdasfindInlineCallSitesirArray	irArrayOfisBuiltInIntegerType%invokeUnsignedIntegerCoercionFunctionvisitHasAnnotatedWithinvokeIntegerCoercionFunctioncoerceInnerExpression+recordExpectedLambdaReturnTypeIfAppropriatecoerceIntToAnotherIntegerTypegetFunctionReturnTypeOrNullpostprocessReturnExpressionsimplicitNonNulltoNonIrBasedisSamConversion getEffectiveDispatchReceiverType2preventDeprecatedIntegerValueTypeLiteralConversioncreateGeneratorContextaddPostprocessingStepbuildSimpleArraybuildComplexArray	copyArrayisConstructorDelegatingToSuperdeparenthesizegetChildTokenStartOffsetOrNullvisitMetaAnnotatedWithfindSingleFunctioncontainsNullvisitOr
validateIrvisitAnnotatedWithcopySubstitutedcreateDelegatingLambdacreateDelegatingLambdaReferencecreateLambdaValueParametersbuildRegularDelegatingLambdabuildNullableDelegatingLambdacreateTypeSubstitutoroverriddenFromClass	addVarargvisitPredicatehasContinuationcontinuationParameterisReadOfCrossinlineisBridgeToSuspendImplMethodshouldContainSuspendMarkers"isInvokeOfSuspendCallableReferenceisInvokeSuspendOfContinuation,isStaticInlineClassReplacementDelegatingCall7isStaticInlineClassReplacementForDefaultInterfaceMethodisNonBoxingSuspendDelegation isInvokeSuspendForInlineOfLambdagetOwnersOfDeclarationaddAnonymousInitializerfindOrCreate0createDelegatingCallWithPlaceholderTypeArguments%getJvmVisibilityOfDefaultArgumentStubgetBooleanConstArgumenthasAssertionsDisabledField!isSmartcastFromHigherThanNullablecopyCorrespondingPropertyFromcreatePlaceholderAnyNType#getCallableReferenceOwnerKClassTypehasPlatformDependentrawType!isOrOverridesDefaultParameterStubhasChildisAssertionsDisabledField$copyFromWithPlaceholderTypeArgumentsgetSymbolsByPredicatebuildAssertionsDisabledFieldisJvmAbstractreceiverAndArgsgetStringConstArgumenthasJvmDefaultneedsAccessorgetIntConstArgumentsuspendFunctionOriginal$isSimpleFunctionCompiledToJvmDefaultextensionReceiverName	getIoFilereplaceThisByStaticReferencemakeRawTypeAnnotationisInCurrentModuleconstantValueisBridgeisArrayOrNullableArrayOfcreateFileClassisJvmOptimizableDelegate3getPropertyReferenceForOptimizableDelegatedProperty5getSingletonOrConstantForOptimizableDelegatedPropertyvisitLambdaInvoke,copyReceiverAndValueArgumentsForDirectInvokevisitFunctionReferenceInvokecreateDefaultImplbridgeViaAccessorTobridgeToStatichandleInterface%createJvmDefaultCompatibilityDelegatehandleAnnotationClassreplaceWithCallTocoerceIfPossiblegetLiteralStringFromAnnotation"findAnnotationEntryOnFileNoResolvegetFileClassInfogetFileClassInfoFromIrFile'checkAllFileLevelDeclarationsAreClassesmanglePartNameparseJvmNameOnFileNoResolveresolveMultiFileFacadeMemberreportSyntaxError createSamConvertedVarInitializer-postprocessSamConversionsInCompoundAssignmentcreateLValuegetSamConvertedGetValuefillArgumentscreateStaticSuspendImpl addInvokeSuspendForNamedFunction?addContinuationObjectAndContinuationParameterToSuspendFunctions)generateContinuationClassForNamedFunction&addContinuationParameterToSuspendCallsaddConstructorForNamedFunctiontoSuspendImplementationNameaddFunctionOverrideaddCompletionValueParametergenerateErrorForInlineBodycollectValueParametersisInlineFunction$getErasedClassForSignatureAdaptationvalidateMethodParametersisConstructorRequiringAccessor(computeParameterTypeAdaptationConstraintisInheritedFromSerializable adaptFakeInstanceMethodSignature#getLambdaMetafactoryArgsOrNullInner%computeSignatureAdaptationConstraintsremapExtensionLambdacheckMethodSignatureCompliancerequiresImplLambdaBoxingcheckTypeCompliesWithConstraintisAdaptablehasConflicts%computeReturnTypeAdaptationConstraintgetLambdaMetafactoryArguments"joinSignatureAdaptationConstraintsadaptLambdaSignature requiresDelegationToDefaultImplsrequiresInstanceMethodBoxing composeTypeAdaptationConstraintsisCrossinlineLambdabuiltInsPackagemakeNonNullType%defineComparisonOperatorForEachIrTypedefineOperator
toIrSymbolmakeNullableTypedefineComparisonOperatordefineCheckNotNullOperator-findCallsOnTailPositionWithoutImmediateReturncapturesCrossinlinesuspendFunctionViewOrStubretargetToSuspendViewhasAnnotatedrewriteSpecialMethodBodyaddAbstractMethodStubparameterTypeCheckaddSpecialBridgegetStructurecopyParametersWithErasure&isTypeParameterWithPrimitiveUpperBoundisThrowingStubisClashingWithPotentialBridgeirGetOrCastcopyWithTypeErasuregetSpecialBridgeSignaturesisPotentialBridgeTargetdelegatingCallcreateBridgesoverriddenSpecialBridgesaddBoxedAndUnboxedMfvcArgumentsfindEnumValuesFunctionaddInvokeSuspendForLambda generateAnonymousObjectForLambda	addCreateaddInvokeCallingConstructorcloneLambdacallInvokeSuspend"generateContinuationClassForLambdaaddInvokeCallingCreateaddInvokeSuspendForInlineLambdaaddPrimaryConstructorForLambda"buildPrimaryInlineClassConstructorannotatedOrUnder$buildSpecializedEqualsMethodIfNeededaddJvmInlineAnnotation	annotatedbuildBoxFunctionhandleSpecificNewClass%visitClassNewDeclarationsWhenParallelcoerceToUnboxedcreateBridgeBodyspecializeEqualsCallcoerceInlineClasses!transformSecondaryConstructorFlatcreateBridgeDeclaration!isSpecificLoweringLogicApplicableaddBindingsForbuildUnboxFunctionancestorAnnotatedshouldPopUpisRealLateinitisLateinitBackingFieldsubstituteSetter(createSyntheticMethodForPropertyDelegate?isDefaultAccessorForCompanionPropertyBackingFieldOnCurrentClasspatchFieldAccessReceiversubstituteGetter!shouldSubstituteAccessorWithField createSyntheticMethodForPropertylowerPropertycomputeSyntheticMethodNamepatchReceiver#createSyntheticMethodForAnnotationsregisterOptionalAnnotationsgetOrCopyPropertygetAssertionDisabledcheckAssertion!generateReflectiveAccessForSetterfieldSetAccessiblemethodSetAccessiblevalueParameterTypesgetValueArguments'generateReflectiveConstructorInvocationmethodInvokeconstructorNewInstanceshouldUseAccessor'recordCompanionObjectAsDispatchReceiver$generateReflectiveAccessForCompanionparentAnnotatedreplaceContextReceiverNumbergenerateReflectiveFieldSet"generateReflectiveMethodInvocationfieldLocationAndReceiverfieldSetgenerateReflectiveFieldGetgenerateReflectiveStaticCallconstructorSetAccessiblejavaClassObject!generateReflectiveAccessForGettergetDeclaredMethodfieldGetgenerateInvokeSpecialForCall#generateThrowIllegalAccessExceptionfinalizeScriptClasscollectCapturingClassesaddScriptMainFunaddSimplePropertyFromprepareScriptClassthisOfClassisVisitingSuperConstructorisThisAccessiblereplaceBoundSymbolmoveFieldsOfConstProperties modifyMultifilePartsForHierarchyshouldMoveToFacadegenerateMultifileFacadescreateMultifileDelegateIfNeeded wrapAnnotationEntriesInContainergetOrCreateContainerClasspostprocessMovedThisreplaceSuperTypeRefirRunSuspendisMainMethodgenerateMainMethodisParameterlessMainMethodgetMangleComputerisCastisAccessibleFromSyntheticProxymodifySetterExpressionwithinIrInlinedFun handleLambdaMetafactoryIntrinsicmodifyFunctionAccessExpressioncreateAccessorMarkerArgumentmodifyGetterExpressiongetExportChecker
makeStaticisJvmStaticInCompanionisJvmStaticDeclarationisJvmStaticInObjectgenerateNewValueParametersgenerateWrappergenerateWrapperHeadergenerateWrapperscreateThrowingStubBodygetStaticFunctionWithReceiversisGetFieldOfUnitfindTailCallgetEntriesFieldForEnumisGetEntrieshasEnumEntriesFunctionbuildValuesFieldpassConstructorArgumentsbuildEnumEntryFieldbuildValuesHelperFunction)rewriteCompoundAssignmentAsPrefixIncrDecr!getInlineableValueForTemporaryValgetOperandsIfCallToEQEQOrEqualsrewritePostfixIncrDecrrewritePrefixIncrDecrisLoopVariable.reuseLoopVariableAsInductionVariableIfPossiblehasSameLineNumber#removeUnnecessaryTemporaryVariablesoptimizePropertyAccess
isNegation
prefixIncrfindLoopVariablePosition getAccessCallForImplicitReceivergetAccessCallForScriptInstancegetAccessCallForEarlierScriptgetDispatchReceiverExpressionneedsScriptReceiver"isCurrentScriptTopLevelDeclarationtransformAnnotationCalltransformParentvisitTargetElementremapSuperTypesvisitStarProjectiongetMappingForClass&replaceUseOfPromotedParametersWithRefs"promoteParametersForCapturesToRefscallToStringunwrapImplicitNotNullnormalizeArgumentlowerInlineClassArgument
parseElvisparseSafeCall$getOverriddenMethodsRequiringBridgesmapDeserializedLambdaisDefinitelyNotNullcreateLambdaMetafactoryCallisCompatibleArrayTypejvmOriginalMethodTypeisDefinitelyNotNullValwrapClosureInDynamicCallisDelegatedcomputeNotNullAssertionTexttrimForRuntimeAssertiongetArrayElementLowerTypeirObjectEqualsjvmInvokeDynamicgenerateSerializedLambdaEqualsvalidSourcePositiongenerateDeserializeLambdaMethod rewriteIndyLambdaMetafactoryCallsourceViewForgetClassContext#generateCreateDeserializedMethodRefjvmMethodHandleextents
leaveClassisAppendFunction,findStringBuilderAppendFunctionWithParameterappendWindowvisitTypeAliasestransformExpressionConsequentlyrequiresHandlingvisitAnonymousObjectrequiresAnyHandlingtransformStatementConsequentlycomputeStubsForSuperClassareTypeParametersEquivalentcreateStubMethodgenerateRelevantStubMethodscreateRemoveAtStubcreateStubFunscomputeSubstitutionMapareValueParametersEquivalentisReturnTypeOverrideComplianttoJvmSignatureliftStubMethodReturnTypeisEffectivelyOverriddenBycomputeStubsForSuperClassescopyWithSubstitutioncopyWithCustomTypeSubstitutionreplaceOrigin	mapTargetgenerateTargetAnnotationgenerateDocumentedAnnotationgenerateRepeatableAnnotationgenerateRetentionAnnotationcontainsUsagesOffindNearestBlocksForVariablessubListWithoutLastmakeBodyWithAddedVariables+extractVariablesSettersToOuterPossibleBlockaddFakeLocalVariabletoLambda	wrapFieldtransformDeclarationStatusneedsStaticProxyshouldReplaceWithStaticCallaccessorBody	canInlinefoldSafeCall
irEqEqNullirValNotNullisJvmNullable!isFoldedSafeCallWithNonNullResultwrapWithBlock	foldElvisgetReplacementFacadeClassOrNullmakeAnonymousInitializerStaticcopyConstProperty1implicitCastKFunctionReceiverIntoFunctionIfNeededgenerateCloneImplementationgenerateDelegationToDefaultImplgetOnlyInlinableArgumentsisInlinableExpressionirVarargOfRawFunctionRefsisEqualsFromAnycreateFakeFormalTypeParameters(wrapLambdaReferenceWithIndySamConversion+createFakeBoundReceiverForJvmStaticInObject,createProxyLocalFunctionForIndySamConversionirRawFunctionRefinlineAdapterCallIfPossible)createFunInterfaceConstructorInvokeMethod'getDeclarationParentForDelegatingLambda,wrapSamDelegatingLambdaWithIndySamConversioncalculateOwnerKClass generateConstructorCallArgumentscalculateOwner5wrapFunctionReferenceInsideBlockWithIndySamConversion getAdaptedCallableReferenceFlags.wrapSamConversionArgumentWithIndySamConversionisSuspendFunctionReferencegetReceiverFieldcreateLegacyMethodOverridegetFunctionReferenceFlagswrapWithIndySamConversion generateSamEqualsHashCodeMethodshasVarargMappedToElement2canGenerateIndySamConversionOnFunctionalExpressionisHashCodeFromAnybuildOverridevisitReceiverParametercreateReflectedKPropertyusesParametercomputeSignatureStringcreateKPropertySubclasspropertyReferenceKindcachedKPropertylocalPropertyOwnerlocalPropertyIndexcreateSpecializedKPropertyrememberLocalPropertypropertyReferenceKindForfillReflectedPropertyArgumentsgetBoundReceiverisSyntheticDelegateMethodisDefaultImplsBridge#reinterpretAsDispatchReceiverOfTypeisCloneableCloneneedsToVisitGetValuevisitValueDeclarationneedsToVisitSetValue!visitIncrementDecrementExpressiontransformSimpleFunctionFlatvisitErrorAnnotationCallvisitWhenSubjectExpressionneedsToVisitCallneedsToVisitFunctionAccesstransformPropertyAccessorcreateBridgeFunctionneedsToVisitSetFieldneedsToVisitReturntransformFunctionFlatneedsToVisitFunctionReference transformCallableReferenceAccesstransformTypeAliastypedArgumentListneedsToVisitStringConcatenationneedsToVisitGetFieldsignatureRequiresManglingneedsToVisitVariablevisitPlaceholderProjectionneedsToVisitClassNewtransformFlattenedConstructorkClassArrayToJClassArraykClassToJClassIfNeededkClassToJClassisKClassArrayhandleInlineFunctionhandleInlineLambdaprocessLocalDeclarations"isCallToMethodWithTypeCheckBarrier2findMostSpecificJavaClassWithoutKotlinSuperclassessuperQualifierSymbolForField!getJavaFieldContainingClassSymbol1removeUselessDeclarationsFromCapturedConstructors!reuseConstructorFromOriginalClasssetUpOriginalAttributes)setUpCorrectAttributesForAllInnerElementshasReifiedTypeArguments(collectDeclarationsThatMustBeRegeneratedaddReplacementmakeTypeArgumentsFromFunctionirContainerhandleSavedExpressionmakeTypeArgumentsFromFieldtransformWhileLoopreplaceMfvcNotStaticFieldspassTypeArgumentsWithOffsetssplitExpressions'makeFlattenedExpressionsWithGivenSafetyvisitTypeParametersOwnergetCurrentScopeSymbol)removeExtraSetVariablesFromExpressionListmakeReplacementvisitLambdareplaceMfvcStaticFieldsvariablesSaveraddDefaultArgumentsIfNeededremoveAllExtraBoxesflattenExpression"transformWrappedDelegateExpressionmakeNewArguments4collectRegularClassMfvcPropertiesOrFieldsReplacementregisterReplacement handleFlattenedGetterExpressionsregisterPossibleExtraBoxUsagemakeNewLambdamakeInitializerReplacementhasLambdaLikeOrigin"makeNewDeclarationsForRegularClass-replacePrimaryMultiFieldValueClassConstructor#castExpressionToNotNullTypeIfNeededvisitLazyExpression*visitFromMissingDependenciesNamedReferencehandleNonSpecificNewClass#transformIntegerLiteralOperatorCallflattenExpressionTovisitErrorResolvedQualifiervisitCheckedSafeCallSubjectgetSynthAccessFlag"isPrivateCompanionFieldInInterfacecomputeFieldFlagsmaterializedAtmaterializeAtBoxedcoerceToBooleanmaterializedAtBoxedmaterializedanyTypeArgumentforEachBlockUntil	withBlockhandleBlocklocalGapScopevisitCheckNotNullCall)isBareTypeParameterWithNullableUpperBoundisSyntheticMarkerParameteracceptWithStateMachinesuspendForInlineToOriginaloverridesReturningDifferentTypecontinuationClass&anyOfOverriddenFunctionsReturnsNonUnitisSuspendCapturingCrossinlineisReadOfInlineLambdacalculateMethodFlags#getVisibilityForDefaultArgumentStubisDeprecatedHidden0shouldNotGenerateConstructorParameterAnnotationsgenerateParameterAnnotationsgetThrownExceptions*shouldGenerateAnnotationsOnValueParameters#getAnnotationDefaultValueExpression
doGeneratecreateFrameMapWithReceivers&generateAnnotationDefaultValueIfNeededgenerateAssertFieldvisitIntegerLiteralOperatorCall visitResolvedContractDescription(isAccessorForDeprecatedJvmStaticPropertyisInlineOnlyPrivateInBytecodeisDeprecatedFunctionisInlineOrContainedInInline"innerAccessFlagsForModalityAndKind#getVisibilityAccessFlagForAnonymousisDeprecatedCallablemapClassSignaturegetVisibilityAccessFlagForClass visitAnonymousFunctionExpressionvisitErrorLoopgetVisibilityAccessFlagcalculateInnerClassAccessFlagsgetSourceMapperspecialCaseVisibilitynonLocalReturnLabeltransformComparisonExpressioncomputeJvmMethodcanHaveSpecialBridgecomputeSpecialBridgetransformWhenSubjectExpressiontransformErrorAnnotationCallvisitFileAnnotationsContainerreportSuspendTypeUnsupportedisMutableCollectionType:reportNonReifiedTypeParameterWithRecursiveBoundUnsupportedputClassInstancegenerateTypeParameterContainertransformExpressionmapRawSignature(reportPredefinedMethodSignatureConflictsisSpecialOverride
trackFieldgetOverriddenFunctions!getConflictingJvmDeclarationsDatatrackMethodreportMethodSignatureConflictsreportJvmSignatureClashtrackFakeOverrideMethodreportFieldSignatureConflictscollectOverridesOfcollectOverridesTreegetClassThatContainsDeclarationstashSmapForGivenTry)getDeclarationWhereGivenElementWasInlined.setUpAdditionalLineNumbersBeforeLambdaInliningdropCurrentSmapisInvokeOnDefaultArg-setUpAdditionalLineNumbersAfterLambdaInliningbuildSmapFor(generateNullabilityAnnotationForCallable'genAnnotationsOnTypeParametersAndBounds!isInvisibleForNullabilityAnalysisgenAnnotationgenAnnotationsgenerateAnnotationDefaultValuegetRetentionPolicygenAnnotationArgumentsgenCompileTimeValuegetAnnotationArgumentJvmNamegenerateTypeAnnotations5isMovedReceiverParameterOfStaticValueClassReplacementextractAnnotationsgenerateAnnotationIfNotPresentgeneratePermittedSubclassesgenerateInnerAndOuterClassesgenerateAssertFieldIfNeeded!getRegeneratedObjectNameGenerator generateKotlinMetadataAnnotationgenerateFieldhasInvalidName	mapToJavaaddInnerClassInfostoreSerializedIrloadSourceFilesInfo3shouldSkipCodeGenerationAccordingToGenerationFiltergenerateMethodNodestubsForCollectionClasses computeStubsForCollectionClassesmapTypeCommonisBigArityFunctioncomputeClassInternalNamevisitTypeParameterRefsOwnertransformFunctionCallmapRangeTypeToPrimitiveTypeunwrapOriginwrapToOrigin"findPsiElementForDeclarationOrigintransformDoWhileLoopvisitMemberDeclarationvisitErrorTypeRefvisitContractDescriptionvisitAnnotationArgumentMappingvisitClassReferenceExpressionvisitComponentCallvisitWrappedDelegateExpressionvisitResolvedDeclarationStatusnewAnnotationvisitElementWithResolveStateinvokeGetClass
invokeWithcheckTopValueForNullreferenceEqualsgenerateSignatureString3shouldBoxSingleValueParameterForSpecialCaseOfRemove#mapOverriddenSpecialBuiltinIfNeeded(toIrBasedDescriptorWithOriginalOverrides#mapFakeOverrideSignatureSkipGenericisPublishedApi#getSuppressWildcardsAnnotationValue$forceBoxedReturnTypeOnDefaultImplFunisJavaLangRecordforceFoxedReturnTypeOnOverridemapToMethodHandlegetMethodKindTagisInvisibleInMultifilePart&getInternalFunctionForManglingIfNeeded%getDifferentNameForJvmBuiltinFunctiongetJvmModuleNameForDeserializedmapCalleeToAsmMethodevalMethodTypeevalMethodHandle"evalBootstrapArgumentIntrinsicCallevalOriginalMethodTypegenerateMethodHandlegenerateBootstrapMethodArgargTypesnewReturnTypeisVoidOrPrimitiveWrapperputPrimitiveTypecheckTypeAndCompareinvokeStaticComparisoncreateWithResultgenInvokeInstructionWithResultloadArgumentsgenArgforEveryDeclarationToSerializedeclarationstatementBodyexpressionBodyreferencePublicSymbolmakeSimpleFakeOverrideBuilder!buildFakeOverridesForLocalClassesdeserializeFromByteArrayserializeTopLevelClassserializeJvmIrFileserializeAuxTablesreturnAsmAndIrTypesgenTryCatchCoverfindLocalIndex*setExtraLineNumberForVoidReturningFunctiongetClassWithDeclaredFunctiongenerateConstructorArgumentsunwindBlockStackresultIsActuallyAnygenmarkNewLabel"writeParameterInLocalVariableTablegenerateStringConstantbuildOrGetClassSMAP'writeValueParameterInLocalVariableTablegenerateClassInstance'splitLocalVariableRangesByFinallyBlocks+generateFakeContinuationConstructorIfNeededmarkLineNumberwriteLocalVariablesInTablegenOrGetLocalgenToStackValuegetSuspensionPointKindendUnreferencedDoWhileLocalsvisitInlinedFunctionBlockgetOrCreateCallGeneratornoLineNumberScopegenerateNonNullAssertionsnoLineNumberScopeWithCondition"generateGlobalReturnFlagIfPossiblegenerateFinallyBlocksIfNeededmarkNewLinkedLabelgenerateClassLiteralReferenceisDefaultValueForTypegenerateNonNullAssertion,shouldGenerateNonNullAssertionsForPrivateFunvisitTryWithInfogenFinallyBlockunboxInlineClasshasMangledParametersgetRequiresManglingremoveUnreachableLabelsgenBranchTargets,extractSwitchCasesAndFilterUnreachableLabelsareConstUIntComparisonsgeneratePrimitiveSwitchareConstIntComparisons	genSwitchgenerateUIntSwitchgenOptimizedIfEnoughCasesshouldOptimizegenIntSwitchcheckTypeSpecificsisCoerceFromUIntToIntareConstantComparisonsareConstStringComparisonstransformFilefunctionByNamefieldByNamecodegenPhase	unboxTypeasInfoForManglingmangledNameFor3keepTrackOfOverridesForPossiblyClashingFakeOverridecomputeStoredFileSignaturevisitElvisExpressionisCapturingTypeParameterisMultifileBridgescopedVisibilityprimitiveComparisonIntrinsics&binaryFunForPrimitivesAcrossPrimitivesunaryFunForPrimitivesbinaryOpgetParameterFqName#intrinsicsThatShouldHaveBeenLoweredarrayMethodsbinaryFunForPrimitivesnumberConversionMethodscreateKeyMappingcreateJavaLangReflectClasscheckValuesCountisRepeatableSetter#savableStandaloneVariableWithSetterunwrapBlockmakeSetterExpressionsisRepeatableAccessorsavableStandaloneVariableisRepeatableGetter$makeTypeFromMfvcNodeAndTypeArgumentsaddSetterStatementsvisitDiagnosticHoldermakeSerializerSessionstubOrphanedExpectSymbols
visitLabelvisitEffectDeclarationvisitBinaryLogicExpression getStaticAndCompanionDeclaration	makeProxygetDefaultImplsClassgetStaticBackingFieldgetDefaultImplsFunctiongetFieldForEnumEntry!getOriginalFunctionForDefaultImpl'getRepeatedAnnotationSyntheticContainergetDefaultImplsRedirectionmakeBoxedExpressionmakeTypeArgumentsFromTypegetSubnodeAndIndices!validateGettingAccessorParametersallEqualcollectLeavesUnboxMethods#createInstanceFromValueDeclarationsneedsMfvcFlatteningrequireSameSizesisDefaultGetter-createInstanceFromValueDeclarationsAndBoxTypeflatMapLeavesrequireSameClassesgetGetterField	mapLeavesmakePatchParentsPhasebuildJvmLoweringPhasesirInlinerIsEnabledmakeCheckParentsPhasebuildLoweringsPhaseaddClasscreateNameableMfvcNodesmakeMfvcPrimaryConstructormakePrimaryConstructorImplmakeUnboxMethod+updateAnnotationsAndPropertyFromOldPropertycollectPropertiesAfterLoweringmakeBoxMethod&collectPropertiesOrFieldsAfterLoweringisKotlinExternalStubmakeSpecializedEqualsMethodcreateIntermediateMfvcNodegetRootNode3createIntermediateNodeForMfvcPropertyOfRegularClassgetOverriddenNodemakeRootMfvcNodeSubnodescreateLeafMfvcNode,createIntermediateNodeForStandaloneMfvcFieldgetterIfDeclaredvisitPackageDirective isMappedIntrinsicCompanionObjectmakeFullMethodNamemakeFullFieldNamevisitLazyBlockmakeReceiverCopycanUsePrivateAccessunsafeCoerce	getIrTypemakeExpressionmakeCopyorSavedToVariable"transformQualifiedAccessExpressionbuildReplacementInnergetSpecializedEqualsMethodvisitAnonymousObjectExpressiontransformWhenExpressiontransformField&visitResolvedReifiedParameterReferencegetActualFunctionisOrphanedExpectgetActualConstructorensureClassParentgetActualPropertygetActualClassfindBuiltInClassDescriptorbindIrBuiltInsvisitSuperReferencetransformScripttransformVariableAssignmenttransformAugmentedArraySetCall=isValueClassMemberFakeOverriddenFromJvmDefaultInterfaceMethodreplaceOverriddenSymbolsvisitFunctionTypeParametertransformDeclarationcomputeOverrideReplacementcommonBuildReplacementInnerisRemoveAtSpecialBuiltinStubgetReplacementFunctionvisitWrappedExpressiongetLocalClassTypegetOverridesWithoutStubsputLocalClassTyperecordOverridesWithoutStubsgetOrCreateClassCodegengenerateModuleInFrontendIRModeinvokeCodegengetModuleChunkBackendInputinvokeLowerings'collectAllDependencyModulesTransitivelymakeConstructorAccessormakeSetterAccessorSymbolaccessorNameaccessorNameForSettergetSyntheticSetteraccessorNameForGetter(getSyntheticConstructorWithMangledParamsgetSyntheticConstructorAccessorfieldAccessorSuffix*isOrShouldBeHiddenAsSealedClassConstructorcreateAccessorBodyForSettermakeSimpleFunctionAccessorgetSyntheticGettercreateSimpleFunctionCall$getSyntheticConstructorOfSealedClasscreateAccessorBodyForGettercopyAllParamsToArgsaccessorParentgetSyntheticFunctionAccessormakeGetterAccessorSymbol'isOrShouldBeHiddenSinceHasMangledParams	getJsCodeshouldVoidifyvoidifygetInlinedValueTypeIfAnyenqueueValueParameterTypeenqueueParentClassenqueueTypeprocessIrFunctionenqueueRuntimeClassOrAnyeraseUpperBoundTypetransformGenericCall
onAllFilesgenerateWasmTestscreateJavaPrimitiveClass/generateCallableReferenceSuperclassConstructorstypeToStringValueOfFunctionbuildAnnotationConstructor"addSuspendLambdaInterfaceFunctionscreateIncrDecrFunaddArraysCopyOfFunctiongetPropertyReferenceClassgetArraysCopyOfFunctiongetJvmSuspendFunctionClassgetJvmFunctionClassaddArraysEqualsFunction generateCallableReferenceMethodsappendParameterListgetRegularClassMfvcPropertyNodegetMfvcPropertyNodegetFieldsToRemove$makeAndAddGroupedValueParametersFromgetMfvcFieldNodeaddFieldToRemovetransformAnonymousInitializergetRootMfvcNodeOrNull makeMethodLikeRemappedParametersuseRootNodecreateConstructorReplacementcreateAssociatedObjectAddvisitResolvable&createClosureBoxConstructorDeclaration/createClosureBoxConstructorParameterDeclarationvisitReference#createClosureBoxPropertyDeclarationtransformEnumEntry createClosureBoxClassDeclarationvisitResolvedCallableReferenceprocessExportFunctionmarkExportedDeclarationsvisitClassLikeDeclaration
cacheValuegenerateIsExternalClassgenerateTypeCheckgenerateIsSubClasslowerImplicitCast	isInlinedgenerateIsInterface
narrowTypegenerateTypeCheckNonNulllowerIntegerCoercion"generateTypeCheckWithTypeParameterexcludeDeclarationsFromCodegen'numDefaultParametersForExternalFunctiongetKPropertyImplConstructorirKTypecreateKTypeGeneratorcreateLocalKPropertycreateKPropertyisKMutablePropertyType hasExcludedFromCodegenAnnotationgetJsPrimitiveTypehasWasmNoOpCastAnnotationhasWasmAutoboxedAnnotationgetWasmOpAnnotationgetWasmArrayAnnotationgetJsFunAnnotation%hasWasmPrimitiveConstructorAnnotationgetWasmImportDescriptor	allFieldsallSuperInterfaceswasmSignaturefilterVirtualFunctionshasInterfaceSuperClasscreateJsCodeForFunctiontransformCheckNotNullCallprocessExternalDeclarationprocessExternalConstructorprocessExternalProperty$referenceTopLevelExternalDeclaration%generateInstanceCheckForExternalClass$generateExternalObjectInstanceGetterprocessExternalSimpleFunctionappendExternalClassReferenceprocessFunctionOrConstructorlowerExternalClassbuildUnreachableForVerifier buildUnreachableAfterNothingTypeaddressToStringtoLittleEndianBytesTotoLittleEndianBytesisCanonicalgenerateConstExpressiongetEffectiveValueParameters!generateDefaultInitializerForTypevisitContextReceivertoJsStringLiteralvisitTypeProjectionWithVariancevisitSafeCallExpressiontoWasmBlockResultTypetoWasmResultTypetoWasmGcRefTypetoWasmFieldTypetoWasmValueTypetoBoxedInlineClassTypeisBuiltInWasmRefTypegetRuntimeClassisExternalTypeaddHashCodeVariablecreateSimpleBucketSelectorscreateEqEqForIntVariable$tryMatchCaseToNullableStringConstantcreateWhenForBucketSelectorscreateBucketSelectorscreateTransformedWhenasEqCalltryGenerateOptimisedWhentryExtractEqEqNumberConditionscreateBinaryTablegenTableIntSwitch	addToRootaddUnion
mergeRootsalignUpirSymbolDebugDump
jsCodeNameinterfaceTablecreateVirtualTableStructcreateVTablecreateDeclarationByInterfacebinaryDataStructcreateClassITablecollectInterfaceTablesacceptVisitorreferenceGlobalVTablegetStructFieldRefdefineGlobalFielddefineClassITableInterfaceSlot!referenceClassITableInterfaceSlotgetClassMetadatareferenceGlobalClassITabledefineGlobalClassITablereferenceConstantArrayreferenceGlobalFieldtransformBlockResultTypedefineVTableGcTypetransformFieldType!isAlreadyDefinedClassITableGcTypereferenceClassITableGcTypereferenceFunctionTypeaddJsModuleImport"referenceStringLiteralAddressAndIddefineGcTypetransformResultTypereferenceNonNothingTypegenerateTypeInforegisterInitFunctionreferenceTypeIddefineFunctiondefineFunctionTypedefineClassITableGcType	addExportgetInterfaceMetadatareferenceGcTypetransformValueParameterTypereferenceVTableGcTypetransformBoxedTypedefineGlobalVTableaddJsFundefineLocaldefineNonLocalReturnLevelreferenceLoopLeveldefineLoopLevelreferenceLocalreferenceNonLocalReturnLevelwriteCompilationResultgenerateEsmExportsWrappergenerateSourceMapcompileToLoweredIrgenerateAsyncJsWrappercompileWasm isDownCastAlwaysSuccessInRuntimetryGenerateConstVarargArraytryToGenerateIntrinsicCallbuildGetUnitgenerateBox$generateObjectCreationPrefixIfNeededgenerateAsStatementgenerateRefNullCastgenerateRefTestvisitTypeOperatorCallgenerateInstanceFieldAccess tryToGenerateWasmOpIntrinsicCallvisitThisReferencevisitFunctionReturntryGenerateVarargArraygenerateAnyParametersrecoverToExpectedTypegenerateWithExpectedTypecreateInitFunctionsyntheticFilegetExcludedPackageFragment!transformFunctionAccessExpressionisImmediatelyCreatedArraytransformSimpleFunctionirSizetryVisitWithNoSpreadirCreateArray
irCopyIntolinkWasmCompiledFragments(callGetProgressionLastElementIfNecessaryisTypeOfIntrinsic%isLateinitIsInitializedPropertyGettertransformThrowExpressioncreateArrayOfExpressionisInlineFunWithReifiedParameteraddDispatchReceiver)getAdapteeFromAdaptedForReferenceFunctionaddExtensionReceiverisUnconditionalisPurevisitEqualityOperatorCallmakeCustomWasmModulePhasemakeWasmModulePhaseconvertToExclusiveLowerBoundasInlinableFunctionReference
moveBodyTo'getAdditionalStatementsFromInlinedBlockasInlinableLambda.getDefaultAdditionalStatementsFromInlinedBlock%putStatementsInFrontOfInlinedFunction1getNonDefaultAdditionalStatementsFromInlinedBlockasInlinablecreateParameterMappingputStatementBeforeActualInlineisFunctionInliningisLambdaInlining%getOriginalStatementsFromInlinedBlockisArrayTypevisitControlFlowGraphOwnertransformValueParameter
kproperty1isStringPluskmutableproperty0kmutableproperty1kmutableproperty2
kproperty0
kproperty2progressionprogressionOrNulltransformTypeOperatorCall"createTemporaryVariableIfNecessarycastIfNecessary&createLoopTemporaryVariableIfNecessaryextractHeadertransformElvisExpressionisInductionVariableasElementType
asStepType
fromIrTypeconvertIrConstconvertToExclusiveUpperBoundconvertIrCallincrementInductionVariableensureNotNullablebuildLoopCondition
asUnsignedasSignedbuildJavaLikeDoWhileCounterLoopcreateNegatedConditionCheck*moveInductionVariableUpdateToLoopConditionfindOverloadForReceivervisitBackingFieldReferencefindContentToStringOverloadgetInternalClassmaybeGetFunctionfindVoidConsumerwasmPrimitiveTypeNamefindContentHashCodeOverloadrevertToLastInclusiveisTopLevelInPackageisAdaptedFunctionReferencetransformTryExpressiongetContinuationParameter loweredSuspendFunctionReturnType'getOrCreateFunctionWithContinuationStubwithBit
withOutBitbuildContainsComparisonisPromotableToInt matchStdlibExtensionContainsCallisPromotableToUIntcomputeComparisonClasscreateKotlinClosureCallercreateNullableAdapter$kotlinToJsAdapterIfNeededNotNullablejsInteropTypeSignaturedoubleIfNumber createJsToKotlinClosureConverterjsInteropNotNullTypeSignature createKotlinToJsClosureConvertortransformExportFunctionvisitRawContractDescriptionkotlinToJsAdapterIfNeeded$jsToKotlinAdapterIfNeededNotNullableadaptIfNeededcreateJsClosureCallerjsToKotlinAdapterIfNeededcreateAdapterFunctionBodytransformExternalFunctionadaptcreateNotNullAdapterremapTypeAndOptionallyEraselowerHeadergatherLoopVariableInfospecializeIteratorIfPossiblelowerWhileLooptransformWhenBranchgenTailCallirImplicitCoercionToUnitirThrowcopyAsValueParameter
callsSuperirCatch	actualizedelegationKindlowerConstructorshouldInitializeOuterThispossibleToGenerateJumpTabletransformEnumEqualsgetOthertransformBranchSubexpressionsuggestVariableNamelowerTailRecursionCallsbuildOrGetNullableFieldreplaceTailExpressiondoInitializebuildSymbolbuildIrcreateStaticBodilessMethodtoInlineClassImplementationNamegetOrCreateStaticMethodprimaryConstructorParameterMapshouldDropConstReceiverlowerConstReadmaybeComputeTrimMarginmaybeComputeTrimIndentgetConstantStringmatchTrimIndentmatchTrimMarginwithBuildertryInlineSimpleGetterisSimpleGetterisSafeToInlineInClosedWorldtryInlineSimpleSetterisSimpleSettercanBeInlinedcheckNoPropertiesvisitFunctionAccessExpressionmakeDescriptiongetSpecialMethodInfofindSpecialWithOverridetoDescriptionconstMinusOnegetSecondArggetBuiltInWithDifferentJvmNameisOptionalAnnotationClasscopyAndActualizeDefaultValuetryCopyDefaultArguments%visitContextReceiverArgumentListOwnershouldRemoveTopLevelDeclarationfindActualForExpecttransformBinaryLogicExpressionhandleFieldextractInitializershandleAnonymousInitializersaveAndComputegetImmediateChildrengetVariableId
handleLooplowerSharedVariablescollectSharedVariablesrewriteSharedVariablesgenerateHandleCallselectArgumentOrDefaultdispatchToImplementationneedSpecialDispatchprepareToBeUsedInarrayInlineToSizeConstructor(collectPotentiallyCapturedTypeParametersgetFunctionClosuregetClassClosureprocessMemberAccessbuildClosureupdateFromIncludedincludeInParentseeVariable#addPotentiallyCapturedTypeParametercollectConnectedClosures
getClosureseeTypenormalizeUnsignedValue	tryToFoldconstToStringbuildIrConstanttryFoldingBuiltinBinaryOpscoerceToDoubletypeConstructorNameregisterBuiltinBinaryOpfromFloatConstSafetryFoldingUnaryOpstryFoldingBinaryOpsisLocalNotInnerisMovedReceiverfixThisReferencenameForCallableMembervisitContractElementDeclarationgenerateEqualsHashCodecreateObjectProxyuseInTypeOperatoruseForVariable
useAsValueuseAsArgumenttransformThisReceiverExpressionuseForFieldvisitImplicitInvokeCallgenerateDefaultsFunctionImpl$generateDefaultArgumentsFunctionName'findBaseFunctionWithDefaultArgumentsForcopyReceiversFromgenerateDefaultsFunctioncopyAttributesFromcopyReturnTypeFromgenerateHashCodegenerateGetFunctionDelegategenerateEqualsinlineFunctionReferencewrapInStubFunctionmarkAsRegeneratedevaluateArguments'shouldBeSubstitutedViaTemporaryVariableinlineAdaptedFunctionReferencebuildParameterToArgumentgetOriginalParameter%unwrapAdditionalImplicitCastsIfNeededinlineFunctioninlineFunctionExpressioninlinePropertyReference$evaluateReceiverForPropertyWithFielddoImplicitCastIfNeededToinlineFieldandAllOuterClasses	visitJumpcreateFunctionReferenceWrapper
inventName	makeLocalvisitResolvedNamedReferenceplatformSetupcreateAnnotationImplementationgetAnnotationPropertiesmoveValueArgumentsUsingNames"addConstructorBodyForCompatibilityimplementGeneratedFunctionsgeneratedEqualsgenerateEqualsUsingGettersisStringConcatenationExpression#collectStringConcatenationArgumentscreateToStringMethodDeclarationcreateHashCodeMethodDeclarationcreateEqualsMethodDeclarationcollectOverridenSymbolsaddSyntheticFunctiontransformArrayOfCallcopyIfTrivialgetElseBranchResultOrNull
fuseIfNullmatchIfNullExprirInlineFinallyusingtoIrtransformJumpirReturnableBlockperformHighLevelJumpvisitResolvedImport!visitLegacyRawContractDescription
toPhaseMap	downlevelinvokeToplevelcopySavingMappingsperformByIrFileadjustDefaultArgumentStubsisValidationNeededvalidationCallbackmakeVerifyActionisDumpNeededmakeDumpAction
dumpToFiledumpIrElementdumpToStdoutinvokeSequentialinvokeParallelnamedUnitPhasemakeIrModulePhaseunitSinktakeFromContextnamedOpUnitPhasemakeIrFilePhasemakeCustomPhaserunAndProfilevisitLoopJumptransformCatchvisitComparisonExpressiontransformReturnExpression$visitNamedReferenceWithCandidateBasevisitThisReceiverExpressionvisitResolvedQualifiervisitSmartCastExpressionvisitDelegateFieldReferencevisitContractDescriptionOwner$generateBridgesForFunctionDescriptorfindConcreteSuperDeclaration
raiseIssueswitchgetProblemModuleIddescribeDependencyStates.findPotentiallyConflictingIncomingDependenciesfindMatchingModuleappendProjectDependencies(appendPotentiallyConflictingDependencies.findPotentiallyConflictingOutgoingDependenciestoAnnotationArgumentMappingtryTransformSuspendFunctionsimplifyTailSuspendCallslooksLikeEnumEntriesregisterUsableregisterUnusablesetCommonParentgrabDeclarationsToPatch'createPartialLinkageSupportForLowerings	runInFile#generateStubsAndPatchUsagesInternalexploreSymbol%exploreAnnotationConstructorParameterfirstUnusableexploreSuperClassesexploreAnnotationConstructorexploreType
asUnusableexploreIrElementunimplementedAbstractCallableinvalidConstructorDelegationtransformParameterdeclarationKindillegalNonLocalReturnwrongTypeOfDeclaration'memberAccessExpressionArgumentsMismatch!declarationWithUnusableClassifier expressionWithUnusableClassifiercantInstantiateAbstractClassinaccessibleDeclarationsuspendableCallWithoutCoroutineunusableAnnotationnoDeclarationForSymbol
expressiondeclarationKindNamedeclarationNameIsKindunusableClassifierdeclarationNametransformConditiontransformBlockreplaceKindreplaceExhaustivenessStatus$createPartialLinkageSupportForLinker%isEffectivelyMissingLazyIrDeclarationcreateNestedtransformSubjectrenderAndLogLinkageErrortransformFinallyBlock$startOffsetOfFirstDenotableIrElementcheckOverriddenSymbolsvalidateFakeOverridesappendExpectActualClassMapappendExpectActualMemberMapgetUserVisibleModulesmergedModules;stampDependenciesWithRequestedVersionEqualToSelectedVersiongetUserVisibleModuleIdmodulesFromDeserializers'buildPropertyWithDisambiguatedSignaturebuildFakeOverrideChainsForClass'buildFunctionWithDisambiguatedSignatureprovideFakeOverrides!computeFunctionFakeOverrideSymbolenqueueClass!computePropertyFakeOverrideSymbolreportMissingActual#generateIrElementFullNameFromExpect(generateActualIrClassOrTypeAliasFullNameappendElementFullNamecontainsOptionalExpectation
getMatchesremoveExpectDeclarationsshouldRemoveExpectDeclarationmergeIrFragmentsappendTypeParametersMaptransformCatchescreateFakeOverridePropertyisBuiltinMembercreateFakeOverrideFunctionaddActualClasstransformTryBlockprocessSupertypesaddLinkactualizeSymboltransformResultresolveSymbolCollectionresolveMemberScopesourceElementrunOnFilePostfixtoMultiModuleActiongetPlatformIntrinsicExtensiontransformConversionTypeReftransformRhstransformLhstransformSelectortransformReceiverreplaceSelectorcreateLiftedDeclarationcollectLocalDeclarationssuggestNameForCapturedValuerewriteClassMembersisExtensionReceiver createTransformedValueParameterscreateFieldsForCapturedValuesfillArguments2)insertLoweredDeclarationForLocalFunctionscacheLocalConstructorsputAbsentOrSamesuggestLocalNamesetLocalTypeArgumentsisDispatchReceiverfindFirstUnusedNamemapValueParameters'createTransformedConstructorDeclaration generateNameForLiftedDeclarationrewriteFunctionBodylowerWithoutActualChangelowerLocalDeclarations recordTransformedValueParameters"collectClosureForLocalDeclarationsrewriteDeclarationsvisitMemberclosestDeclarationParentisCapturedReceiverisInlineDeclarationcreateNewCalltransformLeftOperandtransformRightOperandtransformOriginalExpressionreplaceConstructedTypeRef(replaceIsNullableLHSForCallableReferencewithModecollectForMangler replaceResolvedToCompanionObjectbuildErrorExpressionbuildErrorLoopreplaceHasQuestionMarkAtLHStransformAnnotationTypeRefreplaceAnnotationTypeRefreplaceArgumentMappingreplaceAnnotationResolvePhasetransformRValuetransformLValuereplaceLValuemanglePropertyAccessortransformLeftArgumenttransformRightArgumentreplaceDelegateProvidermangleContextReceiverParameter mangleExtensionReceiverParametertransformAnonymousFunctiontransformAnonymousObjectreplaceNonFatalDiagnosticsplatformSpecificFunctionMarksreplaceCalleeReferencereplaceContextReceiverArgumentsreplaceArgumentListreplaceExtensionReceiverreplaceSourcetransformCalleeReferencetransformTypeArgumentsmangleValueParametertransformExtensionReceiverreplaceDispatchReceiverplatformSpecificFunctionNamemangleTypeParametermangleTypeParameterReferenceappendSignaturemangleSimpleDeclarationspecialValueParamPrefixmangleTypeArgumentsstringManglecheckAllEqualisExportCheckmakeSerializedKlibMetadatadescriptorFileIdextractFileIdserializeKlibHeaderbuildKlibPackageFragmentmaybeChunkedserializeModuletransformDispatchReceivertransformImportstransformAnnotationsContainertransformStatementsisPubliclyVisibletransformExpandedTypeRefeliminateDeadCodeStatementscheckExpressionTypeArguments checkArgumentsAndValueParameterscustomConstructorCallCheckspatchDeclarationsperformRemovalcheckNotAbstractClassprecalculatedUnusableClassifierfilterUnusableAnnotationsisDirectMemberOfcheckExpressionTypemaybeThrowLinkageError!toPartiallyLinkedMarkerTypeOrNullcheckReferencedDeclarationhasBranchesonAfterMaybeThrowLinkageErrorfilterOverriddenSymbolscheckConstructorDelegationrewriteTypesInFunctioncheckReferencedDeclarationTypereplaceExpandedTypeReftransformChildrenWithRemovalpatchModuleFragmentsscheduleForRemovalexplore
encodeType
varianceIdinterleaveBits	decodeIntwithNewContextgetPackagesFqNamesfilterOutExpectsWithActualscreateNewContextfilterOutExpectsserializeHeaderbuildPackageProtoserializeDescriptorsemptyPackageProtosymbolKindIdcomposeSignatureForDeclarationcomposeContainerIdSignaturenotSupportedcomposeFileLocalIdSignaturedeserializeFqNamerecordActualsfindExpectsForActualsrecordRightHandSidesetSpecialJavaPropertysetSyntheticJavaPropertybuildSignatureplatformSpecificPackageplatformSpecificConstructorbuildContainerSignaturecombineHashdeserializeIrSymbolOrFailprivateDeclarationSignaturesignatureByDeclarationisLocalDeclarationassumeDeclarationSignatureallocateIndexedSignaturereplaceBodyResolveStatetransformContextReceivers
cityHash64bswapweakHashLen32WithSeedsshiftMixhashLen0to16fetch32cityHash128WithSeedrotatehashLen33to64
cityMurmur	hashLen16toLongLEtoIntLEcityHash128hashLen17to32fetch64hash128to64loadKnownBuiltinstransformTypeReffindSourceFileextractSerializedKdocStringsourceByIndexserializedIrModulebackendSpecificFileFiltergetDeprecationtransformInitializerdeserializeOnlyHeaderModuledeserializeOrResolveDeclarationtransformBackingFieldhandleExpectActualMapping$findDeserializedDeclarationForSymbolactualizeIrFunction deserializeAllReachableTopLevelsresolveModuleDeserializer	getFileOffinalizeExpectActualLinker9deserializeOrReturnUnboundIrSymbolIfPartialLinkageEnabledfinalizeExpectActualtryResolveCustomDeclaration"deserializeHeadersWithInlineBodiesdeserializeDirtyFilesdeserializeFullModuledeserializeIrModuleHeadermaybeWrapWithBuiltInAndInittopLevelKindToSymbolKindreplaceGetterdeserializeIrSymbolDatatransformSetterparseSymbolDatadeserializeIrSymbolToDeclarereferenceLocalIrSymbolreplaceSetter)checkIsFunctionTypeInterfacePackageFqNamecheckIsFunctionInterfacereplaceInitializertransformDelegatetransformOtherChildrendeserializeCompositeIdSignaturedeserializeLocalIdSignaturedeserializeAccessorIdSignature deserializeScopeLocalIdSignaturedeserializePublicIdSignaturegetDeprecationsInfodeserializeFileLocalIdSignaturedeserializeFileIdSignaturedeserializeSignatureDatasignatureToIndexMappingloadSignatureProto	itemBytesitemNullableBytesenqueueAllDeclarations#deserializeAllFileReachableTopLevel%deserializeFileImplicitDataIfFirstUseloadTopLevelDeclarationProto#findModuleDeserializerForTopLevelIdcomputeDeprecationInfogetSealedClassInheritorsisDirtyDescriptorvisitDeclarationStatuscheckIfPlatformSpecificExporthashIdvisitTypeParameterRefvisitArgumentListcomposePublicIdSignaturevisitTypeRefenqueueFilevisitNamedReferencedeserializeIrFiledeserializeExpectActualMappingvisitRegularClassresolveFunctionalInterfacecomputeFunctionClasscheckDeclarationParentsreportIrValidationErrorvalidateIrModulevalidateIrFilematchConditions
forEachBitresolveAccessorSignaturelookupTopLevelDescriptorsfindDescriptorByHashresolveCompositeSignatureisConstructorNameresolveCommonSignaturecheckSymbolTypedeserializeNullableIrType#deserializeIrLocalDelegatedPropertydeserializeIrFunctiondeserializeIrAnonymousInitdeserializeIrTypeArgumentdeserializeAnnotations deserializeSimpleTypeNullability deserializeDefinitelyNotNullType!withDeserializedIrDeclarationBaseisSkippableFakeOverridedeserializeString-deserializeMultiFieldValueClassRepresentationloadExpressionBodyProtodeserializeValueParametersdeserializeStatementBodydeserializeTypeParameterswithBodyGuardloadStatementBodyProtovisitResolvedTypeRefdeserializeIrTypeAliasdeserializeNamedeserializeExpressionBodydeserializeIrSymbolAndRemapreplaceInvocationKinddeserializeLegacySimpleTypecheckObjectLeakdeserializeDynamicTypedeserializeIrEnumEntryusingParentdeserializeTypeAbbreviationdeserializeIrConstructordeserializeSimpleTypedeserializeIrTypedeserializeIrFielddeserializeErrorTypedeserializeIrTypeParameterwithDeserializedIrFunctionBasedeserializeIrDeclarationOrigin$deserializeInlineClassRepresentationwithInitializerGuarddeserializeIrValueParameterdeserializeIrPropertydeserializeErrorDeclarationeraseDelegatedSymbolwithExternalValuedeserializeIrClass7computeMissingInlineClassRepresentationForCompatibilitydeserializeIrVariablerecordDelegatedSymboldeserializeIrTypeData!getSuperClassBySuperTypeListEntrygetDelegatePropertyIfAnygetNonPrivateTraitMethodsconstructFakeFunctionCallgetMemberDeclarationsToGenerate.getFunctionParametersForDefaultValueGenerationfindExpectedFunctionForActualcopyFunctions
mapMembersgetLineNumberForElementisFinalPropertyWithBackingFieldreportBackendExceptiongetMemberToGenerateisExhaustivegetMemberDescriptorsToGeneratenewDeclarationToValueMappingtransformStatustransformReceiverParameternewMappingImplcollectTailRecursionCallsresolveWithoutDependencieslowerScriptBodycompilationExceptionwrapWithCompilationExceptioncollectTailSuspendCalls(generateComponentFunctionsForDataClasses"generateCopyFunctionForDataClassesgenerateEqualsIfNeededgenerateHashCodeIfNeededgenerateToStringIfNeededdeserializeStringConcatdeserializeSyntheticBodydeserializeWhendeserializeOperationdeserializeSetFielddeserializeExpressiondeserializeDoWhiledeserializeCompositedeserializeCalldeserializeTypedSymboldeserializeIrStatementOrigindeserializeLoopHeaderdeserializeStatement$deserializeDelegatingConstructorCalldeserializeBlockBodydeserializeTypeOpdeserializeErrorExpressiondeserializeReturndeserializeGetEnumValuedeserializeWhiledeserializeThrow"deserializeDynamicMemberExpressiondeserializeTypedSymbolWhen$deserializeDynamicOperatorExpressiondeserializeConstdeserializeBranchdeserializeGetValue,deserializeIrLocalDelegatedPropertyReferencedeserializeVararg"deserializeInstanceInitializerCalldeserializePropertyReferencedeserializeErrorCallExpressiondeserializeSpreadElementdeserializeCatchdeserializeGetObjectdeserializeFunctionExpressiondeserializeGetFielddeserializeTypeOperatordeserializeConstructorCalldeserializeLoopdeserializeContinuedeserializeGetClassdeserializeBreakdeserializeBlockdeserializeSetValuedeserializeClassReferencedeserializeEnumConstructorCalldeserializeDynamicOperatordeserializeTrydeserializeVarargElementdeserializeMemberAccessCommondeserializeFunctionReferenceensureTypesEqualensureBoundensureNullableensureTypeIsprimaryConstructorvisitTypeAccessvisitFileNewvisitFieldNewcreateScopevisitPropertyNewunsafeLeaveScopevisitScriptNewunsafeEnterScopereplaceValueParametersreplaceReturnTypeRefreplaceBody generateDestructuringDeclarationtransformTypeParametersscheduleLeaveVariable"generateRangeOrProgressionPropertytransformFlatRestrictedaddConstantsFromConditions#checkAllItemsAreConstantsSatisfying'buildAppropriateSwitchCodegenIfPossiblegetConstantsFromEntrygetAllConstantsisThereConstantEntriesButNullsisStringConstantsSwitchisIntegralConstantsSwitchreplaceContractDescriptiontransformValueParameterstransformReturnTypeRefreplaceStatusincrementLoopVariableinvokeCharSequenceMethodreplaceReceiverParameterreplaceInlineStatus replaceControlFlowGraphReferencereplaceContextReceiverstransformContractDescriptionscheduleLeaveTaskreplaceDeprecationsProviderresolveLoopComponentgetPropertyGetterNamecheckPostConditionloopParameterevalCharSeqLengthOnStackvisitQualifiedAccessExpressionvisitPropertyAccessExpressionvisitStringConcatenationCall#getComparisonGeneratorForKotlinTypeisPrimitiveIntOrCoerciblegetRangeContainsTypeInfo*getComparisonGeneratorForRangeContainsCallvisitArrayOfCallinvokeComparevisitGetClassCallvisitConstExpression
putHighLowvisitAnnotationCallvisitVarargArgumentsExpressionvisitFunctionCallisSubtypeOfCharSequencecreateReversedRangeValueOrNullcreateRangeValueForExpression!getResolvedCallForRangeExpressionisSubtypeOfStringisLocalVarReferenceisCharSequenceIteratorCall"createIntrinsifiedRangeValueOrNull&createConstBoundedForInDownToGenerator.createConstBoundedForInReversedDownToGeneratorgetRangeElementTypecoerceUnsignedToULongcoerceUnsignedToUIntcompareAndJumpgenerateNullCheckIfNeededgenerateSubjectValueToIndexgenerateSubjectValueprepareConfigurationputTransitionOnceprocessConstant+generateSwitchInstructionByTransitionsTablefindNullEntryIndexpreferLookupOverSwitchcanCacheLength-createConstBoundedForInReversedUntilGenerator9createConstBoundedRangeForInReversedRangeLiteralGenerator,createConstBoundedForInRangeLiteralGeneratormapDefaultImplsisArraySizeMinusOne$canBeSpecializedByExcludingHighBoundisConstantOneisArraySizeAccessisProhibitedCharConstEndValue"coerceToRangeElementTypeIfRequired&createConstBoundedLongForLoopGeneratorisProhibitedLongConstEndValueisProhibitedIntConstEndValue%createConstBoundedIntForLoopGenerator(createConstBoundedForLoopGeneratorOrNullGenerationStateEventCallbackwrapWith isInlineClassConstructorAccessor'patchTypeParametersForDefaultImplMethodcreateTypeParameterWithNewName"isMostPreciseContravariantArgument!updateArgumentModeFromAnnotations$extractTypeMappingModeFromAnnotationisMostPreciseCovariantArgument"canHaveSubtypesIgnoringNullabilitygetInfoForMangling	md5base64)collectFunctionSignatureForManglingSuffix'getManglingSuffixBasedOnKotlinSignatureserializeValueParameterappendQuotedappendNameValue
jsonEscape)surroundInvokesWithSuspendMarkersIfNeededmarkNoinlineLambdaIfSuspend	findRange	fieldLoadregisterClassBuilderoldContinuationFromnewStateMachineForLambda&suspendLambdaWithGeneratedStateMachineshouldGenerateStateMachineisContinuationNotLambdaisInvokeSuspendnewStateMachineForNamedFunction(isSuspendFunctionWithFakeConstructorCallcreateNewMethodFromsafeToRemoveContinuationClassunregisterClassBuilderisSuspendLambda(findFakeContinuationConstructorClassNameisStateMachinereplaceFakesWithRealscreateTypeOfMethodBody)typeReferencesParameterWithRecursiveBoundgenerateTypeOfgenerateNonReifiedTypeParametergenerateTypeOfArgumentunrollArrayIfFewerThangetDeclarationSlotgetParameterByDeclarationSlottoSMAPMapping
toSMAPFiletoSMAPparseOrCreateDefaultparseStratummapNewIntervalmapNewLineNumbertoSourceInfocanReuseForisOrOverridesSamAdapterreportConflictingJvmSignatures"groupMembersDescriptorsBySignaturecomputeDiagnosticToReport&reportClashingWithPredefinedSignaturesasRawSignature#reportClashingSignaturesInHierarchymapDestToSourcemapSourceToDesthasMappingForSourceserializeEnumEntrymapSyntheticLineNumbergetOrRegisterNewSourcecapturedParamDescaddAllParameterscreateNodeWithFakeVariablescreateSignatureRemappermergeWithNotChangeInfoaddNotChangedClassaddClassToRemovegetChangedTypescalcClassesToRemoveaddChangedTypeprocessCurrentgetInterval"splitAndRemoveIntervalFromCurrentssplitCurrentIntervalsaddNewIntervalremapEndLabelremapStartLabelsplitAndRemoveCurrentIntervalscloneWithNewDeclarationIndex%createRemappingClassBuilderViaFactorycreateClassReader	visitCodeisRegeneratedAnonymousObjectsubInlineWithClassRegeneration recordRegeneratedAnonymousObjectsubInlineLambda	subInline
createRootaddAdditionalMappingshasNoAdditionalMappingregisterTypeParametercreateNewAndMergefoldFieldAccessChainIfNeededfoldNameenterDeclarationrecordTypeFromInlineFunctionexitDeclarationisTypeFromInlineFunctionenterIntoInliningexitFromInlininggenerateInlineIntrinsicForIrgenerateInlineIntrinsicisSpecialEnumMethodgetSpecialEnumFunDescriptorcreateSpecialEnumMethodBodydoClusteringregisterLineNumberAfterwardsputClosureParametersOnStackisInlineSuspendParameterisCallSiteIsSuspend*expandMaskConditionsAndUpdateVariableNodesdefaultLambdaFakeCallStubloadDefaultLambdaBodyinlineBridgeextractDefaultLambdasInfogetProvidedConstructorsisAload0 analyzeMethodNodeWithInterpreter'findCapturedFieldAssignmentInstructionsgetNextMeaningful$isAloadBeforeCheckParameterIsNotNullgetProvidedTopLevelDeclarationsperformInlinegenerateStubisLocalWithNoBoxinggetProvidedCallablescompileInlinegetProvidedNestedClassifiersputArgumentToLocalValgenerateAndInsertFinallyBlocksisBackwardsJumpisCapturedInlineParameter
leaveTempsrequiresEmptyStackOnEntry#isInlinedToInlineFunInKotlinRuntime!processDefaultMaskOrMethodHandler
inlineCallputCapturedToLocalValdoRemapvisitVarInsnvisitIincInsnlistAllParams
newBuilderaddCapturedParamaddThisaddNextParameterbuildParametersaddCapturedParamCopyaddNextValueParameterlistCaptured!isMyBoundReceiverForDefaultLambdanonSourceAnnotationstypeArgumentcutOtherMappingsisValueswereUsedReifiedParameters!propagateChildUsagesWithinContextmergeAlladdUsedReifiedParameterconsumeCandidate!recordNewFragmentCaptureParameteroutDirectoryignoreErrorsoldBEInitTraceafterIndependentPartshouldOnlyCollectSignaturesgenerateDeclaredClassFilterdestroyisIrBackenddiagnosticReporterbeforeCompilejvmBackendClassResolvertargetIdloadClassBuilderInterceptorscodegenFactoryonIndependentPartCompilationEnd handleExceptionOnElementAnalysiswrapArgumentInValueIfNeedednewParameterValuehandleExceptionOnFileAnalysisreduceCandidatesisNewPlaceForBodyGenerationtrackLookuploadCompiledInlineFunctiongetEndNodesgetStartNodesknownTopLevelClassesInPackagesortTryCatchBlockssubstituteTryBlockNodessubstituteLocalVarTablegetInlineCallSiteVisibilitygetDeclarationLabelsisInlineOrInsideInline&serializeExpectActualSubstitutionTableserializeBreakprotoSymbolKindserializeContinueserializeIrPropertyserializePublicSignatureserializeCoordinatesserializeExpressionserializeAccessorSignatureserializeGetClassserializeStringserializeFileEntryserializeIrStarProjectionserializeSetValuematchAndNormalizeFilePathserializeIrFileImplserializeGetValueserializeIrEnumEntryserializeIrTypeParameterserializeFunctionExpressionserializeVarargElementserializeBlockserializeFileSignatureserializeDynamicOperator*serializeIrLocalDelegatedPropertyReferenceserializeIrTypeAbbreviationserializeDynamicTypeserializeIrTypeDataserializeIrExpressionBody"serializeDelegatingConstructorCalltoProtoExpressionserializeLocalSignatureserializeErrorCallExpressionserializePrivateSignatureserializeIrClassserializePropertyReferenceserializeIrStatementBodyserializeIdSignature+serializeMultiFieldValueClassRepresentationserializeDebugInfo"serializeInlineClassRepresentationserializeSimpleTypeserializeNameAndTypeserializeDeclarationserializeSpreadElementserializeIrAnonymousInitserializeIrSymbolserializeIrDeclarationBasefillPlatformExplicitlyExportedserializeGetEnumValueserializeVarargserializeGetObjectserializeIrConstructorserializeBranchserializeCatchserializeIrFunctionBaseserializeSetFieldserializeLoopserializeReturntoProtoStatementserializeCompositeSignature!serializeIrLocalDelegatedPropertyserializeDoWhileserializeErrorExpressionserializeGetFieldserializeFqNameserializeNullabilityserializeWhileserializeStatementserializeTypeArgumentserializeThrowserializeConstructorCallserializeTryserializeMemberAccessCommon"serializeDynamicOperatorExpressionserializeStringConcatserializeIrFunctionserializeIrTypeAliastryMatchPathserializeIrVariableserializeCompositeserializeNameserializeSyntheticBodyserializeCallprotoIdSignatureserializeBlockBodyserializeWhenserializeTypeOperatorserializeIrTypeProjectionserializeIrFieldserializeIrTypememberNeedsSerializationserializeIrErrorDeclarationkeepOrderOfProperties serializeDynamicMemberExpressionserializeFieldAccessCommonserializeConst"backendSpecificSerializeAllMembersserializeFunctionReferenceserializeIrDeclarationOriginserializeIrValueParameterserializeScopeLocalSignatureserializeTypeOpserializeEnumConstructorCallserializeClassReference serializeInstanceInitializerCallserializeIrStatementOrigingetMeaningfulIntervalsisMeaningless%isProhibitedDuringArgumentsEvaluationisInplaceCallEndMarkerisInplaceArgumentStartMarker	addMarkeraddInplaceCallStartMarkeraddInplaceArgumentStartMarkerisInplaceCallStartMarkeraddInplaceArgumentEndMarkeraddInplaceCallEndMarkerisInplaceArgumentEndMarkerisRecapturedLambdaTypefindFieldInSuperwriteTransformedMetadatagenerateConstructorAndFields!inlineMethodAndUpdateGlobalResultisPublicAbi+extractParametersMappingAndPatchConstructorwriteOuterInfogetMethodParametersWithCapturedaddUniqueFieldinlineMethodfixupLVTisSamWrapperConstructorCallisFinallyMarkerRequiredisSuspendMarker!newMethodNodeWithCorrectStackSizeisThis0emitInlineMarkerwrapWithMaxLocalCalccreateEmptyMethodNodeisNumberedFunctionInternalNamefirstLabelInChainisSuspendInlineMarkerisFakeContinuationMarkerisAfterInlineMarkerisFakeLocalVariableForInlineisSamWrapperisReturnsUnitMarkerisReturnOpcodegetLoadStoreArgSizeaddInlineMarkerisBeforeInlineMarkerpreprocessSuspendMarkersgetMarkedReturnLabelOrNullareLabelsBeforeSameInsnisStoreInstructionisWhenMappingAccessisAfterInlineSuspendMarkerisMarkedReturnaddFakeContinuationMarkerloadClassBytesByInternalName"addUnboxInlineClassMarkersIfNeeded,isAfterFakeContinuationConstructorCallMarkerisFinallyEndcloneMethodNodeaddReturnsUnitMarkergenerateResumePathUnboxing(addFakeContinuationConstructorCallMarkeraddReturnsUnitMarkerIfNecessarylineNumberRangedumpBodyaddAfterUnboxInlineClassMarkerisBeforeSuspendMarkergetIndexAfterLastMarkerisOldSamWrappergenerateGlobalReturnFlagcalcMarkerShiftisBeforeUnboxInlineClassMarkerisInlineMarkerinsertNodeBeforeisAnonymousConstructorCallinsnTextisAfterSuspendMarkeraddBeforeUnboxInlineClassMarkerisFinallyStartisCapturedFieldNameisAnonymousSingletonLoadisBeforeInlineSuspendMarkerremoveFinallyMarkersisAfterUnboxInlineClassMarker)createFakeContinuationMethodNodeForInlineisFinallyMarkerisInvokeOnLambda-isBeforeFakeContinuationConstructorCallMarkerisAnonymousClassgetInlineNamegenerateFinallyMarkerfindVirtualFileImprecise	isIntegeraddSuspendMarkergenerateMethodBodygetInlineNameGenerator$getDirectMemberAndCallableFromObject addParentsToInnerClassesIfNeededgenerateDeclaration
mapDefaultprocessTypeOfputReifiedOperationMarkerprocessJavaClassprocessPlugin	processAsisOperationReifiedMarkerprocessNewArrayprocessReifyMarkerprocessNextTypeInsncomputePackagePartsInfosextractClassMetadataprocessSpecialEnumFunctionrewriteNextTypeInsnreifyisNeedClassReificationMarker	processIs!putReifiedOperationMarkerIfNeededisReifiedMarkerisPluginNextreifyInstructionsfindImportsByAliasextractPolymorphicReturnTypegetSharedVarType"mapUnderlyingTypeOfInlineClassType%getPackageMemberContainingClassesInfomapImplementationOwnermapAnnotationParameterSignatureisNonConstPropertymapTypeArgumentfindBaseDeclarationgetPartSimpleNameForMangling!getPackageMemberOwnerInternalNamemapDefaultFieldNamewriteVoidReturnforPackageMembermapDefaultMethod+mapSignatureForInlineErasedClassSkipGenericforClassMemberisInlineClassConstructor!internalNameForPackageMemberOwnerinternalNameWithoutModuleSuffixgetDefaultDescriptorhasJavaLangRecordSupertype#writeSuperConstructorCallParametersgetVarianceForWildcard%getContainerClassIdForClassDescriptorgetModuleNameSuffix extractPolymorphicParameterTypes generateErrorMessageForErrorTypemapPropertyReferenceSignaturewriteFormalTypeParameterwriteFieldSignature+getContainingClassesForDeserializedCallablemapAnnotationParameterName(mapSyntheticMethodForPropertyAnnotationscanBeMangledInternalName$isPropertyWithGetterSignaturePresentoverridesJvmDefault$writeAdditionalConstructorParametersisStaticAccessor mapSignatureWithCustomParametersgetKindForDefaultImplCallfindFirstDelegatingSuperCallmapScriptSignature-mapSignatureForSpecializedEqualsOfInlineClass%mapSignatureForBoxMethodOfInlineClassfindAnyDeclarationgetFunctionalArgumentIfExistsprepareNodedoInlinetransformCapturedtransformFinallyDeepIndexremoveClosureAssertionsisAlreadyRegenerated8replaceContinuationAccessesWithFakeContinuationsIfNeededaddLocalReturnToTransform%isAnonymousClassThatMustBeRegeneratedwrapExceptionrecordTransformationgetCapturedFieldAccessChainfindCapturedFieldbuildConstructorInvocation replaceContinuationsWithFakeOnespreprocessNodeBeforeInline*removeFakeVariablesInitializationIfPresentmarkObsoleteInstruction%markPlacesForInlineAndRemoveInlinablegetImplementationOwnerClassTypeisImplementationOwnergetScriptFieldNamegetImplicitReceiverNamegetProvidedPropertyTypegetProvidedPropertyNamegetImplicitReceiverTypemayHaveContractgetCompanionObjectContextisSuspendIntrinsicParameter%getFirstCrossInlineOrNonInlineContext&hasTypeParameterListBeforeFunctionNameallValueParameterTypes findUnboxInlineClassInstructions	indexStubnewStub	coerceInt(performSpilledVariableFieldTypesAnalysis	isIntLikegenerateInvokeSuspendallSuspensionPointsAreTailCallstoFromSuspensionPointaddCoroutineSuspendedChecksskipUntilMeaningfulisInvisibleInDebugVarInsnloadCoroutineSuspendedMarkerisCoroutineSuperClassasDummyOldResolvedCall8createMethodNodeForSuspendCoroutineUninterceptedOrReturnisSuspendLambdaOrLocalFunctioninvokeInvokeSuspendWithUnitcoroutineContextAsmType&isLocalSuspendFunctionNotSuspendLambdainvokeGetContextgetOriginalSuspendFunctionViewidentifiedChild"isSuspendFunctionNotSuspensionViewisSuspensionPoint#createMethodNodeForCoroutineContextasMutableResolvedCall!getOrCreateJvmSuspendFunctionViewgetImplForOpenMethod3isBuiltInSuspendCoroutineUninterceptedOrReturnInJvm-getContinuationParameterTypeOfSuspendFunctioncreateCustomCopygenerateCoroutineSuspendedCheck)unwrapInitialDescriptorForSuspendFunction+replaceSuspensionFunctionWithRealDescriptorcollectUnitUsagemarkUnspillableisSpreadhasDelegatecollectLvtEntryInstructionstransformMethodparseMethodOrNull%moveInplaceArgumentsFromStoresToLoads	parseCallparseArgstripMarkersisUnsafeToMovecollectStartToEndallFunctionParametersisUnusedgenerateInvokeMethodhasReturnTypeRefgenerateResumeImplgetErasedCreateFunctioninitializeCoroutineParametersgetCreateFunctioncreateHiddenFieldInfohasDelegateExpressionshouldCreateStubgenerateCreateCoroutineMethodgenerateUntypedInvokeMethodcreateFieldsForParametersrangeTypeToPrimitiveTypeextendRecordIfPossiblewithInstructionAdapterupdateLvtAccordingToLivenessgetLastParameterIndexnodeTextWithLivenessfieldNameForVar$replaceFakeContinuationsWithRealOnes#generateContinuationConstructorCall generateResumeWithExceptionCheck/getParameterTypesIndicesForCoroutineConstructor(getParameterTypesForCoroutineConstructorgetAllParameterTypesfinalizeClassFactory allOverriddenFunctionsReturnUnitcreateStateMachineBuilder!containingClassInternalNameOrNulldoGenerateBodywrapMethodVisitorisOutVariancegetMutableCollectionMethodName getIsMutableCollectionMethodNametypeIntrinsictypeIntrinsicNode	checkcast
instanceOf getAsMutableCollectionDescriptor
iconstNodegetFunctionTypeAritygetFunctionTypeArityByRegexgetClassFqName getAsMutableCollectionMethodNamegetSuspendFunctionTypeArityisApplicableToOverloadisInVariancespillVariables transformCallAndReturnStateLabelwriteDebugMetadata(prepareMethodNodePreludeForNamedFunctionnextDefinitelyHitLineNumberdropUnboxInlineClassMarkersinitializeFakeInlinerVariables,splitTryCatchBlocksContainingSuspensionPointdropSuspensionMarkersfindSuspensionPointLineNumberaddContinuationAndResultToLvt%removeFakeContinuationConstructorCallsetLabel/replaceReturnsUnitMarkersWithPushingUnitOnStackgetUseSiteTargetlocalVariableNameaddCompletionParameterToLVT$checkForSuspensionPointInsideMonitorcreateUnaryIntrinsicCallablecreateBinaryIntrinsicCallablecreateIntrinsicCallablegetStackValueinvokeHashCodeinvokeIntrinsiccalcReceiverTypegenerateEmptyArrayBodygenerateArrayOfBodygenerateArrayConstructorBodyanalyzePop2'getUninitializedValueForConstructorCallanalyzePopInstructionsisConstructorCallcheckUninitializedObjectCopy
analyzePopregisterIntrinsicvalueParameterCountForKeygetReceiverParameterFqNameisPrimitiveOrWrapperrememberAnnotationsaddStep
removeStepfakeAlwaysTrueIfeq	asNotNullisPseudostoreNotNullparsePseudoInsnOrNullfixStackAndJumpisPseudoInsnfakeAlwaysFalseIfequnboxedTypeOfInlineClassmakePopsisValueClassValue getMultiFieldValueClassUnboxInfogetUnboxedTypesisacreateInsnNodegetVariablesIndexes'getUnboxTypeOrOtherwiseMethodReturnTypegetMergedWithaddInsnsortUnboxingWithCastInsnsmarkAsUnsafeToRemovegetAssociatedInsnsaddMergedWithgetTotalUnboxSizesortAssociatedInsnsaddVariableIndexaddUnboxingWithCastTogetUnboxingWithCastInsnsisFromProgressionIterator&adaptJavaLangComparableCompareToForInt!removeValuesClashingWithVariablesadaptCastInstructionadaptAreEqualIntrinsicForIntadaptBoxingInstructionadaptAreEqualIntrinsicadaptInstructionsForBoxedValueCadaptLocalSingleVariableTableForBoxedValuesAndPrepareMultiVariables+removeValuesFromTaintedProgressionIteratorsadaptInstructionthrowCannotAdaptInstructionfuseAreEqualWithBranch'sortAdaptableInstructionsForBoxedValues(isUnsafeToRemoveBoxingForConnectedValues!getValuesStoredOrLoadedToVariable%removeValuesClashingWithVariablesPassbuildVariablesRemapping'adaptJavaLangComparableCompareToForLong&interpretPopInstructionsForBoxedValuesadaptAreEqualIntrinsicForLong adaptJavaLangComparableCompareToifEqual1Else0adaptInstructionsForBoxedValues(adaptJavaLangComparableCompareToForFloat)adaptJavaLangComparableCompareToForDoublereplaceVariablesprogressionIteratorValuebyProgressionClassType
isPurePushisPopisPrimitiveTypeConversionisUnitInstanceisPurePushOfSize1isPurePushOfSize2transformOnceisEliminatedByPopisLdcOfSize2isEliminatedByPop2processOperationWithBoxedValuemarkValueAsDirtyaddAssociatedInsnprocessPopInstruction
isSafeCastdefisExtension	markAliveisAliveisControlFlowMergemarkDeadhasValueArguments0localVariableAndTryCatchBlockLabelsAreAlwaysLivegetShortNameisExactValueisCastToProgression
isAllUndergetImportedFqNamehandleContentChangemergeStackValuesmergeLocalVariableValuesmergeBoxedHazardousmarkBoxedArgumentValuescheckUsedValuegetSuperNamescreateNewBoxingtoFixStackValueanalyzeLivenessdefVaruseVarstripOptimizationMarkersremoveUnusedLocalVariablesremapLocalVariablesfindNextOrNullisSize2LoadStoreOperationisInsn
takeInsnIfremoveEmptyCatchBlocksfindPreviousOrNullprepareForEmitting
insnListOfisStoreOperationisOptimizationMarkerupdateMaxStackisLoadOperation	hasOpcode
isUnboxing.isMultiFieldValueClassUnboxingMethodDescriptorisInlineClassUnboxingisCoroutinePrimitiveBoxingisBoxing4isJavaLangComparableCompareToForSameTypedBoxedValuesisWrapperClassNameOrNumberisJvmPrimitiveNamecanValuesBeUnboxedForAreEqualisJavaLangClassBoxingisJavaLangClassUnboxingbuildFqNameByInternalisJavaLangComparableCompareToisInlineClassBoxingisProgressionClassisMultiFieldValueClassBoxingisMultiFieldValueClassUnboxingisPrimitiveUnboxingisMethodInsnWith*isAreEqualIntrinsicForSameTypedBoxedValues areSameTypedPrimitiveBoxedValuesisWrapperClassName#isInlineClassBoxingMethodDescriptor%isInlineClassUnboxingMethodDescriptorisIteratorMethodCallisBoxingMethodDescriptor%isNextMethodCallOfProgressionIteratorisPrimitiveBoxing,isMultiFieldValueClassBoxingMethodDescriptorisAreEqualIntrinsic!isIteratorMethodCallOfProgressionisUnboxingMethodNameisAnalysisRequiredhasAnyMarkersvisitFixStackBeforeJumpvisitFakeAlwaysTrueIfeqvisitFakeAlwaysFalseIfeqreturnOperationrestoreStackWithReturnValuerestoreStackgetPopInstructiongenerateLoadInstructions	saveStackpeekWordsToreplaceAlwaysTrueIfeqWithGotoremoveAlwaysFalseIfeqgenerateStoreInstructionsreplaceMarkerWithPops	peekWordscontainingClass	getFqNamegetTypeReferencesetTypeReferencehasBlockBodygetValueParameterListisDelegatedCallToThis
isTopLevelgetColongetLambdaExpressionreplaceExpressionhasExplicitPrimaryConstructor	isNotNullisDefaultHandlerNodedebugStringinsertTryCatchBlocksMarkersinsertSaveRestoreStackMarkerscollectDecompiledTryDescriptorstransformTryCatchBlocks%analyzeAndTransformBreakContinueGotostransformSaveStackMarkertransformRestoreStackMarkertransformBreakContinueGotosremoveAlwaysTrueIfeqMarkersremoveAlwaysFalseIfeqMarkerstransformAfterInlineCallMarker#analyzeAndTransformSaveRestoreStack transformSaveRestoreStackMarkerstransformBeforeInlineCallMarkercreateTaintedValuecreateMergedValuemergeDescriptorscreatePossiblyMergedValuecheckRefValuesUsagesgetMergedValueTypeprocessControlFlowEdgecomputeExceptionEdges!getPrimaryConstructorModifierListisLocalvisitNopInsngetSecondaryConstructorsgetSuperTypeListEntriesvisitControlFlowExceptionEdgefindMergeNodesgetIdentifyingElementmarkAsDontTouchlongerWhenFusedWithPopcombineWithPopgetObjectTypeisReferenceTypeisReifiedSafeAsmergeNotNullValuesOfSameKindisCheckExpressionValueIsNotNull!usesLocalExceptParameterNullCheckpopReferenceValueBeforeisCheckNotNullisThrowIntrinsicisInstanceOfOrNullCheckisParameterCheckedForNullisCheckNotNullWithMessageisCheckParameterIsNotNullgetExpressioninitMergeNodesshouldRemovegetLastTargetJumpInsnrewriteLabelIfNeeded
getClassIdgetPredecessorsIndicesvisitExceptionEdgegetSuccessorsIndicesisApiVersionIsAtLeastCallgetIntConstValuegetRequiredNopInRangeremoveNodeGetNextreplaceNodeGetNextcreateReturnValueVariable&allocateVariablesForBeforeInlineMarkermarkRestoreNodeEmittedupdateMaxLocalsallocateNewHandleisFullyEmittedmarkRestoreStackMarkerEmittedmarkEmittedgetSavedStackDescriptormarkAfterInlineMarkerEmitted getFirstUnusedLocalVariableIndexgetBeforeInlineDescriptor#allocateVariablesForSaveStackMarker#recordNopsRequiredForTryCatchBlocksrecordNopsRequiredForDebuggernegateConditionalJumpOpcodeisMultiArrayTypeisTrivialSubtype%getTypeAdjustmentForALoadInstructionsgetTotalTcbSize$canBeOptimizedUsingSourceInterpretercountInsnsWithFramesUntilgetTotalFramesWeightrewriteNonLabelInstructionsrewriteLabelsrewriteLocalVarsgetNewgetNewOrOldrewriteLineNumberNoderewriteTryCatchBlocksrewriteLabelInstructionsrewriteFrameNoderewriteLookupSwitchInsnrewriteJumpInsnrewriteTableSwitchInsnmatchOpcodesisInterveningisRewritableSafeCallPartprocessLabelssimplifyTrivialInstructionssimplifyKnownSafeCallPatternshasSinglePredecessoraddNonTrivialPredecessorhasNonTrivialPredecessorsrewriteSafeCallPartgetAllPredecessorsoptimizeTemporaryVals*calcProperTypeForIeee754ArithmeticIfNeeded*legacyCalcTypeForIeee754ArithmeticIfNeededcreateFromPsiafterReceiverGenerationcollectRewriteActions
isIntConsthasOptimizableConditionstryRewriteComparisonWithZero	isIntJumprewriteBinaryComparisonOfConstsrewriteBinaryComparisonWith0tryRewriteBinaryComparisongetMemberOwnerKindsaveStackAndClearexecuteRestoreStackInTryCatchexecuteBeforeInlineCallMarker
clearStackexecuteSaveStackBeforeTrygetActualStackSizesetStackexecuteAfterInlineCallMarkerrecordLoopEntryPointMarkersgetStackToSpillgetActualStackgetExpectedStackSizegetStackContentgetNumberCompareOpcode'writeNewFunctionNameManglingRequirement1writeFunctionNameManglingForReturnTypeRequirementserializeTyperemoveModifierstoreSelectorisNonStaticAccessaddAnnotationEntryregisterOperationscreateInvertValuegetLabelNamecmpbooleanConstantgetObjectCompareOpcodegenInvokeDefaultInstructiongetBodyExpressiongetAsmMethodgetContainingClassOrObjectlogDescriptorNotFoundgenerateOnStackIfNeededtoIntsdropTo	leaveTempskipTo	enterTempgetConstructorKeywordtopLevelClassAsmTypereplaceValueParametersIn(generateBridgeForMainFunctionIfNecessarytopLevelClassInternalNameencodedUTF8SizegenerateCallSingleArgumentwithVariableIndices	useTmpVarisJvmStaticInCompanionObjectasmTypeextractUsedReifiedParameters isPossiblyUninitializedSingleton$filterOutDescriptorsWithSpecialNames
kotlinType2initializeVariablesForDestructuredLambdaParameterslinkedLabelunwrapFrontendVersionisDefinitelyFitEncodingLimit&isInlineClassTypeWithPrimitiveEqualitygenerateNullCheckForNonSafeAs unwrapInitialSignatureDescriptor8populateCompanionBackingFieldNamesToOuterContextIfNeededgenerateIsChecklinkWithLabel,generateNewInstanceDupAndPlaceBeforeStackTopevaluateOncegenerateAsCastisToArrayFromCollection%isJvmStaticInObjectOrClassOrInterfacesplitStringConstantisJvmStaticInInlineClass recordCallLabelForLambdaArgument4sortTopLevelClassesAndPrepareContextForSealedClassesgenerateLambdaForRunSuspendisJvmStaticInextractReificationArgumentcreateCoroutineSuperClasscoroutinesInternal getSupertypeForPropertyReferenceinternalgetSupertypesForClosurepropertyClasses!getSupertypesForFunctionReferenceinjectAssumptionsForNullCheckaddDependentCheckinjectNullabilityAssumptionstransformTrivialInstanceOftransformTrivialNullJumpanalyzeNullabilities#injectAssumptionsForInstanceOfCheck addDependentCheckForCheckNotNullinjectAssumptionsForInsnlistOfSyntheticsinjectAssumptions'transformTrivialCheckNotNullWithMessageisOptimizableinjectCodeForStoreNotNulltransformTrivialCheckNotNulltransformTrivialCheckscollectVariableDependentCheckstransformInstanceOf$injectAssumptionsForNotNullAssertionrevert-transformTrivialCheckExpressionValueIsNotNullinjectCodeForThrowIntrinsicaddDataFromCompiledModulefilterClassFilesaddCompiledPartsaddCompiledPartsAndSortloadCompiledModulegenerateOtherisInsideInlineLambdaContextgetSamWrapperClass*generateBridgesForFunctionDescriptorForJvm%containerEntityForEqualityAndHashCodeisJvmDefaultOrPlatformDependent%isAbstractOnJvmIgnoringActualModality&needToGenerateDelegationToDefaultImplsgenFieldsForParameters
genMemberscreateScriptCodegengenMaingetSuperClassInfo
canRewritegetCapturedVarOrNull	trackPopsremoveOrReplaceByNopfindCleanInstructionsreplacePlaceholderElementcreateRefValuesassignLocalVarsrewriteRefValueaddInnerClassInfoFromAnnotationgetFunctionWithDefaultArgumentsinlineAlwaysInlineAssert-generateAssertionsDisabledFieldInitialization&createMethodNodeForAlwaysEnabledAssertgenerateJvmAssertreplaceAssertWithAssertInnergenerateAssertisAssertCall,rewriteAssertionsDisabledFieldInitialization&isBuiltinAlwaysEnabledAssertWithLambdaisBuiltinAlwaysEnabledAssertisCheckAssertionsStatus)isBuiltinAlwaysEnabledAssertWithoutLambdaaddRecordComponenttemporaryValsdoCheckCancelledfromGenerationStateAndFilesgetParameterVariableIndexisTailRecursiongenerateTailRecursionassignParameterValues1putReifiedOperationMarkerIfTypeIsReifiedParameterensureGeneratedwriteKotlinMetadatawriteSyntheticClassMetadata!getSpecialBridgeSignatureIfExists2isValueArgumentForCallToMethodWithTypeCheckBarrier(findSuperImplementationForStubDelegationgetContentElementgenerateMultifileClassgeneratePackagegetReferencedNameElementgetReferencedNameElementTypegetReferencedNameAsNamegetReferencedNamecapturedBoundReferenceReceiverisBoundReferenceReceiverField$isSyntheticClassForCallableReferenceisForBoundCallableReferenceisForCallableReference computeExpectedNumberOfReceivers1generateClosureFieldsInitializationFromParameters2generateCallableReferenceDeclarationContainerClass"generateFunctionReferenceSignature-generateCallableReferenceDeclarationContainerisTopLevelCallableReference#loadBoundReferenceReceiverParametergetSignatureString"generatePropertyReferenceSignaturegetAccessorNameSuffixsetCodeFragmentInfoclearCodeFragmentInfocreateCodegencalculateInfogetContainingKtFile	genMethodgetSharedTypeIfApplicablegetCodeFragmentInfocollectTypeAnnotationsisCompiledToJvm8OrHighergatherTypeAnnotationscreatePropertygetPsiOrParentcanBeReferenceTogetJvmKotlinTypeshouldHaveTypeSafeBarrier generateBridgesForBuiltinSpecialdoJump!readWriteAccessWithFullExpression%getNameForDestructuredParameterOrNullisSubstitutablegenerateUnboxMethodgenerateSpecializedEqualsStubgenerateJvmInlineAnnotationgenerateFunctionsFromAny(isInlineClassWithUnderlyingTypeAnyOrAnyNisGenericParametershouldBeTransformed	getRangesbindToFqName	canRenamefindSectionByTag%generateDelegationToSuperDefaultImplsstopCountingcreateFreeFakeLambdaDescriptorcreateFreeDescriptor%createFreeFakeLocalPropertyDescriptorsubstituteTopLevelType*createCodegenForDelegatesInMultifileFacade*generateDelegatesToPreviouslyCompiledPartshasDeclarationsForPartClassgetDefaultSection/addDelegateGenerationTasksForDeclarationsInFilegetCompiledPackageFragment!addDelegateGenerationTaskIfNeededisJvmSyntheticgeneratePart,writeKotlinMultifileFacadeAnnotationIfNeededgetSuperClassForPart generateDelegateToCompiledMembergenerateMultifileFacadeClassgetOnlyPackageFragmentgetDeserializedCallablesshouldGenerateInFacadegenerateCodeForSourceFilesisValidCharactermangleNameIfNeededgetRemainingParameterscountDefaultParametersgenerateOverloadsIfNeededisEmptyConstructorNeeded+generatePrimaryConstructorOverloadsIfNeeded(hasSecondaryConstructorsWithNoParameters)generateOverloadWithSubstitutedParametersgenerateSuperCallArgumentstringBuilderAppendTypefitRestrictionsfitEncodingLimitbuildRecipeaddStringConstantinlinedConstantgenToString"genStringBuilderConstructorIfNededputValueOrProcessConstantinvokeAppendgetMetadataParameterIndex:isDelegatedPropertyMetadataRequiredForFunctionFromBinariesgetActualCallee#isDelegatedPropertyMetadataRequiredfindActualParameterfindSectionByNamegetAllSections!shouldRunSamConversionForFunctionisPossibleSamTypefindParametergenerateAccessorsfindGetFunction$getWrapperMethodForPropertyReferencecreateFakeOpenDescriptorputInstanceOnStackcreateStaticFunctionDescriptorgenerateMethodStubisDefaultInJdk"findOverriddenFromDirectSuperClass0findFakeOverridesForMethodsFromMutableCollectiongenerateOverridesInAClasscomputeTasksToGenerate"findRelevantSuperCollectionClassescreateSyntheticSubclassnewTypegetSubjectName
getContentProjectContextContextForNewModuleGlobalContextModuleContextinitializeModuleContentsmoveToNextKeycurrentNode
hasNextKeymoveToNextNodehasNextNodereplaceNodeWithEntryinsertEntryAtIndexreplaceEntryWithNodegetMethodNamesmoveToNextNodeWithDataensureNextEntryIsReady	resetPathfindRecordComponentByNamepresizedBufferWithgetFieldNamespersistentVectorOfgetRecordComponentNamesfindClassifierByJavaClasscomputePropertyNamesfillPathIfNeededelementAtCurrentIndexfillPathcheckHasPrevious"computeImplicitlyDeclaredFunctionsresolveMethodSignaturesetupTrieIteratorcheckHasIteratedcomputeNonDeclaredFunctionsisVisibleAsFunctioncomputeFunctionNamescomputeMemberIndexcomputeNonDeclaredPropertiesbufferOfSizecomputeClassNamesisSetleafBufferIteratorshiftLeafBuffersgetInitializerConstantgetModCountenhancesplitToBuffersnullifyAfterrecyclableRemoveAllmutableBufferWithmakeMutablemakeMutableShiftingRighttailSizepushBuffersretainFirstremoveAllWithPredicateremoveAllFromTailmutableBuffersetProjectInstancecopyToBuffergetContract#pushBuffersIncreasingHeightIfNeeded extractAndMergeDefaultQualifiersconstructorsprocessErrorType!getPredefinedInternalNameForClassgetPredefinedTypeForClass	hasNodeAtcollisionRemovemoveEntryToNodeupdateNodeAtIndexcollisionGetmutableInsertEntryAtinsertEntryAtreplaceNodemutableRemovemutableCollisionPut	nodeIndexmutableUpdateValueAtIndexbufferMoveEntryToNodemutableMoveEntryToNode"mutableCollisionRemoveEntryAtIndexnodeAtIndexcollisionPutmutableUpdateNodeAtIndexasUpdateResultmutableCollisionRemove
keyAtIndex
mutablePutentryKeyIndexupdateValueAtIndexcollisionRemoveEntryAtIndexasInsertResultvalueAtKeyIndexmutableRemoveEntryAtIndexcollisionContainsKey
hasEntryAt)computePackageSetWithNonClassDeclarations mayHaveOptionalAnnotationClassesgetAllOptionalAnnotationClassesgetAnnotationsOnBinaryModuletransformToUnsignedConstantimmutableSetOftoPersistentSetimmutableHashMapOfpersistentSetOfimmutableMapOfimmutableListOfimmutableHashSetOfpersistentHashMapOftoPersistentMaptoPersistentHashMaptoPersistentHashSetmutatetoPersistentListpersistentMapOfpersistentHashSetOfpersistentListOf!initializePackageFragmentProvider/createForwardDeclarationHackPackagePartProviderwarnOnLibraryDuplicateNamesomitDuplicateNameswarnOnLibraryDuplicatesleaveDistinctfindLibrariesisCStructVarisObjCObjectisObjCObjectBase
callableIdcreateForwardDeclarationsModule!createDescriptorOptionalBuiltsInsloadClassNameshasTopLevelClassifier2createDefaultKonanResolvedModuleDescriptorsFactory5createDefaultKonanDeserializedModuleDescriptorFactoryloadModuleHeaderloadPackageFragmentByteArraygetFullListregisterComponent	countTimeparseModuleHeaderparsePackageFragmentensureStorageappendFunctionTypeDeclarationappendTableappendBlockTypeappendGlobalappendExportappendModuleFieldReferenceappendHeapTypeappendStartFunctionappendStructTypeDeclarationappendLimitshasUnsignedLongSuffixparseNumericLiteral	parseLongparseFloatingLiteralhasIllegalUnderscorehasLongSuffixhasUnsignedSuffixparseDoubleappendImmediateappendMemoryappendWasmModuleTargetIdcreateParsercreateLexergetFileNodeTypegetWhitespaceTokensgetStringLiteralElementsgetCommentTokensspaceExistanceTypeBetweenTokenscreateElement	escapeXmlgetEscapedPathprocessJavaSourceRootsopenTagprocessClasspathcloseTag&checkSpecializationInCompatibilityMode checkJvmCompatibilityAnnotationsfindPossibleClashMemberappendDefinedFunctioncheckPossibleClashMember	appendTagisValidDalvikIdentifierisValidDalvikCharacterappendImportedFunction!reportErrorsOnPositionedArguments4getJavaAnnotationCallValueArgumentsThatShouldBeNamedreportOnValueArgumentreportDeprecatedJavaAnnotationfindInaccessibleJavaClassesfindInaccessibleJavaClassesRecenhancementFromKotlinmustNotBeNullenhancementFromJavagetSuperCallLabelTargetfindInterfaceMemberisApiVersionIsAtLeastfindOneOfModifiersareRecordsAllowed#findFirstBadJavaSignatureOverriddenisInInterfaceexports	exportsTo
checkNamedappendArrayTypeDeclarationdoIfNotNullappendInstr+findTypeParameterWithWrongBoundsNullabilitydoCheckType*exactedExpressionTypeByDataFlowNullabilitycheckTypeParameterBounds)isNullableTypeAgainstNotNullTypeParameterisOuterForLoopRangeVariable*getBytecodeVersionIfDeserializedDescriptorgetConcreteDeclarationForInlinedoCheckappendLocalReferencereportProblem	checkCall!computeSuitableDescriptorAndErrorselfOrBaseForFakeOverride(reportOnAnnotationWithNonSourceRetentionisSpecialStaticPropertycheckRepeatedEntriesbuildProviderdoForEachDeclaration
appendTypeSamDelegationBridge
DelegationOtherOriginFromPure	SyntheticAugmentedBuiltInApiDefaultImplsOtherOriginUnboxMethodOfInlineClassPackagePartMultifileClassPartMultifileClass(erasedSignaturesEqualIgnoringReturnTypesparametersDescriptorconvertTypeToKClassValuefindStrictfpAnnotationfindJvmFieldAnnotationhasPlatformDependentAnnotationfindJvmSyntheticAnnotationhasJvmDefaultAnnotationfindJvmOverloadsAnnotation)checkIsImplementationCompiledToJvmDefaultisJvmRecord$isCallableMemberCompiledToJvmDefaultfindSynchronizedAnnotationhasJvmSyntheticAnnotationcontainsVarargshasNotTrivialSignaturecontainsAnyNotTrivialSignaturegetCompileTimeConstantisJavaDefaultMethod"isBuiltInMemberMappedToJavaDefaultwriteVarUInt32createResolverForModuleisJavaLangRecordTypecanSynthesizeEnumEntries,requiresFunctionNameManglingInParameterTypes-requiresFunctionNameManglingForParameterTypes1isTypeParameterWithUpperBoundThatRequiresMangling7shouldHideConstructorDueToValueClassTypeValueParameters)requiresFunctionNameManglingForReturnType8isOverridingOnlyDescriptorsThatCanBeImplicitlyOverridden9isPlatformSpecificDescriptorThatCanBeImplicitlyOverriddencanContainNullcheckLocalVariablecheckNullabilityAssertioncheckPropertyAccessor
buildInstrgetFunctionTypeForSamTypegetAbstractMembersnonProjectionParametrization&recreateTypeParametersAndReturnMapping%createTypeAliasSamConstructorFunction"initializeSamConstructorDescriptor#recreateAndInitializeTypeParameters"createSubstitutorForTypeParameterscreateSamConstructorFunctiongetCorrespondingClassOrObjectgetClassKindgetDanglingAnnotationsgetScopeAnchorgetContainingPackageFqNamescopeForInitializerResolutionfindPackageFragmentForFilecomputeClassDescriptor"getContributedTypeAliasDescriptorsdoGetClassesdoGetPropertiesgetDeclaredPropertiesgetDeclaredFunctionstoProviderStringdoGetTypeAliases&computeDescriptorsFromDeclaredElementsdoGetFunctionscreateInheritanceScopegetStaticScopeOfCompanionObjectscopeWithGenericspackScopesOfCompanionSupertypes
hasPackage1checkIfPlatformSpecificCompilerArgumentWasChanged(createPropertiesMapFromCompilerArgumentscomputeClassIdcreateFileScopesmakeExplicitImportsIndexedmakeAllUnderImportsIndexedisFromSourceCodeInScopegetImportScopecollectFromImportstoInfoString
putToIndexgetImportResolvergetFileResolutionScopegetScriptDescriptorfindClassDescriptorIfAnysetDeclarationScopeProvidergetMemberScopeDeclaredIngetKotlinClassifieraddSyntheticFunctions getDataClassRelatedFunctionNamesaddSyntheticNestedClasses%generateFunctionsFromAnyForValueClassdoGetConstructors$resolveUnknownVisibilitiesForMemberscomputeExtraDescriptorsaddDataClassMethods!addSyntheticSecondaryConstructors generateSyntheticCompanionObjectaddSyntheticVariablesresolveSecondaryConstructorsdoClassifierDescriptorsgenerateDelegatingDescriptorsgenerateDataClassMethodssetDeferredReturnTypedoDescriptorsaddSyntheticCompanionObjectisKotlinOrNativeThrowsisKotlinOrNativeThrowsAmbiguityisKotlinOrJvmThrowsAmbiguityisKotlinOrJvmThrowscomputeImportedNamesisClassifierVisibleprintStructureisKotlinThrowsgetContributedPackagecheckResolvedImportDirectivehasBothReceivershasSafeNullableReceivergetImplicitReceiverValuemakeNullableTypeIfSafeReceiverisNotSimpleCallhasThisOrNoDispatchReceivergetArgumentByParameterIndextoResolutionStatusisNewNotCompleted getDispatchReceiverWithSmartCastgetExplicitReceiverValue'getValueParametersCountFromFunctionType,createValueParametersForInvokeInFunctionTypeisLowPriorityFromStdlibJre7Or8!getPropertyResolvedCallWithAssert!getVariableResolvedCallWithAssertfilterArgsInParenthesesgetResolvedCallWithAsserthasUnmappedArgumentsasCallableReferenceExpressiongetCallWithAssert!getFunctionResolvedCallWithAsserthasUnmappedParametershasUnresolvedArgumentsallArgumentsMappedgetFirstArgumentExpressionhasTypeMismatchErrorOnParameter"extractCallableReferenceExpressiongetParentCallgetParentResolvedCallreportTrailingLambdaErrorOrgetValueArgumentListOrElementtoOldSubstitution
isSafeCallnoErrorsInValueArgumentsgetValueArgumentsInParenthesescheckReceiverInvariantscheckCallInvariantsgetReferencedObject createDeclarationProviderFactoryfilteringScopeisOrOverridesSynthesizedgetEffectiveExpectedType#getParameterArgumentsOfCallableTypereportOnElement)createResolutionCandidatesForConstructorsgetReturnTypeForCallablereplaceReturnTypeByUnknownhasUnknownFunctionParameterreplaceTypes.arrayAssignmentToVarargInNamedFormInAnnotationgetErasedReceiverType'checkForConstructorCallOnFunctionalType,arrayAssignmentToVarargInNamedFormInFunction)isInvokeCallOnExpressionWithBothReceivers)getEffectiveExpectedTypeForSingleArgumenthasUnknownReturnTypereplaceReturnTypeForCallableisConventionCallisBinaryRemOperator(hasReturnTypeDependentOnUninferredParamsgetSuperCallExpressionfilterOutTypeParametersisInvokeCallOnVariablesetEmptyAnalyzedResultsonCallArgument	workCountisReallySuccessresultCallAtomrecordMatchStatusreplaceValueParametercompletedDiagnosticaddDiagnosticIfNotNullfilterErrorDiagnosticsasDiagnostictransformToPostponedgetExplicitDispatchReceivercreateReceiverArgumentgetExplicitExtensionReceiverisSyntheticEnumEntries&registerArgumentWithConstantConversion%registerArgumentWithSuspendConversion"registerArgumentWithUnitConversion!registerArgumentWithSamConversionsetAnalyzedcreateDefaultImportResolvercreateDefaultImportResolvers#createDefaultImportResolversForFilecreateImportResolvercreateScopesForFilecreateImportingScopecurrentPackageScoperecordArgumentMatchStatusrecordValueArgument!getKnownTypeParametersSubstitutorgetTracingStrategysetSubstitutorsetConstraintSystemgetConstraintSystemsetStatusToSuccessperformRemainingTasksaddRemainingTasksmarkCallAsCompleted	addStatusgetTraceforceResolutionisSynthesizedInvoke5createSynthesizedFunctionWithFirstParameterAsReceivercreateSynthesizedInvokes)createCallTowerProcessorForExplicitInvoke%getExtensionInvokeCandidateDescriptorcreateDynamicDescriptorScopecreateDynamicFunction&createDynamicDispatchReceiverParametercreateDynamicPropertygetResolvedPsiKotlinCallunexpectedErrorgetResultApplicability#getContributedFunctionsAndIntercept&getContributedFunctionsAndConstructorsgetInnerConstructors.getContributedObjectVariablesIncludeDeprecated#getContributedVariablesAndInterceptgetClassWithConstructorsgetContributedObjectVariablesgetFakeDescriptorForObject"getClassifierFromMeAndSuperclassesgetConstructorsOfClassifiergetCandidates$allScopesWithImplicitsResolutionInforesolveParametersTypescreateSimplePSICallArgumentprocessFunctionalExpressionsetResultDataFlowInfoIfRelevantresolveContextReceiversTypescheckNoSpreadgetKeysmarkAsReportedhasNonTrivialAdaptationtoCallableReceivercreateCallableProcessor!collectErrorCandidatesForVariablegetWrongResolutionToClassifierasClassifierCall!collectErrorCandidatesForFunctioncreateSimpleProcessorcreateVariableProcessor'createProcessorWithReceiverValueOrEmptycreateFunctionProcessor.createSimpleProcessorWithoutClassValueReceivercreateSimpleFunctionProcessor createVariableAndObjectProcessorcreateCandidateDescriptorsmartCastReceiver+getArgumentTypeForConstantConvertedArgument4calculateExpectedTypeForConstantConvertedArgumentMap0calculateExpectedTypeForUnitConvertedArgumentMap3calculateExpectedTypeForSuspendConvertedArgumentMap)getContributedClassifierIncludeDeprecated/calculateExpectedTypeForSamConvertedArgumentMapwriterscollectErrorPositions*calculateExpectedTypeForConvertedArguments*getExpectedTypeForSuspendConvertedArgument'getExpectedTypeForUnitConvertedArgument&getExpectedTypeForSamConvertedArgumentupdateDiagnosticscreateValueArguments
isComputedreplaceAnnotationsupdateResultingDataFlowInfosubstituteReceiverssubstitutedResultingDescriptorupdateArgumentsMapping"getSubstitutorWithoutFlexibleTypes	isRelated)substituteInferredVariablesAndApproximateupdateValueArguments'withNullabilityFromExplicitTypeArgumentcreatePreviousResolveError$transformToReceiverWithSmartCastInfoisCallWithSuperReceiver'reportResolvedUsingDeprecatedVisibilitycreateCandidates shouldCompleteResolvedSubAtomsOfaddNestedInferenceSessionresolveCandidatesaddCompletedCallInfocurrentConstraintSystemcompleteCallableReferenceCallcompleteExpressioncompleteCallableReferencecompleteLambda!completeCallableReferenceArgument#substituteFunctionLiteralDescriptor!updateCallableReferenceResultType4extractCallableReferenceResultTypeInfoFromDescriptor(replaceFunctionTypeArgumentsByDescriptorcompleteCollectionLiteralCalls)isCallableReferenceWithImplicitConversioncheckMissingReceiverSupertypesupdateReceiverValueclearPartiallyResolvedCallsubstituteAndApproximatecompleteAll,recordArgumentAdaptationForCallableReferencecompleteResolvedCall+extractDiagnosticsFromPartiallyResolvedCallcompleteSubCallArgumentisEnumEntryCandidatehasInvokeProcessorscreateVariableInvokeProcessorprocessVariableGrouptransformAndReport'createStubResolvedCallAndWriteItToTraceonlyTransformcreateOrGetreportCallDiagnosticdeparenthesizeOrGetSelectortransformToResolvedCallrunCallCheckers$getResolvedCallForArgumentExpressionkeyForPartiallyResolvedCallrunAdditionalReceiversCheckersrunArgumentsChecksupdateRecordedTypeforwardCallToInferenceSessionfindCommonParentgetLastDeparentesizedExpression constantCanBeConvertedToUnsignedprepareTopLevelTypegetFinalCandidatesrunWithEmptyTowerDatapushCandidates needToReportCompatibilityWarning
runResolvegetSuccessfulCandidatesmayFitForNameshouldStopResolveOnCandidateprocessImplicitReceivercreateNonLocalLevels isPreserveCompatibilityCandidateprocessTowerDataaddData#isValueParameterTypeNotLessSpecific%approximateContravariantCapturedTypestoKotlinCallisRecursiveVariableResolutionareAllInapplicable resolveDispatchReceiverForInvoke$createReceiverValueWithSmartCastInforesolveValueArgumentcreateReceiverCallArgument+runResolutionAndInferenceForGivenCandidateshandleErrorResolutionResultrecordLambdasInvocationsresolveToDeprecatedMod%transformManyCandidatesAndRecordTracerefineNameForRemOperatorresolveTypeArgumentsareAllFailedresolveReceivertoKotlinCallKindrunResolutionAndInferencerecordResultInfo!clearCacheForApproximationResults)areAllFailedWithInapplicableWrongReceiver"convertToOverloadResolutionResults)createCallableReferenceKotlinCallArgumentresolveArgumentsInParenthesiscreateResolutionCallbackstryConvertVarargcheckCallWithAdditionalResolveexpandContextForCatchClauserecordEffectscalculateExpectedTypetryConvertTailisComputingDeferredType!createOverloadingConflictResolvercreateFromCallableDescriptor"createForPossiblyShadowedExtensioncreateFromReflectionTypeisAmbiguityisSingleResult	isSuccessisTypeOf,isNotLessSpecificCallableReferenceDescriptor"isNotLessSpecificCallableReferencenewResolvedCallSetisMostSpecificisDefinitelyMostSpecific tryCompareDescriptorsFromScriptsfindMaximallySpecific,findMaximallySpecificVariableAsFunctionCallssetIfOneOrEmptycandidateDescriptoruniquifyCandidatesSet(ensureNonemptyIntersectionOfOperandTypescheckIdentityEqualitycheckEquality*checkIdentityOnPrimitiveOrInlineClassTypes#isAssignmentCorrectWithDataFlowInfoisUnderscoreOnlyNamecheckCallElementcheckSimpleNameUsagecheckNonLocalReturnreportDeprecationOnReplacementisInsideCallcheckNotInDefaultParametercheckValueParametergetCalleeDescriptor checkLambdaInvokeOrExtensionCallcheckCallWithReceiverisBuiltInCoroutineContextcheckCoroutinesFeature"isScopeForDefaultParameterValuesOfisRestrictsSuspensionReceiver
getChecker!warnAboutDeprecatedOrForbiddenMod(shouldWarnAboutDeprecatedModFromBuiltInscheckModConventionisOperatorModisReferenceToShortFormCompanionshouldCheckPropertyGetterfindDestructuredVariablecheckNotErrorOrDynamic$isWrongCallWithExplicitTypeArgumentsisValueOrPrimitivecheckCallImplicitReceiverisInfixWithRightFun&hasFormOfSuspendModifierForLambdaOrFunisInfixWithRightLambdareferencedName#hasNoArgumentListButDanglingLambdasisForLoopParameterisValInWhen
isArgumentgetCaptureKind+checkFieldInExactlyOnceLambdaInitializationisCatchBlockParameterisCapturedVariablecheckCapturingInClosureisExactlyOnceParameterisCrossinlineParameterisExactlyOnceContractgetCalleeDescriptorAndParameterisQualifierForisKPropertyClassisAllowedKClassMemberisReflectionSourceshouldWarningBeReportedcontainsArrayOfNothingcontainsEntryWithName&isCallViaCompanionOnEnumClassQualifier!isCallToExternalEntriesInsideEnum!isExtensionWithEnumClassQualifier7isReferenceToMemberEntriesWithoutExpectedFunctionalTypeisBackingFieldAccessible(checkAssignmentOfSingleElementInFunction*checkAssignmentOfSingleElementInAnnotation&checkAssignmentOfSingleElementToVarargtypeForTypeVariableisUpperisLowergetSubResolvedAtomsToAnalyze)findFunctionsWithImplicitNothingAndReportisDelegationContext$checkByReturnPositionWithoutExpectedgetResolvedCallAtomisOwnTypeParameter"checkAgainstNotNothingExpectedTypeisIntOperatorneedToCheckcheckArgumentImpltryConvertSingleasStringWithoutPositioncheckConstraintisExpectedTypePositioncompactIfPossiblejar
sourcesJarsimplifyConstraints.isLowerAndFlexibleTypeWithDefNotNullLowerBoundsimplifyEqualityConstraintsisUsefulConstraintnewConstraintIsUseless:isStrongerThanLowerAndFlexibleTypeWithDefNotNullLowerBoundgetProjectedInputCallTypesremoveLastConstraintssimplifyLowerConstraintsremoveConstrainscomposeWithcreateCompositeSubstitutorcontainsTypeVariable%extractProjectionsForAllCapturedTypesconvertToOverloadResultscreateTowerProcessorrunResolutionForGivenCandidatesallCandidatesResultcreateDiagnosticsForCandidatecheckInfixAndOperatorsubstituteParametrizedTypesubstituteTypeEnhancement.throwExceptionAboutInvalidCapturedSubstitutionsubstituteArgumentProjection&analyzeArgumentWithFixedParameterTypes(findPostponedArgumentWithFixedInputTypes3findPostponedArgumentWithFixedOrPostponedInputTypes!analyzeNextReadyPostponedArgument.findPostponedArgumentWithRevisableExpectedTypehasLambdaToAnalyze,analyzeRemainingNotAnalyzedPostponedArgument-extractUpperTypesToCheckIntersectionEmptinesscreateOwnFieldscreateOwnMethodsisTypeVariableWithNoInferinternalAddSubtypeConstraintextractTypeForProjectedTypeassertFlexibleTypeVariableisTypeVariableWithExactisSubtypeOfByTypeChecker0simplifyConstraintForPossibleIntersectionSubTypeanyBoundsimplifyUpperConstraintsimplifyLowerConstraintextractTypeVariableForSubtypeassertInputTypes
bothBoundsfindSuperType
resultTypecomputeUpperType%representativeFromEqualityConstraintsfindResultTypeOrNull'isThereSingleLowerNullabilityConstraint4isNullableNothingMayBeConsideredAsSuitableResultTypeisFromTypeParameterUpperBound specialResultForIntersectionType allUpperConstraintsAreFromBoundsgetDefaultTypeForSelfTypeisSuitableTypefindSubTypemakeFlexibleIfNecessary!createModifierListForSimpleFacadetoPublicTypecomputeCommonSuperTypesinkIntegerLiteralTypes#findResultIfThereIsEqualsConstraintprepareLowerConstraintsisJvmStaticisHiddenByDeprecation#createClassForInterfaceDefaultImplsgetAndAddLazygetElementIconforAllMyTypeVariablesisVariableRelatedToTopLevelType isVariableRelatedToAnyOutputTypecomputeRelatedToTopLevelTypeareVariablesDependentShallowlygetDeeplyDependentVariablescomputeConstraintEdgescomputePostponeArgumentsEdgescomputeRelatedToAllOutputTypesgetShallowlyDependentVariablesgetPostponeEdgesaddAllRelatedNodesgetConstraintEdgesgenerateNewConstraintdirectWithVariable&approximateIfNeededAndAddNewConstraintinsideOtherConstraintareThereRecursiveConstraintsaddNewConstraint&isPotentialUsefulNullabilityConstraint)containsConstrainingTypeWithoutProjectionincorporate'getValidityConstraintForConstituentTypederivedFromvalueParameterPosition,transformToAtomWithNewFunctionalExpectedType+reportWarningIfFixedIntoDeclaredUpperBoundscacheDependencies*newTypeInferenceOrParameterConstraintErrorsetupDirectionsisInterestingConstrainttryGetKotlinTypeenterToNode	visitTypegetConstraintDependenciesgetDirectiongetArgumentListrepresentativetoHandleisParameter
initSystemtoNewVariableTypegetTypeTemplatereportInferenceResultbadCallHappenedisTrivialConstraintcomputeValuescommonSupertypeForNumberTypesfilterBoundscheckOnlyInputTypesgetIntersectionOfSupertypestryPossibleAnswersetFixed
ownMethodshasCannotCaptureTypesErrorhasUnknownParametershasConflictingConstraintshasErrorInConstrainingTypeshasOnlyErrorsDerivedFrom2hasTypeParameterWithUnsatisfiedOnlyInputTypesErrorisSuccessful"hasTypeInferenceIncorporationErrorhasViolatedUpperBoundhasParameterConstraintErrorgetBuilderInferenceDatacontainsTypeTemplate isGoodCallForOldBuilderInferenceisResultWithBuilderInferencecreateExtendsListcreateImplementsListincorporateBoundaddConstraintFromBoundsgenerateNewBounddescriptorToVariablegetNestedTypeParameterscomputeModifiersByPsifilterConstraintsOutrunTransaction addSubtypeConstraintIfCompatible!addEqualityConstraintIfCompatibleaddConstraintIfCompatibleisConstraintCompatibleisSubtypeConstraintCompatible registerTypeVariableIfNotPresent)extractTypeForGivenRecursiveTypeParameter+hasRecursiveTypeParametersWithGivenSelfTypecomputeIsFinal!buildAbstractResultingSubstitutor5buildNotFixedVariablesToNonSubtypableTypesSubstitutorisRecursiveTypeParametercreateCapturedIfNeededwrapWithCapturingSubstitutiongetParameterToInferredValueMapsatisfyInitialConstraintsgetSubstitutor createTypeForFunctionPlaceholderisSelfTypeConstraint$variableHasProperArgumentConstraintsgetTypeVariableReadiness$areAllProperConstraintsSelfTypeBasedfindFirstVariableForFixation!isTypeVariableHasProperConstraint(variableHasUnprocessedConstraintsInForks!hasDependencyToOtherTypeVariables(variableHasTrivialOrNonProperConstraints<variableHasOnlyIncorporatedConstraintsFromDeclaredUpperBoundfindTypeVariableForFixationisProperArgumentConstraint*variableHasLowerNonNothingProperConstraintforceInferenceForArgumentsanalyzeBuilderInferenceCallgetArgumentTypeInfocheckExpectedTypeForArgumentcheckBuilderInferenceCallsbuildResultingSubstitutorsubstituteAndApproximateTypesaddSubsystemFromArgumentisGeneratedConstraintTrivialcontainsOnlyNonNullableNothingisNotInterestingConstraintisSuitableResultedTypeprocessPartprocessParts	getSystem chooseExtensionReceiverCandidate"createTypeVariableForParameterType&computeTypeVariablePathInsideGivenTypebuildNewFunctionalExpectedType:getDeclaredParametersConsideringExtensionFunctionsPresencewrapToTypeWithKind$fixNextReadyVariableForParameterType findFunctionalTypesInConstraints,fixNextReadyVariableForParameterTypeIfNeeded%computeResultingFunctionalConstructor-collectParameterTypesAndBuildNewExpectedTypes&computeParameterInfoFromRelatedLambdas/considerExtensionReceiverFromConstrainsInLambdaselectFirstRelatedVariable getAllDeeplyRelatedTypeVariablesextractParameterTypesInfo createTypeVariablesForParameterscreateTypeVariableForReturnType&checkUnsafeImplicitInvokeAfterSafeCallresolveKotlinArgumentshouldRunConversionForConstants-getReceiverArgumentWithConstraintIfCompatibleisErrorCandidateunexpectedArgumentcheckExpectedParameter(isArrayAssignedAsNamedArgumentInFunction*isArrayAssignedAsNamedArgumentInAnnotation,computeQualifiedNameForNullabilityAnnotationadditionalConvertergetLiteralValue'checkIfForksMightBeSuccessfullyResolvedlightMethodgetPresentationisConstOrJvmField
isJvmFieldhasExplicitModifier%nonSourceAnnotationsForAnnotationTypefqNameMatchesbuildParametersForListbuildTypeParameterListsetDeclaredAttributeValuefindDeclaredAttributeValuegetNameReferenceElementacceptChildrengetStartOffsetInParentfindReferenceAt	addBeforeprocessVariantsaddAftergetCanonicalTextbindToElementaddRangeAftercheckDelete#substituteAndApproximateIfNecessaryaddRangeBeforegetPrevSiblingputUserDatagetCopyableUserDatagetTextLength-doPostponedComputationsIfAllVariablesAreFixedputCopyableUserDatacheckAddgetRangeInElementgetTextRangegetReferenceNameisProperTypeImplsubstituteMissedConstraintspostponeOnlyInputTypesCheckgetTextOffsetgetLastChildisQualifiedgetUseScopetransactionRegisterVariablefindElementAtadvancedResolvetextToCharArraytextContainsgetNextSiblingcheckInferredEmptyIntersectiongetNode2applyConstraintsFromFirstSuccessfulBranchOfTheForkdeleteChildRangetextMatchesgetReferenceNameElementfromStringOrNullcheckOnlyInputTypesAnnotationgetFeatureSupportgetFlagisPreReleasegetScriptClassesgetFacadeNamesgetLightClassgetFacadeClassesInPackagegetFacadeClassesgetLightClassForScriptgetLightFacadecreateEmptyIrFilehandleElementRenameisReferenceTocheckMissedConstraints!generateDelegatingConstructorCallgetLoopgenerateOverridesgenerateFakeOverridePropertygenerateFunctionDeclarationgenerateFakeOverrideFunctionhasUnitOrSubtypeReturnTypeisUnitOrSubtypeOrVariableisUnitOrSubtypecheckSubCallArgumentcheckSimpleArgumentcheckExpressionArgumentreportSmartCastOnReceiverreportSmartCastsreportAdditionalDiagnosticscreateSmartCastDiagnosticneedCompatibilityResolveForSAM hasNonAnalyzedLambdaAsReturnTypeisJavaParameterCanBeConvertedgeneratePrimaryConstructorhasInapplicableCall#findAllParentBuildInferenceSessionsinitializeCommonSystem(generateGlobalTypeParametersDeclarations'generateScopedTypeParameterDeclarationsextractCapturedTypesTofindParentBuildInferenceSessiongetUsedStubTypesfindTopLevelTraceanyReceiverContainStubTypearePostponedVariablesInferred!clearCallsInfoByContainingElementsubstituteNotFixedVariablesisTopLevelBuilderInferenceCall!generateTypeParameterDeclarationscreateResolvedAtomCompleter"generateValueParameterDeclarationsextractCommonCapturedTypesgetCurrentSubstitutorisInLHSOfDoubleColonExpression!updateExpressionDescriptorAndTypeupdateAllCalls%getNotFixedToInferredTypesSubstitutorcompleteDoubleColonExpression
updateCallcreateNonFixedTypeToVariableMapcheckSuperCandidateDescriptorNewConstraintSystemImpladdLhsTypeConstraintaddConstraintsaddReceiverConstraint'extractInputOutputTypesFromFunctionTyperesolveKtPrimitive#extractLambdaInfoFromFunctionalType	requireIsextraLambdaInfo#preprocessCollectionLiteralArgumentgetInputTypesOfLambdaAtom<chooseCandidateRegardingOverloadResolutionByLambdaReturnTypesubstitutedReflectionTypesubstitutedReturnType!addExpectedTypeFromCastConstraintprepareCandidateForCompletioncheckSamWithVararg"propagateLambdaAnalysisDiagnosticscreateAllCandidatesResultgenerateLocalDelegatedProperty2createKnownParametersFromFreshVariablesSubstitutor+getTypePreservingFlexibilityWrtTypeVariable(performCompositeConversionAfterSubtypingperformConversionAfterSubtyping performConversionBeforeSubtyping)performCompositeConversionBeforeSubtyping processCallableReferenceArgumentbuildResolvedKtArgumentwasPreviouslyDiscriminatedfindContextReceiverforFunctionalType&generateTypeParameterCaptureConstraintforSpecificitydoAddConstraintstoreSubstitutorisPropersimplifyTypegetMyTypeVariableisErrorOrSpecialTypestoreInitialConstraintgenerateTypeParameterBound&getKotlinTypeWithPossibleSmartCastToFPgetKotlinTypeForComparison#getOverriddenParameterWithOtherNameprocessArgumentsInParenthesisgetReceiverValueWithSmartCastaddPossibleNewConstraint%addEqualityConstraintAndIncorporateIt2addNewIncorporatedConstraintFromDeclaredUpperBoundrenderBaseConstraintaddInitialSubtypeConstraint,addInitialEqualityConstraintThroughSubtyping&processGivenForkPointBranchConstraintsisAllowedTypeextractForkPointsDataupdateAllowedTypeDepthaddInitialEqualityConstraintprocessMissedConstraintsprocessConstraintsshouldWeSkipConstraintisCapturedTypeFromSubtypingrunIsSubtypeOf$setConstrainingTypesToPrintDebugInfohasConstraintsToProcess$addSubTypeConstraintAndIncorporateItprocessGivenConstraints#processConstraintsIgnoringForksDatafixedTypeVariableextractAllConstraintsfindReceiverByLabelOrGetDefault	qualifiedgetIdForImplicitReceivergetIdForThisReceivergetIdForSimpleNameExpressiongetIdForStableIdentifierpostfixmapTypeArgumentsloadIfExistsputTypeArgumentsisComplexExpressionwithReceiverhasNoWritersInClosurespropertyKind&isAccessedInsideClosureAfterAllWritersisDeclaredInAnotherModulevariableKind!isAccessedBeforeAllClosureWritersareCompiledTogetherisAccessedInsideClosurehasDefaultGetterisInvisibleFromOtherModules#unrollToLeftMostQualifiedExpressionisDslMarkergetSmartCastReceiverResultupdateSmartCast%getSmartCastVariantsExcludingReceiverrecordCastOrErrorcheckAndRecordPossibleCastgetSmartCastVariants.getSmartCastReceiverResultWithGivenNullabilitymakeReallyNotNullIfNeededintersectConsideringNothingcontainsNothingputNullabilityAndTypeInfocanBeDefinitelyNotNullOrNotNullnewTypeInfoBuildergenerateModuleFragment%approximateDefinitelyNotNullableTypesequateOrDisequate!isValueArgumentReorderingRequiredreplaceRefWithisAccessible	addBridgeunexpectedElementinferTypeArguments8completeTypeInferenceDependentOnFunctionArgumentsForCall#getResolvedTypeForCallableReferenceaddConstraintForNestedCalltypeInSystemestimateLiteralReturnType'addConstraintForFunctionLiteralArgument!addConstraintForCallableReferenceaddConstraintForValueArgument)addValidityConstraintsForConstituentTypes%addValidityConstraintsForTypeArgument#getExpectedTypeForCallableReferencecompositeSubstitutorupdateResultTypeForSmartCastsaddExpectedTypeForExplicitCastcompleteArgumentscompleteAllCandidates$updateResultDataFlowInfoUsingEffectscompleteOneArgument completeResolvedCallAndArgumentscompleteCallForArgument*updateResolutionStatusFromConstraintSystemcheckMissingSupertypes"createCallableReferenceCallFactoryresolveCall!resolveAndCompleteGivenCandidatescreateSimpleCallFactorycreateFactoryresolveAndCompleteCallchoseMostSpecificmakeConstantSubstitutor,isApplicableExpectedTypeForCallableReferencegetResolutionResultsCachedDatacheckPutgetSimpleNameExpressionTypeInfocheckSelectorTypeInfo,resolveDeferredReceiverInQualifiedExpressiongetVariableTypegetQualifiedExpressionTypeInfo.getCallExpressionTypeInfoWithoutFinalTypeCheckelementChaingetSafeOrUnsafeSelectorTypeInforeportUnnecessarySafeCall!isUnderAnnotationClassDeclarationcheckNestedClassAccessgetUnsafeSelectorTypeInforecordResultTypeInforesolveSimpleNamegetCallExpressionTypeInfocanInstantiateAnnotationClassgetResolvedCallForFunctionvisitInlineLambda+typeConstructorsWithExpandedStarProjectionscommonSuperTypeForSimpleTypesuncaptureFromSubtyping"supertypesIfCapturedStarProjectionfilterSupertypes(refineNullabilityForUndefinedNullabilityallCommonSuperTypeConstructorssuperTypeWithGivenConstructor(isCapturedStubTypeForVariableInSubtyping+commonSuperTypeForBuilderInferenceStubTypes$isNotNullStubTypeForBuilderInferencefindErrorTypeInSupertypescommonSuperTypeForNotNullTypescalculateArgument+findSuperTypeConstructorsAndIntersectResultisCapturedTypeVariableisCapturedStarProjectionhasUnresolvedArgumentsRecursiveirAndAndreportConstraintErrorByPosition&reportCallableReferenceConstraintError'reportArgumentConstraintErrorByPosition8reportNotEnoughInformationForTypeParameterForSpecialCallreportSmartCast#reportNullabilityMismatchDiagnosticreportUnstableSmartCastreportConstantTypeMismatch?getSubResolvedAtomsOfSpecialCallToReportUninferredTypeParameter-getArgumentsExpressionOrLastExpressionInBlockcontainsUninferredTypeParameterunknownErrorgetFirstBaseDescriptorfindRefinesAnnotationsreportInvalidAnnotationTargetsisInlineWithReifiedhasInlineOnlyAnnotationcheckHasInlinableAndNullabilitycheckModalityAndOverridescheckDefaultscheckInlinableParametercheckDefaultValuenotSupportedInInlineCheck$prepareReceiverRegardingCaptureTypesvisitErrorExpressionhasTypesFromSmartCastsgetVariadicArgumentsisGlobalClassWithIdfindInheritedThrowscheckAndReportcheckConstructedExpandedType#checkTypeInTypeAliasSubstitutionRecshouldContinue!checkOuterClassMemberIsAccessibleprocessTypeArgumentscheckValueArguments%isCandidateVisibleOrExtensionReceiver#checkVisibilityWithDispatchReceiver!checkGenericBoundsInAFunctionCall$smartCastValueArgumentTypeIfPossiblecanBeSubtypecheckReceiverscheckExpectedCallableTypecheckValueArgumentTypesgetReceiverSupercheckAllValueArguments!performResolutionForCandidateCall,checkGenericBoundsInTypeAliasConstructorCallcheckExtensionReceivergetDeclaringClasscheckReceiverTypeErrorisCandidateVisiblecheckVisibilityWithoutReceivertryNotNullableArgumentcheckAbstractAndSupercheckDispatchReceiverfindFirstFromMeAndParentcollectDescriptorsFilteredcanBeResolvedWithoutDeprecationfindVariablecollectFromMeAndParentchainImportingScopesfindLocalVariablefindFirstFromImportingScopesgetImplicitReceiversHierarchyprocessForMeAndParentcreateScopeForDestructuringgetDeclarationsByLabelreplaceImportingScopes(findFirstClassifierWithDeprecationStatuscollectVariablesaddImportingScopecollectAllFromMeAndParentaddImportingScopescollectAllFromImportingScopesmemberScopeAsImportingScope3shouldCalculateAllNamesForLazyImportScopeOptimizingcheckIfClassifierApplicablefindFirstVariablegetDescriptorsFilteredflatMapClassifierNamesOrNullcomputeAllNamescollectSyntheticStaticFunctionscollectSyntheticConstructors#collectSyntheticExtensionPropertiescollectSyntheticMemberFunctionsgetActualScopecreateOrSingledescriptorByIndexaddVariableOrClassDescriptortoDescriptorsfunctionsByNameaddFunctionDescriptorInternaladdDescriptorvariableOrClassDescriptorByName+postActionAfterTransformingClassDeclarationcheckMayWritecreateFakeOverridesmaterializeAtmaterializegetPsiisUsageAsAnnotationOrImportcheckCanBeConst
canBeConstcheckClassifierUsagesnonApplicablegetOptionalExpectationEntryisContextClassReceiverReferencebuildDefaultDiagnosticMessagebuildOverrideMessagebuildMessagePrefixfindVolatileAnnotationwithoutKinds	withKindsrestrictedToKindsOrNulltoCamelCasereadableName	setLengthstartCompilerOperationloadClassInChildScopeOfstage1BlocksAccessorsForrunCompileBuildOperationcachedDirForcachedClassForonReuseflipscriptDefinitionFromTemplatecreatesCycletryRelativeTotoVisitOptionstoLinkOptions	exitEntry
enterEntryreadEntriespostVisitDirectoryvisitFileFailedbfsIteratoryieldIfNeededdfsIteratorcheckIsNotBuiltcheckNotDefinedencodingWithdecodingWithplatformEncodeToByteArrayplatformEncodeIntoByteArrayplatformCharsToBytesplatformEncodeToStringisInMimeAlphabet	notExistscreateDirectoriesisExecutableisHiddentoFileVisitResultenterDirectorysetAttribute	fileStorefileAttributeViewNotAvailablecreateTempDirectorysetPosixFilePermissionsisSymbolicLinksetOwnercopyToRecursivelydeleteRecursivelyImplPathinsecureEnterDirectoryforEachDirectoryEntryisSameFileAshandleEntrytryIgnoreNoSuchFileExceptionfileAttributesViewabsolutePathString
isReadablecollectIfThrowsfileSizesetLastModifiedTimefileVisitorfileAttributesViewOrNullgetLastModifiedTimemoveTocreateSymbolicLinkPointingToinsecureHandleEntrydeleteExistingcreateLinkPointingTolistDirectoryEntriesuseDirectoryEntriesreadSymbolicLinkgetPosixFilePermissionscreateParentDirectoriesdeleteIfExistsencodeIntoOutputencodeByteBufferIntoOutput	checkOpencopyIntoByteBuffercopyByteBufferIntodecodeSymbolBufferIntoshiftByteBufferToStartIfNeededreadNextSymbolresetByteBufferIfEmptyconstructMessagetrimStringBuilderdecodeEndOfInputcompactBytesupdateCharsetreadlnOrNullreadlnmonitorEntermonitorExitencodeIntoByteArraycharsToBytesImplskipIllegalSymbolsIfMimebytesToStringImplencodeToAppendableencodeIntoByteArrayImpl
decodeSizecheckDestinationBoundscheckSourceBoundsencodeToByteArrayImpl
encodeSize
decodeImpldecodeIntoByteArraygetRootLengthtoRelativeStringforEachBlockwalkTopDowntoRelativeStringOrNullresolveSiblingwalkBottomUpcopyRecursivelyonLeaveonFaildirectoryStateonEntergotoNextmaxDepthbyteInputStreamtoArrayImplcollectionToArraynotSupportedErrorsetUpperBoundsgetClassSimpleNamegetClassQualifiedName	HexFormatisLetterdigitToIntOrNull
digitToIntisIdentifierIgnorable
checkRadixisTitleCaseisLetterOrDigituppercaseCharisWhitespaceisDigitdigitOfisJavaIdentifierStartisLowerCaseisUpperCase	titlecasedigitToCharlowercaseChartoTitleCaseisSurrogateisLowSurrogateisISOControlisJavaIdentifierPartisHighSurrogate	isDefinedtitlecaseCharcharsetcoshwithSignasinpowtansincbrttruncatesqrtceilfloorexplnnextTowardsasinhhypottanhsinhcosnextDownlog2IEEErematan2absacosnextUpacoshexpm1
roundToIntatanlog10roundToLongln1proundatanhsignfromIntrange
hexToULonghexToUShort	hexToUInthexToUByteArray
hexToUByteensureUnicodeCasefromLiteralmatchAtcontainsMatchInescapeReplacement	matchesAttoUIntOrNulltoUByteOrNulltoULongOrNulltoUShortOrNullbytesappendOptionsTotitlecaseImplhexToIntcheckNewLineAthexToLongImplformattedStringLengthwholeElementsPerSetcharsPerSetcheckHexLengthhexToByteArraycheckContainsAtparsedByteArrayMaxSize
hexToShorttoHexStringImpl	hexToLongdecimalFromHexDigitAttoKotlinDurationtoJavaDurationdurationUnitByShortNametoDurationUnitdurationUnitByIsoCharconvertDurationUnitOverflowconvertDurationUnit
toTimeUnitformatUpToDecimalsformatToExactDecimalscreateFormatForDecimalselapsedFromadjustReadingdifferenceBetweenmeasureTimedValuemeasureTimeadjustedReadenumEntriessaturatingDiffsaturatingOriginsDiffinfinityOfSignsaturatingAddInHalvessaturatingAddisSaturatedcheckInfiniteSumDefinedsaturatingFiniteDiffsetSeedasJavaRandomdoubleFromPartsasKotlinRandomRandomboundsErrorMessagetakeUpperBitsfastLog2checkRangeBounds
nextUBytes	nextULongcheckULongRangeBoundsnextUIntcheckUIntRangeBoundsparseOverLongIsoComponentmillisToNanosdurationOfNanos
durationOf
toDurationsubstringWhiledurationOfNanosNormalizeddurationOfMillis	skipWhileparseDurationnanosToMillisdurationOfMillisNormalizedtoShortExactOrNulltoLongExactOrNulltoByteExactOrNullcheckStepIsPositivetoIntExactOrNullsecondsparseIsoStringmicrosecondshoursminutesdaysnanosecondsappendFractionaltoLongNanosecondsparseIsoStringOrNull	isInNanostoLongMilliseconds
truncateTo
isPositive
isInMillis
isNegativeaddValuesMixedRangesmillisecondstoIsoStringexitProcessmeasureNanoTimemeasureTimeMillisnativeIndexOfcontentEqualsIgnoreCaseImpltoBigIntegerOrNullsubstringBeforeremoveSuffixlinestoBigDecimalOrNullsetRangedeleteAtscreenFloatValueisNullOrBlankcodePointAt
capitalizepadStartgetIndentFunctionsubstringAfterrangesDelimitedByreplaceBeforecommonPrefixWithisBlankregionMatchesImpl
trimIndentprependIndentsubstringAfterLastinsertRangeregionMatchesreplaceAfterLast	trimStartnumberFormatError
trimMargintrimtoBooleanStrictcodePointBeforereplaceRangeappendlnoffsetByCodePointsnativeLastIndexOftoByteOrNulltoFloatOrNullrequireNonNegativeLimittoLongOrNullreplaceBeforeLastchunkedSequence
indexOfAnycontentEqualsImplStringlineSequence
isNotBlankdeleteRangereplaceAftertoRegextoBooleanStrictOrNulltoShortOrNullfindLastAnyOfindentWidthdecapitalizetrimEndremovePrefix	findAnyOfreplaceIndentByMarginpadEndreindentifBlankdecodeToStringreplaceFirstCharcodePointCountremoveSurroundingreplaceIndenttoDoubleOrNullconcatToStringcommonSuffixWithhasSurrogatePairAtlastIndexOfAnysubstringBeforeLastnumberisCancelledgetLowerBoundstypeToStringcreatePossiblyInnerTypecomputeJavaType	getBoundsgetDeclaredAnnotationsgetGenericDeclarationgetGenericComponentType
stringList
getRawTypegetOwnerTypegetActualTypeArguments
initscriptpluginManagementapplyTo
findPlugingetSourceFilegetSourceURIivypluginregisterBuildCacheServiceremoteconstraints	parseAttrparseDeclareStyleableaddResourcesetTransitiveasStreamapiVersionIsAtLeastcastToBaseTypecontractcallsInPlacereturnsNotNullnextNotReadyexceptionalStategetOrSetthread
runSuspendgetStackTraceElementImplgetDebugMetadataAnnotationgetSpilledVariableFieldMappingcheckDebugMetadataVersionboxFloat	boxDoubleboxIntboxCharboxShort
boxBooleanboxByteboxLonggetPolymorphicElementminusPolymorphicKeyisSubKeytryCast
observablevetoablebeforeChangeafterChangecreateCoroutineContinuationsuspendCoroutinestartCoroutineresumeWithExceptionwrapWithContinuationImpl%suspendCoroutineUninterceptedOrReturncreateCoroutineUnintercepted"createCoroutineFromSuspendFunction#startCoroutineUninterceptedOrReturn'createSimpleCoroutineForSuspendFunctionsubarrayContentHashCode
resetRangesubarrayContentEqualsresetAtarrayOfUninitializedElementssubarrayContentToStringcopyOfUninitializedElementsfixedRateTimerscheduleAtFixedRatetimer	timerTask
sequenceOfemptySequenceSequencegenerateSequenceconstrainOncesequenceretainOrRemoveAllInternaladdAllInternalinsertAtInternalremoveAtInternalremoveRangeInternaladdAtInternalputAllEntries	findValuekeysIteratorcontainsAllEntriesremoveKeyAtcomputeHashSizeremoveHashAt	putRehashnextHashCodeinitNextfindKeyhashentriesIteratorcomputeShiftvaluesIteratorshouldCompactremoveEntrynextAppendStringallocateValuesArrayputEntryremoveValuesourceIterator	setEqualsunorderedHashCodeforwardisFullexpandedentryToStringentryHashCodeentryEqualsimplFindEntrynegativeModpositiveModinternalStructureinternalGetnewCapacitydecrementedcopyElementstestToArrayaddFirstcopyCollectionElementsinternalIndexincrementedcheckBoundsIndexesfoldTo	aggregateeachCountToreduceToaggregateTo	eachCountmapValuesInPlacemutableSetOfoptimizeReadOnlySetlinkedSetOf	hashSetOfcreateSetBuilderbuildSetInternalemptySetsetOfsetOfNotNullsortedSetOfbuildSetsetNexttryToComputeNextwindowedIteratorcheckWindowSizeStep	sortArray	quickSortlazylazyOftosuspend	UIntArrayuintArrayOfmapCatchingthrowOnFailurerecoverCatchingrunCatchingcreateFailurerecover
ULongArrayulongArrayOfubyteArrayOf
UByteArraystackTraceToStringulongToStringdoubleToULonguintToDoubledoubleToUIntulongToDoubleuintCompareulongCompareuintRemainder
uintDivideulongRemainderulongDivideushortArrayOfUShortArray
takeUnlessletrepeattakeIfalsonaturalOrderthenByDescendingreverseOrdercompareValuesBycompareValuesByImpl	nullsLast	compareBycompareValuesthenDescendingthenBycompareByDescending
nullsFirstthenComparatorcheckNotNullrequireNotNullgetOrElseNullablemapCapacitytoSingletonMap	hashMapOfcreateMapBuilder
filterKeysmapOftoProperties	mapKeysTosortedMapOfmapKeysmapValuesTotoSingletonMapOrSelftoMutableMapemptyMapfilterValuesmutableMapOfbuildMapInternallinkedMapOftoSortedMapoptimizeReadOnlyMaptoPairwithDefaultbuildMaprunCallLoopcrossFunctionCompletionattachReportsgetScriptConfigurationResult	toRawBitsfromBitstoBitsisFinitetoBigIntegertoBigDecimal
isInfiniteisNaNtoCompilerMessageSeverity
endElementbinarySearchBylistOfNotNullreverseIteratorIndexreverseElementIndexlistOfMutableListcollectionSizeOrDefaultcheckCountOverflowoptimizeReadOnlyListcopyToArrayImplcreateListBuilder
rangeCheckIterableconvertToListIfNotCollectionreversePositionIndexasCollection	emptyListcopyToArrayOfAnyListarrayListOfcollectionSizeOrNullthrowIndexOverflow	buildListbuildListInternalmutableListOfthrowCountOverflowretainNothingasShortArrayasUByteArrayasUIntArrayasUShortArrayasULongArrayasLongArray
asIntArraycontentDeepEqualscopyOfRangeImplcontentDeepHashCodecopyOfRangeToIndexCheckcontentDeepEqualsImplsortedArrayWithcontentDeepToStringImplcontentDeepToStringInternalcontentDeepToStringcontentDeepHashCodeImplgetResourceAsStreamfindResourcefindResourcesresolveAsyncgetRuntimeStateFilesPathwalkDaemonsmakeRunFilenameString makePortFromRunFilenameExtractortryConnectToDaemonmakeAutodeletingFlagFileensureServerHostnameIsSetUpfindPortAndCreateRegistrybeginMeasureWallAndThreadTimesendMeasureWallTimethreadCpuTimethreadUserTime%endMeasureWallAndThreadTimesAndMemorybeginMeasureWallTime
usedMemoryendMeasureWallAndThreadTimeswithMeasure'beginMeasureWallAndThreadTimesAndMemorydigestmakeCompilerId	orDefaultsocketCreatecreateServerSocketcreateSocketfindWithTransformconfigureDaemonJVMOptions
memToBytescompareDaemonJVMOptionsMemoryconfigureDaemonOptionsupdateMemoryUpperBounds
trimQuotesmemorywiseFitsIntodistinctStringsDigestfilterExtractPropsisDaemonEnabledclearStringValuehasStringValueclearJsonNameclearDefaultValueclearOneofIndexIdeaKotlinClasspathinvokeSuspendcheckIndexOverflowgetValueClassUnboxMethods#createValueClassAwareCallerIfNeededhasValueClassReceivergetInlineClassUnboxMethodgetMfvcUnboxMethodstoJvmDescriptortoInlineClassgetBoxMethodmakeKotlinParameterTypescheckParametersSizecoerceToExpectedReceiverTypegetRealSlicesOfParameters	dropFirstcheckObjectInstancedropFirstAndLastcreateAnnotationInstancetransformKotlinToJvmthrowIllegalArgumentTypetoJavaClassreflectionCalltoAnnotationInstancearrayToRuntimeValueasKCallableImplasKPropertyImplasKFunctionImpldeserializeToDescriptorgetDeclaredMethodOrNullunwrapRepeatableAnnotationsgetDeclaredFieldOrNulltoRuntimeValuedefaultPrimitiveValuegetOrCreateKotlinPackage!getOrCreateKTypeWithTypeArgumentsgetOrCreateKTypegetOrCreateKotlinClasscreateNothingTypecreateMutableCollectionKTypecreatePlatformKTypecompoundTypecomputeCallerForAccessor#isJvmFieldPropertyInCompanionObjectdefaultEmptyArraycallAnnotationConstructorextractContinuationArgumentgetAbsentArgumentscallDefaultMethodgetParameterTypeSizecreateStaticMethodCallercreateInstanceMethodCallercreateConstructorCallercreateJvmStaticInObjectCallerisKnownBuiltInFunctionmapNamemapJvmClassToKotlinClassIdmapJvmFunctionSignaturemapPropertySignaturegetContainerClasstoKClassImplcreateNewCopygetDelegateImplcomputeDelegateSourcecalculateLocalClassNamereportUnresolvedClassgetManglingSuffixclearModuleByClassLoaderCachegetOrCreateModulesamplefailappendReceiversappendReceiverTyperenderCallabletryGetConstructortryGetMethodfindConstructorBySignatureloadParameterTypesloadReturnTypeaddParametersAndMasksfindDefaultMethodfindPropertyDescriptorfindDefaultConstructorfindFunctionDescriptorlookupMethodfindAnnotationscreateKotlinTypegetExtensionDelegatecallSuspendBycallSuspendfindKPropertyfindKFunctiongetKPackagesafeCastisSuperclassOfnowprobeCoroutineResumedprobeCoroutineSuspendedfindNext	onSuccess	onFailureexceptionOrNullsynchronizedloadProvidersshouldBeProcessedFromContextCancellationExceptionreleaseInterceptedContinuationresetAllregisterSelectClause0onCancelling
isReusableaddStaticManifestFileaddGeneratedManifestFilereadFiltersenforcedPlatformoptimization
getCurrentvisitIdentityInputsgetWorkspaceProvidervisitOutputsloadAlreadyProducedOutputidentifygetInputFingerprinteraccessorsClassPathForsetupEmbeddedKotlinForapplyPluginsToapplyBasePluginsTocloseTargetScopeOfwithBuildType
withFlavor	onVariantsrcFile
onVariantsfinalizeDSlregisterSourceTypebeforeVariantshandlePaddingSymbolvisitClassTypevisitArrayTypevisitInnerClassTypevisitTypeVariablecloseFinallymatchEntiremanifestsetRootjni	nextBytesidOfisRegularFile	uppercaseendsWith	toPattern	versionOfsplitToSequence
countrySetdensityabitexture
deviceTier	lowercaseincludeFlavorDimensionAndValuesallVariantsincludeBuildTypeValueswithJavadocJardynamicDelivery
publishApkmultipleVariantshashOftoIntOrNullsigningConfigmaxSdkVersiontargetSdkVersionwithAndroidTestOnDevicewithAndroidTestOnJvmwithAndroidTestOnJvmBuilderwithAndroidTestOnDeviceBuilderdependencyVariantSelectionmultidexsymboldefaultPlatformRandomnotNullinterceptedcontainsEntrycomputeNextcompileResourcessetAssetPacksdependenciesInfosetDynamicFeaturesCharaddSuppressedcomputeBestOutputgetIntermediateOutputPathgetOutputPath	addActiongetFolderNamegetFileSystemLocationNameworkerSubmissioncollectChangescheckProguardFiles	isPresentstartElementcreateCustomLintChecksConfigcreateFakeDependencyConfigcreateCustomLintPublishConfiggetBuildToolsVersion
isFinishedunpackcreateEnvironmentgetAsStaticDatahasTestsfindTestedApks"privacySandboxInstallBundlesFinderaddProductFlavorcomputeSourceSetNamegetOutputFileNameparseManifesttoUByteArraytoUShortArraytoULongArraytoUIntArray-getDependenciesClassesJarsPostInstrumentation"configureAndLockAsmClassesVisitorsgetCompiledRClasseshandleMissingDimensionStrategygetAllRawAndroidResourcesoldVariantApiCompletedgetJavaClasspathArtifactsregisterPostOldVariantApiActionaddVariantOutputcompileGlobextractClassesprocessNonIncrementallyprocessIncrementallygetClassesDirFormatsortBygetPlatformClassLoadertoBooleanArraygetJacocoVersioncreateProxycreateBundleTasktoDoubleArraytoFloatArraysortWithcomputeVariantsgeneratesProguardOutputFilegetTaskPathcreateAnchorTaskssortByDescendingtoIdentifiergetResourceId	parseTypesetApplicationIdsetTargetSdkVersioncomputeRequestedAndFallBacks	writeListgetBucketNumberisToolsConfigurationFileisProguardRulebinarySearch
removeNodegetAllDependentswriteAndFinishfirstDaemonStartedlastDaemonStoppedaddBuildConfigFieldgetAbisgetProgressionLastElementdifferenceModuloshutdownNow
reschedulecharAtparseHeaderIdeaKpmModuleandroidIdeaKpmPlatformIdeaKpmLanguageSettingsIdeaKpmFragmentCoordinatesIdeaKpmFragmentIdeaKpmModuleCoordinates
serializerIdeaKpmCompilationOutputwithregisterTaskgetIncludessetIncludesgetExcludes	mergeWith	getByType
findByType
appendLineIdeaKotlinSourceCoordinatesIdeaKotlinBinaryCoordinatesIdeaKotlinProjectCoordinates
withEffectwithTransformercreateArtifactViewcreateDependencyResolvercreateDependencyTransformercreateDependencyEffectfromFrameworkDescriptorscreateCompilation)addAllDependenciesFromOtherConfigurationsdefaulttoKpmModuleDependencypeerNpmoptionalNpmruntimeOnlyimplementationdevNpmnpmcompileOnly	getModuletoJsondefaultSourceFolderannotationProcessor	argumentsgetVariantNameoption
rewritePominterceptContinuationuntil	frameworkputIfAbsentreportingSettingsdoCopy%contributeAdditionalCompilerArgumentsprocessArgsBeforeCompileconfigureOptionsgenerateBinaryNamemaxminpackageJsondirectoryNpmDependencygetRulesaddRulegetCollectionSchemagetNamercontainerWithTypegetAsMapconfigureTestsregisterSubTargetTaskconfigureTestsRunconfigureTestRunDefaultsdisambiguateCamelCased	getByKindcommonConfigureconfigureOptimizationcreateUsageContextscreateKotlinVariantwithJavacreateTestExecuterbuildDependenciesprobeCoroutineCreatedaddArgsaddArgaddArgIfNotNulladdKey
executablelistLibraryFilescreateFatFrameworksetupCompilationDependencyFilesgetBytesaddLaststopNowoverflowparseXmlprintMessage maybeAddTestDependencyCapabilityconfigureKotlinTestDependencytestFrameworkOfwriteTo	hexToBytegetOrComputeisIncludeCompileClasspathgetConfiguredExecutionsconfigureAllExecutionsgetServiceNameprintNonTestOutputresume
superTypesindexrenderAsAnnotation
tryAcquireacquire
removeFilejavaemulatorSnapshotsemulatorControlmanagedDevicesignoreconsumerProguardFileconsumerProguardFiles	toBooleanbuildStringcopyTypeParametersFrombuildConstructorCallTODObuildFunctionExpressionsubtractmulprototypeOfisThisReceiverororandandmakeKotlinTypesubmit polymorphicDomainObjectContainermapPropertyirCallgetActualTypetransformChildrenVoidtoKVisibilityrenderLambdagetStackTracecheckArgumentsshallowCopy
createCallgetPrimitiveClassisUnsignedArrayreferenceScopedTypeParameterreferenceEnumEntryreferenceConstructorreferenceFieldreferenceScriptreferenceDeclaredFunctionreferencePropertyreferenceSimpleFunctionreferenceVariablecreateSignaturewithInitialIr
restrictTocopyAttributes
putDefault	withIndexrootgetSubstitutionserializeScoperesolveNamescomputeScopesliftUsedNamesresolveTemporaryNamesvisitStatementsgetSystemPropertynewVarreadFunction	parseJsoninstallationlinttestFixturescompileSdkAddondeclareFreshName	packagingtestgetFieldNamegenerateCodeForTestMethodgenerateTestCallsexportexportProperty
useLibraryexceptionStatemakePlainModuleRefaddModuleValidationwrapAmdwrapUmdwrapCommonJsmakePlainInvocation	wrapPlaincreateKTypeParametercreateSimpleKTypecreateKTypeProjectioncreateKClassifiertryExtractFunctionmissingDimensionStrategyshouldBeExportedreportIssueisUsedsplitCommandLinetokenizeCommandLineToEscapedtokenizeCommandLineToRaw	dropWhileflatMapdistinct	takeWhiletake	mapValues
distinctByvisitSecondaryConstructormakeJsCodeGenerator$createControlFlowInformationProvider
isTailCallcheckForLocalClassOrObjectModecompileModuleToAnalyzedFirgetModuleDescriptorByLibraryregisterJavaclistPropertygetNameswriteAlladdJavaSourceRootconvertSeverityfunctionStartedfunctionEndedreadAttributes
isFromJavawithSourcesJargetAttributecreateJavaFileStubcreateArrayTypeshouldBuildStubexiststoFirResolvedTypeRefisEqualTypescollectTypeParametersaddFakeOverrideslaunch	getPlugin	toIrConstconvertToIrExpressiontoIrDynamicOperatorfindAlltoFirValueParametertoFirExpressionvisitAnnotatedExpressionextractTypeParametersTogetNameForTemporarynextTemporaryIndeximplies	loadClasscreateMemberFunctionrequiresetuptargetswithLockprintStackTrace	overridesaddTypeStatementisAccessToUnstableLocalVariableaddImplicationgetClassLoader
getOrThrowfailuresaveTogetResolvedTypeRefvisibilityForApproximationupdateSupertypesIfNeededstoreVariablestoreFunctionstoreBackingFieldapplyExtensionTransformersresolveStatusresolveSymbolWithPrefixgetCorrespondingPlatformClassgetCorrespondingKotlinClass
storeClass4shouldComputeTypeOfGetClassCallWithNotQualifierInLhs!possibleGetterNamesByPropertyName#possiblePropertyNamesByAccessorNamesetterNameByGetterNamestoreCallableReferenceContexttoSymboltoFirRegularClassgetSearchScopeByDirectoriesgetFirJavaFacadegetKotlinClassFindergetSearchScopeByIoFilesgetJavaModuleResolvergetSearchScopeBySourceFiles#getSearchScopeForProjectJavaSourcesregisterAsJavaElementFinder!getSearchScopeForProjectLibrariescreateKPropertyTypefinishResolvingPhasestartResolvingPhaseisLexicallyInsideJsNativecheckSpreadOperatorenterCapturingStatementexitCapturingStatement2findFakeMethodOverridingExternalWithOptionalParams&isOverridingExternalWithOptionalParamssanitizeNameisExportable#validateDeclarationOnConsumableNameisExportableReturnisDirectlyExternalisPrivateMemberOfExternalClassisNullablePropertycheckAnonymousInitializer	checkBodycheckConstructorPropertyParamisDefinedExternallyExpressioncheckDelegationhasValidExternalBodyremoveRange	exitScopecheckDuplicatedLabelscheckValReassignmentretrieveDirectOverriddenOf/checkSuspendFunctionalParameterWithDefaultValue3checkFunctionalParametersWithInheritedDefaultValuessubstituteArgumentunsubstitutedScopetoClassLikeSymbolisSupertypeOftoRegularClassSymboloverriddenFunctionscallBywithLabelAndReceiverTypewithDeclarationbuildResolveAndCheckFirtoFirWhenConditiongenerateDestructuringBlockcreateFieldbuildFirFilemarkedWithMetaAnnotationformatconfigurePluginobtainContractDescriptionconvertValueParameterfillDanglingConstraintsToconvertContextReceivers$obtainDispatchReceiverForConstructor
hasSuspendobtainPropertyComponentStatus4buildErrorTopLevelDeclarationForDanglingModifierListconvertTypeParametersextractRawEffectsaddFunctioncomposeTypeParameterSignaturecomposeAccessorSignaturetransformImporttransformBreakExpression"transformWrappedArgumentExpressiontransformTypeParametertransformReferencetransformCheckedSafeCallSubjecttransformErrorNamedReferencetransformErrorResolvedQualifiertransformGetClassCalltransformErrorLooptransformContinueExpression!transformContractDescriptionOwnertransformAnnotationContainertransformEqualityOperatorCalltransformErrorFunctiontransformFunctionTypeReftransformErrorTypeReftransformResolvedTypeReftransformClasstransformLazyExpressiontransformComponentCall"transformAnonymousObjectExpression!transformLambdaArgumentExpressiontransformDynamicTypeRef%transformIncrementDecrementExpression transformNamedArgumentExpressiontransformImplicitInvokeCall4transformDesugaredAssignmentValueReferenceExpressiontransformUserTypeRef"transformVarargArgumentsExpressiontransformLazyBlock$transformAssignmentOperatorStatementtransformTypeRefWithNullabilitytransformIntersectionTypeRef transformStringConcatenationCall!transformSpreadArgumentExpressionbuildAnnotationCalltoResolvedCallableSymbolbuildValueParameterbuildSyntheticPropertyaddReceiveraddLocalScopeaddNonLocalTowerDataElementsfullyExpandedClassfindConstantValueForconeTypeSafeisDirectory
getSessiongenerateTemporaryVariableloadFunctionAnnotations"loadAnnotationPropertyDefaultValueloadPropertySetterAnnotationsloadPropertyGetterAnnotationsinheritAnnotationInfo%loadPropertyDelegatedFieldAnnotationsshouldStopAtTheGroupregisterClassifierRedeclarationplatformOverrideVisibilityCheckplatformVisibilityCheckcollectCandidatesfindAndDeserializeClassresetTocreateStatevisitTypeReferencevisitAnnotationEntryclearCachesisAnnotation	addImport	labelNamegetModificationStamp	removeKeycreateAnonymousInitializercreateCompanionObjectcreateModifierListcreateTypeParametercreateEnumEntryisMaincreateCacheaddArgumenttypeParametersreturnscomputeJvmDescriptorgetPackagePartsmethodloadPropertyAnnotationscomputeValue	getOrNullcomputeHashtoLowerCasetoUpperCaserehashgetVariable	buildCallrecordConstructorrecordFieldrecordClasscreateTempDirunzipToappendLines
writeLinesprintWriter
startsWithresolveDependencyplatformloadPropertiescheckReservedYieldisGenericArrayOfTypeParametercanBeConsideredProperTypecheckReferenceIsToAllowedMemberresolveExpressionOnLHSshouldTryResolveLHSAsTypetryResolveLHSresolveCallableReferenceshouldTryResolveLHSAsExpressionresolveTypeOnLHSresolveDoubleColonLHScanBeConsideredProperExpressionisAllowedInClassLiteralcreateDynamicTypeapproximateDeclarationTypeisExactTypeCastisRefinementUselessisCastErasedfindStaticallyKnownSubtypeisUpcastshouldCheckForExactTypecheckRepeatedAnnotationssubstituteArgumentswithDefaultTypewithNewVisitedTypeParametercomputeProjection$isRefinementNeededForTypeConstructorgetOrPutScopeForClassrefineSupertypesisRefinementNeededForModulerefineDescriptor
createTypestrictEqualTypesgetElementTextWithContextdropapproximateTo
clearCacheaddIfNotNullcompactcapacityfilterIsInstanceAndenterFunction
trimToSize	findEntryexitFunction
isAbstractcachetoLookupTaggetSourceElementhasModifiersetPackageNameaddAnnotationgetTargetTypetoLightAnnotationparsereferenceValueParametergetEffectiveModalityvisitForExpressionvisitThisExpressionvisitDoWhileExpressionvisitArrayAccessExpressionvisitIfExpressionvisitObjectLiteralExpressionvisitDotQualifiedExpressionvisitBlockExpressionvisitWhileExpressionvisitDestructuringDeclarationloadContextReceiverprocessClassOrObjectimplicitCastnewArray	addSpreadgetJvmNameFromAnnotationfirstSuperMethodFromKotlincreateIfNeeded"getNonBuiltinFunctionsByReturnTypegetKPropertyClassfindPropertieskSuspendFunctionN)getNonBuiltInFunctionsByExtensionReceiver
kFunctionNfindBuiltInClassMemberFunctionstransformMemberDeclarationvisitConstantValuetypeOfgenerateCallableReferencegeneratePropertyReferencegetLineNumberForOffsetgetOrCreatehasVoidReturnType#getBuiltinSpecialPropertyGetterNamegetValueClassPropertiesisArrayOrNullableArrayisInterfaceOrAnnotationClassgetAnnotationFirstArgumentValuemakeNullableisUnderKotlinPackage3isFinalClassOrEnumEntryOrAnnotationClassConstructorgetSubstitutedUnderlyingTypeisInnerClassgetClassFqNameUnsafegetRepresentativeUpperBoundloadIr
hashSuffixvisitVariableAssignmentvisitWhenBranchvisitAnonymousFunctionreferenceTypeParameter/isCarefulApproximationOfContravariantProjectionisPlatformSamTypeunwrapSyntheticJavaPropertycreateSpecialAnnotationClassgetParentClassStaticScopecomputeFieldVisibility createCustomSuperConstructorCalllowerInstanceOf	lowerCastgetInlinedClassreferenceFunction/shouldGenerateHandlerParameterForDefaultBodyFununfoldInlineClassTypemovesuspendFunctionNgetBinaryOperatorgetUnaryOperator	functionNisTargetDeclarationfindFunctionsgetFunctionisInlineParametercreateSuspendFunctionStub
enterScope
leaveScopefollowFunctionReferenceirNotirBlockmapRuntimeEnumEntrymapConstEnumEntryforConstructorforCapturedFieldtypeToAppendFunction getOriginForCallToImplementation%generateSuperCallHandlerCheckIfNeededresolveAnnotationsincludesetConstructorSourceRangegetWrappedFunctionType%getSuspendFunctionWithoutContinuationuseAsStatementcreateTemporaryVariabletransformArrayEqualsArgumentimplementPlatformSpecificPartsgenerateFunctionBodiescopyOftransformConstructortransformElementthencheckNoUnboundSymbolsgenerateCoroutineStartnameForCoroutineClassbuildStateMachinegenerateDelegatedCallgetCoroutineBaseClassaddFieldgeneratePropertygenerateTypeAliasgenerateSimpleFunctionmodulelinkFunctionFakeOverridelinkPropertyFakeOverridematchgetDeclaredTypeParametergetReferencedScriptgetReferencedClassifiergetReferencedPropertygetReferencedFieldgetReferencedEnumEntry"getDeclaredExternalPackageFragmentgetDeclaredConstructorgetDeclaredFieldgetReferencedTypeAliasgetReferencedClassOrNullgetDeclaredFilegetReferencedConstructor!getDeclaredLocalDelegatedPropertygetDeclaredVariablegetDeclaredValueParametergetDeclaredEnumEntrygetReferencedValue#getReferencedLocalDelegatedPropertygetReferencedVariablegetReferencedReturnableBlockgetReferencedSimpleFunctiongetDeclaredTypeAliasgetReferencedClassgetDeclaredScriptgetDeclaredPropertygetReferencedFunctionaddChilddiffplatformSpecificAliasplatformSpecificFunctionplatformSpecificSetterplatformSpecificPropertyplatformSpecificGetterplatformSpecificClassplatformSpecificModule"tryComputeBackendSpecificSignaturecreateModuleDeserializercreateCurrentModuleDeserializerisBuiltInModule,tryReferencingSimpleFunctionByLocalSignature&tryReferencingPropertyByLocalSignature	atMostOneisClassInlineLikegetInlineClassUnderlyingTypegetSamTypeForValueParameter	visitBody.isBuiltInSuspendCoroutineUninterceptedOrReturn"remapMultiFieldValueClassStructurehandleDeepCopy)throwUninitializedPropertyAccessExceptionvisitBreakContinuevisitFunctionNewreplaceTypeRefgenerateEntriessuppressWildcardsModeparseOrNullgetOrPutmapTypeParameterremapaddParametercanInlineArgumentsInPlacegenerateFunctionReference'shouldProcessNonAload0FieldAccessChainstransformMetadatacompileInlineFunction,isSuspendLambdaCapturedByOuterObjectOrLambdagetContextLabelsgenerateFinallyBlockscollectPropertiesputNeedClassReificationMarkermapTypeAsDeclarationmapAsmMethodmapReturnTypemapFunctionNamemapSupertypemapSignaturedemangleInternalNamemapOwnerwriteParameterTypemapFieldSignaturemapToCallableMethodisBoxMethodForInlineClassmapSignatureSkipGenericisJvmPrimitivemangleInternalNameclassInternalNamefindSuperDeclarationmangleMemberNameIfRequiredforceBoxedReturnTypewriteFormalTypeParametersmapSignatureWithGeneric
isAccessorisLambdaCallisInvokeSuspendOfLambda>originalReturnTypeOfSuspendFunctionReturningUnboxedInlineClasscoerceisStaticgetPrimitiveIteratorTypegetKotlinPrimitiveClassName	genInvokeisEmptyArray	isArrayOfgetKeyusevaluevisitTypeProjectionvisitPropertyAccessor
isNotEmptypeekisCompanionenqueue	visitEdgeinvokeMethodWithArgumentsisNonGenericToArraygetCallLabelForLambdaArgument!isDefinitelyNotDefaultImplsMethodisGenericToArraygenerateCallReceiveronUseAsTaintedprocessRefValueUsagecaptureVariableuninitializediinc)propagateChildReifiedTypeParametersUsagesconsumeReifiedOperationMarker!markLineNumberAfterInlineIfNeededfindAllReachableDeclarations getCallableReferenceTopLevelFlagsyntheticAccessorToSuperSuffixclassFileContainsMethodgenerateParameterNames"skipNotNullAssertionsForParameterscreateHandleForOverriddengenerateMethodfindMostSpecificTypeForClasshandleClashingNames
withModuleonClassDonehandleClashingSignaturescheckElementIndexcheckRangeIndexescheckPositionIndexorderedHashCodeorderedEqualsassertjavaFile
visitArrayparseFromStringcreateLibraryresolveWithDependenciesfataladdDependencyappendElementgetModuleName
findModulefindVirtualFilemapToJvmMethodSignaturegetPackageFragmentProvider(hasJvmDefaultWithCompatibilityAnnotationhasJvmFieldAnnotation&hasJvmDefaultNoCompatibilityAnnotation!getFunctionTypeForPossibleSamTypeprintlngetPrimaryConstructorParametersfindClassDescriptorshouldNotBeCalledgetPrimaryConstructorextractreportErrorabsolute
equalTypesisSubtypeOfisMoreSpecificShapegetCalleeExpressionIfAnycreateLookupLocationgetValueArgumentForExpressiongetParameterForArgumentsameTypeConstructorfilterAnnotationsaddCompatibilityWarninggetExpectedTypeisArrayOrArrayLiteral%containsOnlyFixedOrPostponedVariablescurrentStoragecontainsOnlyFixedVariablesasReadOnlyStoragereplaceprepareTransaction
isWritable/couldBeResolvedWithUnrestrictedBuilderInference"asConstraintSystemCompleterContextrollbackTransaction bindStubResolvedCallForCandidatefindResultTyperecordInlinabilityOfLambdaconvertSignedConstantToUnsignedisCompileTimeConstant1getExpectedTypeFromAsExpressionAndRecordItInTrace"analyzeAndGetLambdaReturnArgumentsgetCandidateFactoryForInvokedisableContractsIfNecessaryreportErrors createCallableReferenceProcessorasCallResolutionResultisOperatorCallisInfixCall+createConstraintSystemForOverloadResolution#isApplicableCallForBuilderInferenceisDescriptorFromSourceisSuperExpressionisOldIntersectionIsEmptygetVariableCandidateIfInvoke"isSuperOrDelegatingConstructorCallisBuilderInferenceCall)getScopeTowerForCallableReferenceArgumentDrecordInfoAboutTypeVariableUsagesAsInvariantOrContravariantParameterfixVariablesaddBoundfindParameterByNameaddLowerConstraintaddErroraddNewIncorporatedConstraintgetTypeVariableaddUpperConstraintaddInitialConstraintgetConstraintsForVariablecallhasNecessarySafeCall createTypeForConvertableConstantupdateRecordedTypeForArgumenttransformAnnotations resolveCallableReferenceArgumentonTypeArgumentconstraintErroronCallonCallArgumentSpread
onCallNameonTypeArgumentsonExplicitReceiveronCallReceiveronCallArgumentNameisInlineOnlyhasReifiedParametersreportIfNeededcheckConditionexcludesextractDefaultValuegetConstant	hasSpreadvisitQualifiedExpression visitBinaryWithTypeRHSExpressionreportInlineConstvisitStringTemplateExpressionvisitSimpleNameExpressionvisitLabeledExpression
doAnalysiscomputeAnnotationsisHiddenInResolution
getMembersfilterPackageMemberOverloadsisSubclassOfshouldBeSubstituteWithStubTypesdeclaresOrInheritsDefaultValue
fromString&isFunctionForExpectTypeFromCastFeatureisEffectivelyFinaladdFakeOverridecheckBoundscheckBoundsOfExpandedTypeAliasgetAnnotationArgumentValueloadAnnotationTargetsisRepeatableAnnotationapplicableTargetSettransformTypeisInlineClassisInlineClassType!getNestedBuilderInferenceSessionsprepareForCompletioncomponent12isSignatureNotLessSpecificcomponent11isComponentLikecreateComponentNamegetComponentIndexgenerateAdditionalMethodsgetAdditionalSupertypesisSetterProjectedOut	getInTypeisConstgetBackingFieldgetAccessorsgetDelegateFieldsanitizeReturnType
buildGraphisRepeatableAnnotationClasscompleteConstraintSystemcheckEnumEntryisNonSubtypeNotLessSpecificresolveValueParametersaddErrorCallInfocallCompletedaddPartialCallInforesolveReceiverIndependentlyresolveTypehandleExceptionresolveDescriptorForTypebuildReplacementgetNeighborstoBytes
asReversedvisitNamedFunctionvisitKtFilevisitClassOrObjectgetBaseClassTypeisInQualifiedNewgetBaseClassReferenceresolveConstructor
recordTypegetBindingContextcomputeConstantValuehasInitializer	isVarArgsgetThrowsList	visitWhendeclareSimpleFunctionfindDeepestSuperMethods(findSuperMethodSignaturesIncludingStaticgetParameterListgetBodygetDefaultValuefindSuperMethodsgetHierarchicalMethodSignaturegetReturnTypeElementfindDeepestSuperMethodgetIcongetAllInnerClassesgetOwnInnerClassesgetExtendsListgetImplementsListTypesgetInterfacesisInheritorfindFieldByNamegetInitializersgetOwnFieldsprocessDeclarations	getRBracegetInnerClassesfindInnerClassByNamegetOwnMethodsisInheritorDeepfindMethodBySignaturegetImplementsListgetVisibleSignaturesisAnnotationTypefindMethodsByName	getLBracevisitTry	getSupers
createStubgetOverriddenregister
createFile
shouldSkip	isEnabledgetAnnotationsContainerloadTypeAnnotationisArrayOrPrimitiveArraygetDeclaredFunctionreadOnlyToMutableclassIdreferenceTypeAliassuccessgetFunctionKindPackageNamescreateFunctionTypeisPrintableUnicodegetPrintablePartreferenceClassprocessOptionvisitArrayValuereflectisPrimitiveArrayaddPartfindPackagePartsinternplatformSpecificSuffixgetPackageFqName	isAtLeastresolveExtensionsClashvisitConstructorCallemptyvisitCallExpressionrenderTypeParametersrenderFunctionrenderPropertyrenderAnnotationspostProcessunion	intersectprinttryDeserializeIrSymboldeserializedSymbolNotFounddeclareIrSymbolvisitValueParameterReferencevisitGetFieldvisitSetField-visitLogicalBinaryOperationContractExpression
visitThrowvisitLambdaExpressionvisitFunctionAccessregisterModuleComponentsvisitMemberAccesssetDependenciesgetSyntheticStaticFunctionsrecordSamLookupsToClassifiergetTypeAliasSamConstructorgetSyntheticConstructordoSubstituteisCallableReferencegetSyntheticExtensionPropertiesisRecord cleanCompileTimeInitializerCachegetCompileTimeInitializergetReferencedTypehasDefaultConstructorfindInnerClassfindKotlinClassOrContentvisitFunction"canComputeKnownClassNamesInPackagefindClasses
visitClassprocessAnnotationloadConstructorAnnotationsgetAnnotationgetFunctionsNamestransformPlatformType!findClassAcrossModuleDependenciesisFunctionAvailable"findLoopsInSupertypesAndDisconnectgetClass
isLateInitrenderParameterrenderClassifiernewLinevisitTypeAnnotationvisitParameterdefaultValueselectorannotationssplit
saveToFileloadFromFiletoMapdoTransformgenerateLambdaBody"reportSuspensionPointInsideMonitor	getResultaddAttributeupdatecreateDirectorygetLabelcomparenamewriteToFile
visitFieldvisitMethodcheckProtoChangesshouldGoToNextRoundcompileImpl	doCompilecompilemain	shortNameasByteArraygetDefaultType getTypeConstructorTypeParametersreportSupertypeLoopError$findMetadataTopLevelClassesInPackagetoAttributes
simpleTypecreateContextgetAnnotationsvalueParametersdeserializeContractFromFunctiondescriptorVisibilityinitresolveValueisStaticCallgenInvokeInstructionloadConstantinvertIfNecessarytoDescriptorInvocationKindextractPrimitiveExpressiongetComplexTypegetPrimitiveTypedebugwarncreateTypeAliasisExpressionisFungetStaticScopecomputeValueClassRepresentationgetValueClassRepresentationgetSealedSubclassesgetCompanionObjectDescriptorgenerateFakeOverridesisValueconvertToIrensureRootProcessedgetSuppressingStringsgetChildrengetStartOffsetgetEndOffsetatvisitEnd	invariant	covariantcontravariant
nextDoublenextBoolean	nextFloatjvmschedulevalidatenewInstanceinserttextgenerateConstructor
invalidatecreateConstructorgenerateforClassdoneonScriptClassLoadedgradlePropertyinstantiateValueSourceOfisRemoteScriptUpToDatehashCodeOfDirectoryContentregisterTransformsystemPropertyOverriddensystemPropertyLoadedreadLongforEach	skipBytes
readStringenterleavereadList	writeFile
writeArray	readFloat
writeFloatwriteString	writeLongisExecutingWorkisInputTrackingDisabledonProjectReferencedependencyObservedcollectdirectoryChildrenObservedenvVariableReadsystemPropertyReadstring	signaturesystemPropertyRemovedcheckBuildScopedFingerprintaddMetadatacheckProjectScopedFingerprintlog	asElementgetDispatchReceivercreateErrorCandidate
refineTypeisLambda	unCapturereplaceAttributesmakeNullableAsSpecifiedcanBeProper,buildNotFixedVariablesToStubTypesSubstitutorcreateFlatSignatureanalyzeisAnyConstructorisIntersectiongetParameterupperBoundCountnullableNothingTypehasRecursiveBounds	isRawTypecreateSimpleTypeasArgumentListfunctionTypeKindtoErrorTypeunionTypeAttributesisClassTypeConstructorisStarProjectionisIntegerLiteralType'isIntegerLiteralConstantTypeConstructorisLocalTypenothingTypeasSimpleTypegetUpperBoundgetTypeParameterClassifiercreateUninferredTypeanyType.isContainedInInvariantOrContravariantPositions!unwrapStubTypeVariableConstructor	isDynamic'createCapturedStarProjectionForSelfTypehasFlexibleNullability	lowerTypeisUninferredParameterextractTypeVariablesisMarkedNullableisClassTypereplaceArgumentsDeeplyoriginalIfDefinitelyNotNullablesubstitutionSupertypePolicy(isIntegerConstantOperatorTypeConstructorcanHaveUndefinedNullabilityisSingleClassifierTypeasTypeArgumentmakeDefinitelyNotNullOrNotNullnullableAnyTypeasDynamicTypeisOldCapturedTypepossibleIntegerTypescreateStarProjection&findCommonIntegerLiteralTypesSuperTypeargumentsCountisNullableTypeisExtensionFunctionTypegetArgumentsoriginalparametersCountgetArgumentisExtensionFunction computeEmptyIntersectionTypeKindisTypeParameterTypeConstructoridenticalArgumentsgetCustomAttributesreplaceCustomAttributesisTypeVariableTypeupperBoundIfFlexiblewithNullabilityisCommonFinalClassConstructorlowerBoundIfFlexibleasDefinitelyNotNullTypeasFlexibleTypeisNothingConstructorisFlexibleNothingcreateFlexibleType	typeDepthfastCorrespondingSupertypesasCapturedType(makeSimpleTypeDefinitelyNotNullOrNotNulldefaultTypehasCustomAttributesisAnonymous
isFlexibleisUnitisProjectionNotNullcheckReceivershouldReportNoBodytoConstantValue
forElement
isOperatorgetContextReceiverParametersgetExtensionReceiverParametercheckDeclarationnewTypeCheckerStateareEqualTypeConstructorscheckFunctionwantsDiagnosticsgetNameIdentifierhasModifierPropertygetDocCommentresolveTopLevelClasscomputeDeclaredFunctions	isMutablegetDiagnostics	getStringcreateInstanceescapevisitFunctionDescriptorvisitPropertyDescriptor
renderTypevisitCallsEffectDeclarationvisitReturnsEffectDeclaration!visitConditionalEffectDeclarationvisitConstantDescriptorvisitLogicalNotvisitIsNullPredicatevisitIsInstancePredicatevisitBinaryExpressionvisitParenthesizedExpressionvisitConstantExpressionvisitIsExpressionvisitUnaryExpressionhasSynthesizedParameterNameshasStableParameterNamesgetSyntheticMemberFunctionsresolveknownClassNamesInPackage	findClass
buildCachefindAnnotationhasAnnotationgetFunctionsassertValidshouldSeeInternalsOfgetCapability	isVisible	normalizegetOverriddenDescriptorsdeclaresDefaultValuegetUpperBounds
lowerBoundrenderprovideDelegatetoPathtoFilecomputevisitAnnotationcomputeIfAbsentcastdumpisSealedsaveprocess	isSuspendasString	serialize
substitutegetContainingFileloadTypeAnnotations)loadExtensionReceiverParameterAnnotations#loadPropertyBackingFieldAnnotationsloadTypeParameterAnnotationsloadValueParameterAnnotations
initializeshouldUseTypeTable	hasErrorsgetModalitygetKindgetUnsubstitutedMemberScopeisExpectisActualgetDeclaredTypeParametersgetContainingDeclarationisCompanionObject
isExternaltypetypeParameternextCharreportloadcheckofrun	getSourcevisitFileTreelocationappendcommitvisit
component8pushpopgetInstancebeanStateReaderFordecodeencodebeanStateWriterForwritefileSystemEntryObserved
fileOpenedfileObservedsystemPropertyChangedloadOrCreateIntermediateModelclose	getParent	configureafterEvaluateallprojectsdependenciessetPropertysize
resetStategenerateConstructorsscopeFor
afterStartdisposeprojectsEvaluatedfromgetRoot	artifactsgetArtifactsrepositories!resolveFunctionTypeIfSamInterfacegetRepositoriesdependencyLockingfileconfigurationsgetConfigurationsgetDisplayNamepropertygetGroupdefaultTasks
setVersion	containergetBuildDirgetResourcesgetBuildscriptsetDescriptiongetBuildTreePathgetPathfindProjectzipTree
getVersionprojecttaskgetDependencyLockinggetProviders
getRootDirexecuteuseForStoreuseForStateLoadmoveFromcreateValueStorestateFileForIncludedBuildassignSpoolFileacceptsKindsstaticFieldsrestrictedToKindsnextMaskgenInlineCallreportIncorrectInlineisDeclaredInAny#isParameterAcceptableForInlineClassisKotlinTestAnnotationisForbiddenReturnTypecheckSingleAbstractMemberisSubtypeOfIgnoringArgumentscomputeByHavingCommonSubtype!computeEmptyIntersectionEmptinessmayCauseEmptyIntersection buildSubstitutedReceiverArgument/reportStubTypeCausesAmbiguityOnReceiverIfNeededprocessResolutionAmbiguityError0reportStubTypeCausesAmbiguityOnArgumentsIfNeededgenCycleStubbeforeCallStartisResultClassisResultTypeincompatibilityDiagnosticFor(publicReturnTypeShouldBePresentInApiModeisKClassWithBadArgumentcheckOptInUsagecheckMarkerTargetsAndRetentioncheckSubclassOptInUsagecheckArgumentsAreMarkersmakeCollectionOfAnyTypecheckVersion
lessOrNull*checkTypeParameterDescriptorsAreNotReified#inferPrimitiveNumericComparisonTypegetStableTypesForExpressionisStandardComparison$findPrimitiveOrNullablePrimitiveTypeafterCallEndisNullableSafeCallReceiveranalyzeExpressionevalBinaryOpevalUnaryOpcheckBinaryOpisIntegerTypeevaluateUnary"createCompileTimeConstantForEqualsgetReceiverExpressionTypeisZero%createCompileTimeConstantForCompareToevaluateBinarytypeStrToCompileTimeType!getActualAnnotationParameterValuereportExpectActual(checkExpectedDeclarationHasProperActualshasNoActualWithDiagnostic*checkExpectedDeclarationHasAtMostOneActual+checkExpectedDeclarationHasAtLeastOneActualisActualOrSomeContainerIsActual
sourceFilereportMissingActualModifier$hasUnsignedTypesInModuleDependenciescreateIntegerValueTypeConstantfromUIntToLongfromUByteToLongfromUShortToLongminValuemaxValueunsignedTypecreateConstantValuecreateUnsignedValuecreateArrayValuecreateIntegerConstantValueaddUnsignedSuperTypesaddSignedSuperTypescheckBoundsAndAddSuperTypegetPossiblyErrorConstant&getArgumentExpressionsForArrayLikeCall%isTypeParameterOrArrayOfTypeParameterresolveAnnotationValueArguments.getArgumentExpressionsForCollectionLiteralCallevaluateExpressionresolveAnnotationArgumentsisArrayPassedInNamedForm$checkInnerPartsOfCompileTimeConstantevaluateToConstantValue"reportDeprecationWarningOnNonConst"getArgumentExpressionsForArrayCallupdateNumberTypeisComplexBooleanConstant%checkExperimentalityOfConstantLiteralcheckCompileTimeConstantwithLinkageErrorLoggercreateSimpleIntCompileTimeConstcreateOperationArgumentisDivisionByZerocreateCompileTimeConstant createIntegerCompileTimeConstantshouldSkipComplexBooleanValue'createConstantValueForArrayFunctionCallusesVariableAsConstant!checkAccessibilityOfUnsignedTypesisPureConstantgetCompileTimeType-createConstantValueForUnsignedTypeConstructor"createOperationArgumentForReceiverevaluateCallresolveArguments(createOperationArgumentForFirstParametercanBeUsedInAnnotationusesNonConstValAsConstantisPropertyCompileTimeConstant+deprecatedByAnnotationReplaceWithExpressioncreateDeprecationDiagnosticdeprecatedByOverriddenMessagegetSinceVersion$computeLevelForDeprecatedSinceKotlinanalysisCompleted&generateSyntheticSecondaryConstructorsaddSyntheticSupertypesgenerateSyntheticPropertiesgetSyntheticPropertiesNamesgetSyntheticNestedClassNames$getPossibleSyntheticNestedClassNamesargumentValueadditionalMessageresolveAssignneedOverloadAssignconvertToUnsignedConstantconvertToSignedConstant&checkUsageOfKotlinRequiresOptInOrOptInisUsageAsQualifier
loadOptIns+isElementAnnotatedWithSubclassOptInRequiredisDeclarationAnnotatedWithisElementAnnotatedWithOptInanyParentMatchescheckCompilerArgumentsloadOptInForMarkerAnnotationgetDefaultDiagnosticMessageisUsageAsOptInArgument"findRelevantDataClassPropertyIfAnyisOptInAllowedloadSubclassOptInRequiredreportNotAllowedOptInsisContainsOnlyUnsignedTypesvalueToStringfindIntersectionType%findCommonSuperTypeOrIntersectionTypecheckConstructorreadonlyViewgetOwnDiagnosticsgetReadonlyViewonTheFlyDiagnosticsCallbackvisitEnclosingMethodcreateTypeBindingcreateTypeBindingFromPsi.createTypeArgumentBindingsWithSinglePsiElementcreateTypeBindingForReturnTypediscardallModulesProvidingExpectsForapplyFilteronlyFromThisModuleallModulesProvidingActualsForshouldGenerateExpectClassgetDiagnosticSuppressKey
jumpIfTruejumpIfFalsefindAnyActualsForExpected findCompatibleActualsForExpectedfindActualsisNotJavaSamInterfacefindExpectsfindCompatibleExpectsForActualdeprecationByOverriddengetOwnDeprecationsdeprecationsByConstituentTypesgetDeprecationsaddDeprecationIfPresent"getDeprecationByVersionRequirement%areDeprecationsInheritedFromOverriden(shouldSkipDeprecationOnKotlinIoReadBytes"getHiddenDeprecationsFromOverridengetDeprecationFromUserDataisInternalAnnotationForResolvehasInternalAnnotationForResolvegetExactInAnnotationshasHidesMembersAnnotationhasDynamicExtensionAnnotation"hasLowPriorityInOverloadResolutionisExactAnnotationrecordDataFlowInfogetTargetFunctionisInlineableFunctionLiteralgetEnclosingFunctionDescriptorgetReferenceTargetsisUsedAsStatementrecordScopegetAbbreviatedTypeOrType getParentOfTypeCodeFragmentAwaregetDataFlowInfoAftergetDataFlowInfoBeforegetEnclosingDescriptorgetTargetFunctionDescriptorisUsedAsExpressionfindClassifiersFromModule#areCompatibleTypesViaTypeRefinement areCompatibleTypesViaTypeContextareCompatibleTypesfindExpectedForActualfindActualForExpected!isExpectedClassAndActualTypeAliasfindNamesakesFromModulecreateEqualsFunctionDescriptorshouldAddFunctionFromAnyshouldAddToStringshouldAddHashCodeshouldAddEquals createToStringFunctionDescriptor createHashCodeFunctionDescriptordoCreateFunctionFromAnyaddFunctionFromAnyIfNeededregisterFileByPackageresolveFunctionBodyfilterOutSourceAnnotationscontainsStubTypesclassesFromInnerToOuterfirstOverriddengetClassObjectReferenceTargetisTypeRefinementEnabled!isPrimaryConstructorOfInlineClassisParameterOfAnnotationisEnumValueOfMethodgetAllSuperClassifiersvarargParameterPosition$getAllSuperClassesTypesIncludeItselfgetKotlinTypeRefinerisAncestorOffqNameOrNulloverriddenTreeUniqueAsSequencegetSuperInterfacesoverriddenTreeAsSequencegetSuperClassNotAnysetSingleOverriddenfirstArgumentgetSuperClassOrAnygetImportableDescriptorgetAllSuperclassesWithoutAnyisAnnotatedWithKotlinRepeatableisDocumentedAnnotation-getOwnerForEffectiveDispatchReceiverParameterhasAliascheckForSyntacticErrorsgetSyntaxErrorRangesvisitErrorElementformDebugNameForBindingTracethrowExceptionOnErrors!getSinceKotlinVersionByOverriddenisCopygetDeclarationCategoryisOverloadablecheckOverloadability(findOriginalTopMostOverriddenDescriptors(selectMostSpecificInEachOverridableGroup findTopMostOverriddenDescriptorscheckOverloads*isConstructorsOfDifferentRedeclaredClasses-findConstructorsInNestedClassesAndTypeAliasescheckOverloadsInPackagesreportRedeclarations!groupModulePackageMembersByFqName"isDefinitionsForDifferentPlatforms isExpectDeclarationAndDefinitionisSynthesizedisTopLevelMainInDifferentFilescheckOverloadsInPackagegetPossibleRedeclarationGroupsfindRedeclarations'collectModulePackageMembersWithSameName#getModulePackageMembersWithSameNamecheckOverloadsInClassaddElementToSliceindexOrMinusOnefilterStatementsgetLastStatementInABlock
checkBoundcheckBoundsInSupertype"checkBoundsForAbbreviatedSupertype"resolveAnnotationsFromModifierListresolveAnnotationEntriesresolveAnnotationType"resolveAnnotationsWithoutArgumentsgetTopLevelDescriptorsByFqNamecheckRedeclarationscheckRedeclarationsInPackagesresolveAnnotationsOnFiles#reportRedeclarationsWithClassifiersasImportedFromObjectisIrrelevantvarianceWithManualcheckClassesrecordPrivateToThischeckTypePositioncheckMembersrecordPrivateToThisIfNeededconfigureCompilerEnvironmentincludesEverythingIn%checkPropertyUseSiteTargetAnnotationscheckSuperTypeAnnotations-applicableTargetSetFromTargetAnnotationOrNullcheckExpressioncheckAnnotationEntry"getDeclarationSiteActualTargetListfindAllDependsOnPathshasImplementingModulesfindAllReversedDependsOnPathscheckModifierListcheckLanguageLevelSupportgetStdlibClassFinder%checkSubtypingBetweenContextReceiverscheckContextReceiversAreEnabled"checkClashWithOtherDelegatedMemberoverridesClassMembersOnlygetDelegatableMembersgenerateDelegationCandidatesgenerateDelegatesForInterfacegetDelegatesisOverridingAnyOfgetMembersByTypegenerateDelegatedMembers$hasImplicitIntegerCoercionAnnotationisEnabledFor	isAllowedresolveImportsInAllFiles-createPropertiesFromDestructuringDeclarationsregisterTopLevelFqNameanalyzeDeclarationsresolveAllHeadersInClassesresolveImportsInFilecreateTypeAliasDescriptorscreatePropertyDescriptorscreateFunctionDescriptorsshouldBeHiddenFromParentresolveExpandedTypeForTypeAlias(appendDefaultArgumentsForLocalClassifiergetScopeForTypeParameterresolveTypeForTypeAliasbuildFinalArgumentList%classifierDescriptorsFromInnerToOuterresolveTypeForClass*resolveTypeProjectionsWithErrorConstructorresolvePossiblyBareType$resolveTypeWithPossibleIntersectionsgetAllModifierLists!createErrorTypeForTypeConstructor#isPossibleToSpecifyTypeArgumentsForforceResolveTypeContents0checkNonParenthesizedAnnotationsOnFunctionalTypecanHaveFunctionTypeModifiersshouldCheckBoundsresolveProjectionKindresolveTypeAnnotationsresolveTypeForTypeParameterresolveTypeForClassifier,collectArgumentsForClassifierTypeConstructorresolveTypeProjectionsresolveAbbreviatedTyperesolveTypeElementcheckLocalVariableDeclaration!initializeWithDefaultGetterSetterresolveLocalVariableDescriptor7updateAccessorFlagsFromResolvedCallForDelegatedProperty&resolveLocalVariableDescriptorWithType)isGetterOfUnderlyingPropertyOfInlineClasssubstitutedUnderlyingTypesunsubstitutedUnderlyingTypesunsubstitutedUnderlyingTypeisNullableUnderlyingTypevisitStatementContainer&isRecursiveInlineOrValueClassTypeInner!isRecursiveInlineOrValueClassTypesubstitutedUnderlyingType(isGetterOfUnderlyingPropertyOfValueClass2isGetterOfUnderlyingPropertyOfMultiFieldValueClass isUnderlyingPropertyOfValueClass*isUnderlyingPropertyOfMultiFieldValueClasscheckSupportsFeaturegetResolutionAnchoraddConstraintForThisaddConstraintsForGetValueMethodaddConstraintsForSetValueMethodgetSourceFromAnnotation%collectEffectiveReferencedDescriptorsdescriptorToDeclaration0getSourceForExtensionReceiverParameterDescriptorgetSourceFromDescriptor!getEffectiveReferencedDescriptorsfindTopLevelParentonlyWithUseSiteTargetT_TOP_LEVEL_PROPERTYextraTargetsT_MEMBER_PROPERTYpropertyTargetsmoveAllMyDataToselfGet$disableContractsInsideContractsBlockcheckShadowedExtensionPropertycheckShadowedExtensionFunction+getInvokeOperatorShadowingExtensionFunction+isExtensionFunctionShadowedByMemberFunctionchoseOnlyVisibleOrAllasImportedFromObjectIfPossiblestoreReferencesToDescriptors collectCallableMemberDescriptorscomponent10configureExtensionsAndCheckersreportExposurereportExposureForDeprecationcheckDeclarationWithVisibility$hasImplicitIntegerCoercionCapabilitycreateFromProperty'createFromDestructuringDeclarationEntry
component9serializeTopLevelIrClassdeserializeTopLevelClasscreateInstanceFromBoxresolveCollectionLiteral)getFunctionDescriptorForCollectionLiteralgetArrayFunctionCallNamecomputeKindOfContainer%resolveCollectionLiteralSpecialMethodreportUnsupportedLiteralgetMissingSuperClassifiersdoGetMissingClassifiers	withTracereportForTypeAliasExpansion2containsIncorrectExplicitDefinitelyNonNullableTypeincompatibilityRegisterbuildCompatibilityMapcompatibilityForClassesRegistercompatibilityRegisterifSupportedredundantRegistercompatibilityconfigureDefaultCheckersgetResolutionAnchorIfAny!createComponentFunctionDescriptorcreateCopyFunctionDescriptorconflict	isInCycle!createSpecializedEqualsDescriptorisSpecializedEqualsMethod&isSynthesizedInlineClassMemberWithNameisSynthesizedBoxMethodcreateUnboxFunctionDescriptor)createValueParametersForSpecializedEqualscreateValueParameterForBoxing"createConversionFunctionDescriptorisSynthesizedBoxOrUnboxMethodcreateBoxFunctionDescriptorisSynthesizedUnboxMethodisSynthesizedInlineClassMembercheckIfHasBackingFieldcheckIfDelegatedPropertycheckIfPropertycheckAsTopLevelTypeReferencecheckIfMutablePropertyuseSiteDescription areEqualTypeConstructorsByAxioms&resolveQualifierAsReceiverInExpressionresolveQualifierReferenceTarget&resolveQualifierAsStandaloneExpression8getCallableReceiverDescriptorRetainingTypeAliasReference getModuleLanguageVersionSettingssingleSourceownersEquivalent areCallableDescriptorsEquivalentareClassesEquivalent reportGetSetValueResolutionError#createReceiverForGetSetValueMethods'buildSubstitutionMapOfNonFixedVariablesresolveDelegateExpressionresolveGetSetValueMethod$reportDelegateErrorIfCandidateExistsgetDelegateTypeinverseSubstitutionresolveSetValueMethodresolveGetValueMethodreportDelegateFunctionMissingrecordDelegateOperatorResultsaddConstraintForThisValuegetResolvedDelegateTyperesolveWithNewInference%createContextForProvideDelegateMethodresolveProvideDelegateMethodcreateExpressionForPropertygetGetValueMethodReturnType
renderCall"createContextForGetSetValueMethodsresolvePropertyDelegateconventionMethodFoundextractResolvedDelegateTypegetGetSetValueMethodgetProvideDelegateMethodcompleteNotComputedDelegateType'inferDelegateTypeFromGetSetValueMethodsgetDefaultImportscheckActualFunctioncheckTypeAliasDeclarationcheckExpectedFunctioncheckPrimaryConstructorcheckAnnotationClassMemberscheckValOnAnnotationParameter!isImplementingMethodOfAnyInternalcheckTypeParameterConstraintscheckOpenMemberscheckObjectcheckSupertypesForConsistencyisHidingParentMemberIfPresent.checkModifiersAndAnnotationsInPackageDirectivecheckMethodsOfAnyInInterfacecheckTypesInClassHeaderremoveDuplicateTypesisImplementingMethodOfAnycheckConstructorInInterfacecheckMemberPropertycheckActualTypeAliasnoExplicitTypeOrGetterTypecheckLocalAnnotationcheckConstructorVisibility#reportVisibilityModifierDiagnosticscheckAccessorcheckImplicitCallableTypecheckClassButNotObjectcheckBackingField0checkPropertyTypeParametersAreUsedInReceiverTypecheckLocalTypeAliasDeclarationcheckExpectedClassConstructorcheckPrivateExpectedDeclarationcheckAccessorscheckTypeAliasExpansioncheckConstructorDeclarationhasConstraintshasAccessorImplementationgetUsedTypeAliasParameters"checkLateinitModifierApplicabilitycreateConstructorDescriptorremoveParameterNameAnnotationgetContextReceiversTypescreateValueParameterDescriptors%resolveSecondaryConstructorDescriptor1initializeFunctionDescriptorAndExplicitReturnTypegetContractProviderresolveFunctionDescriptor#resolvePrimaryConstructorDescriptor/initializeFunctionReturnTypeBasedOnFunctionBodygetReceiverTypefunctionTypeExpected#resolveFunctionExpressionDescriptortransformAnonymousTyperesolveDelegatedPropertyType#getTypeForPropertyWithoutReturnTyperesolveInitializerTyperesolveTypeNullablesetConstantForVariableIfNeededabstractInvisibleMembercheckVisibilityForMembercheckInheritedDescriptorsGroup(checkMissingOverridesByJava8RestrictionsisReturnTypeOkForOverride(shouldReportParameterNameOverrideWarningcheckOverrideForCopyFunction!computeRelevantDirectlyOverriddencheckOverridesForMemberabstractMemberNotImplementedcheckOverridesInAClassgetRelevantDirectlyOverriddenfindDataModifierForDataClassresolveUnknownVisibilities#reportInheritanceConflictIfRequiredoverridingFinalMembertoDeprecationStrategycheckOverridesForParameters+checkNameAndDefaultForFakeOverrideParameterdoReportErrorscannotOverrideInvisibleMember(conflictingInterfaceMemberNotImplemented%abstractBaseClassMemberNotImplementedcheckPropertyKindprepareTypeSubstitutor+multipleImplementationsMemberNotImplementednothingToOverride%checkOverridesForMemberMarkedOverride0collectAbstractMethodsWithMoreSpecificReturnType!checkOverrideForComponentFunction$checkParameterOverridesForAllClasses!reportDelegationProblemIfRequiredcheckOverrideForMembercheckInvisibleFakeOverridevarOverriddenByVal'checkNameAndDefaultForDeclaredParametertypeMismatchOnInheritancereturnTypeMismatchOnOverridecheckOverrides!findInvisibleOverriddenDescriptorgetMissingImplementations$checkInheritedAndDelegatedSignatures#createCannotInferVisibilityReporter"abstractMemberWithMoreSpecificTypeguardedrenderDebugInformationgetFieldForObjectInstance
incCountergetModificationCount
simpleLock getPrivateFieldForObjectInstance*findClassifierAndReportDeprecationIfNeeded*resolveClassOrPackageInQualifiedExpressionresolvePackageHeaderstoreQualifierresolveToPackageOrClassPrefixclassDescriptorFromTypeAliasquickResolveToPackageresolveInIDEModeresolveQualifierPartListForTypedoProcessImportReferencerecordPackageViews%resolveQualifierInExpressionAndUnrollcheckNotEnumEntryprocessImportReferencemapToQualifierPartsprocessSingleImport"resolveDescriptorForDoubleColonLHS.resolveNameExpressionAsQualifierForDiagnosticsasQualifierPartList*tryResolveDescriptorsWhichCannotBeImportedcomputePackageFragmentToCheckmakeFlattenedGetterExpressionsmakeStatementsmakeGetterExpressiontransformPropertytransformFunction(getReplacementForRegularClassConstructorcreateMethodReplacement#quickCheckIfFunctionIsNotApplicablegetKtModuleForKtElementallDirectDependenciesOfType!directDependsOnDependenciesOfTypedirectFriendDependenciesOfTypeallDirectDependenciesdirectRegularDependenciesOfType&computeTransitiveDependsOnDependenciesgetKtModuleOfTypeSafegetKtModuleOfTypegetKtModuleincModificationCountisEdgeInCyclecollectReachabledoBuildGraphcreateStaticReplacementcreateExternalJsFunction	irIntPlus forEachNonKotlinPsiElementFinder
remapValuematchIteratorCall%createAllLibrariesModificationTrackerzeroStepExpressionrelativeFqNameisCompiledFilevirtualFilesFromKotlinModulevirtualFilesFromModuleinitializeIterationcontinuationTypegetScopeOwnerSymboltransformBranchesremapVariableaddToScriptMapaddToFacadeFileMapaddToFunctionMapaddToPropertyMapaddToTypeAliasMapcreateKtFileStubaddToClassMapcachedValueWithLibraryTrackervisitWhileLoopfindCorrespondingLightClass'createLightClassForDecompiledKotlinFile!createClsJavaClassFromVirtualFilegetClassRelativeName(createLightFacadeForDecompiledKotlinFile'getLightClassForDecompiledClassOrObjectvisitDoWhileLoopfindByStubs6createSoftlyRetainedMemoizedFunctionWithNullableValues$createSoftlyRetainedMemoizedFunctioncreateSafeTracenormalizeDeclarationuseConstructorMarkergetTypeElementdefaultArgumentStubVisibilitymatchIterabletransformGettertoStringKeygetDeclarationForDescriptorgetBuiltinsDescriptorKey
addToIndexhasDeclarationWithKeyonContentReloadgetDefaultExtensionisBinary%findMethodsAndTheirSubstitutorsByNamefindMethodsBySignature!getAllMethodsAndTheirSubstitutorsgetExtendsListTypes*createIncompatibleAbiVersionDecompiledTextbuildDecompiledTextForClassFilereadFileSafelyrelativeClassNameexcludeParametersFromDescriptordesc defaultDecompilerRendererOptions mustNotBeWrittenToDecompiledTextoutputIfNotEnabledcreateDummyPackageFragmentcreateDummyModulerunAfter"DeserializerForClassfileDecompiler	phaseBodyreadBooleanAttributewriteEnumAttributewriteBooleanAttributereadEnumAttributegetLabelForBuiltInFileTypegetNamedSubphasesshouldDecompileBuiltInClass isKotlinWithCompatibleAbiVersiongetContentsisKotlinInternalCompiledFileisValidAndExistsisMultifileClassPartFilefindMultifileClassPartsdoBuildFileStubcreateStubBuilderComponentsisVersionedcreateBooleanFlagToModifier	runBeforecreateAnnotationStubscreateStubForPackageNamecreatePackageFacadeStubcreateTopLevelClassStubcreateMultifileClassStub$createIncompatibleAbiVersionFileStubcreateStubForTypeNamecreateFileFacadeStub$createModifierListStubForDeclarationcreateEmptyModifierListStubcreateTargetedAnnotationStubssetupFileStubchangePhaserStateTypecreateDeclarationsStubscreatePackageDeclarationsStubscreateContextReceiverStubscreateReceiverTypeReferenceStubcreateReturnTypeStubcreateTypeAliasStubtoProjectionKindcreateTypeReferenceStubcreateTypeParameterListStubisDefaultUpperBoundcreateTypeConstraintListStubcreateFunctionTypeStubgetTypeModifiersAsWrittencreateClassReferenceTypeStubcreateTypeArgumentListStubcreateTypeAnnotationStubscreateTypeParameterStubcreateValueParameterListStubcreateKotlinTypeBean#createTypeParameterModifierListStubnullableTypeParentcreateDefinitelyNotNullTypeStubcreateClassBodyAndMemberStubscreateCompanionObjectStubcreateCallableMemberStubsshouldValidateStateAftercreateEnumEntryStubsdoCreateClassOrObjectStubcreateDelegationSpecifierListcreateModifierListForClasscreateNestedClassStubcreateInnerAndNestedClassesisClassshouldDumpStateAfter*createClassOrObjectStubAndModifierListStubcollectAllExpectedByModulesgetLibraryRoots!configureCommonSpecificComponents"createContainerToResolveCommonCodeunwrapPlatformcreateHeaderInfogetKotlinBinaryClassgetKotlinBinaryFromCachekotlinJvmBinaryClasstoLightHeaderisKotlinJvmCompiledFilegetKotlinBinaryClassHeaderDatacreateModificationTrackerresolverForModule	isVerboseshouldDumpStateBeforeshouldValidateStateBeforecomputeErrorMessagegenerateEnumEntrygetTargetPlatformgetLanguageVersionSettings
otherErrorerrorInLibrariesResolver,errorInModulesResolverWithScriptDependencieserrorInScriptModuleInfoResolver errorInSpecialModuleInfoResolvererrorInSdkResolver$errorInModulesResolverWithEmptyInfos%errorInModulesResolverWithLibraryInfo%errorInScriptDependenciesInfoResolvererrorInModulesResolvergenerateClassgenerateStubsAndPatchUsagescertainlyDoesNotExistcreateOracle(exploreClassifiersInInlineLazyIrFunctionassertModuleDependencyIsCorrectfileModificationTracker&createMappedTypeParametersSubstitutiononResolverComputedexploreClassifiers	guessNamemoduleDescriptorInvalidatedneedToConstructFakeOverridesrenderResolverModuleInfosdoGetDescriptorForModulerenderLinkageErrorsetupModuleDescriptorisCorrectModuleInfo%isResolverForModuleDescriptorComputedrecreateModuleDescriptor
checkValidisOutOfDatecheckModuleIsCorrectreportInvalidResolverresolverForModuleDescriptorImplrenderResolversChainContentscreateModuleDescriptorgetAdditionalCapabilitiesisSerializableInJavabuildPrimitiveValueMethodsSet#buildPrimitiveStringConstructorsSetmapPlatformClassconvertMutableToReadOnlyconvertToOppositeMutabilityconvertReadOnlyToMutablegetSuspendFunctiongetFunctionClassKindgetJdkMethodStatus createMockJavaIoSerializableTypeisTrivialCopyConstructorForgetAdditionalFunctionscreateCloneForArrayisMutabilityViolationgetJavaAnaloguegetAdditionalClassPartsProvidersetPostponedSettingsComputationgetClassDescriptorFactoriesaddKotlinToJava$mapJavaToKotlinIncludingClassMappingisJavaPlatformClassmapKotlinToJavamutabilityMappingisKotlinFunctionWithBigArityaddJavaToKotlinaddTopLevel(functionInterfacePackageFragmentProviderreplaceParameterNames'isMappedIntrinsicCompanionObjectClassIdisUnsignedArrayTypeisUnsignedArrayClasstoUnsignedArrayTypeisShortNameOfUnsignedArray(getUnsignedArrayClassIdByUnsignedClassIdtoUnsignedTypeisUnsignedClass getUnsignedClassIdByArrayClassIdisShortNameOfUnsignedType!allClassesWithIntrinsicCompanionsgetByShortArrayNamegetByShortNamenonReflectKindnumberedClassIdnumberedClassNamereflectKind-transformSuspendFunctionToRuntimeFunctionTypecompilationErrorthrowIfErrorclearTextFromDiagnosticMarkupclearFileFromDiagnosticMarkupgetFunctionalClassKindgetFunctionalClassKindWithAritypreProcessReferencemarkDebugAnnotationsreportIfDynamicisCallableTypegetKSuspendFunction	hasFqNamegetKPropertyTypehasKCallableTypeFqNameisNumberedKMutablePropertyTypehasKPropertyTypeFqNamegetKClassTypeisReflectionClassisNumberedKPropertyTypegetKFunction)isNumberedKPropertyOrKMutablePropertyTypeisNumberedKSuspendFunctionhasKMutablePropertyTypeFqName!isNumberedTypeWithOneOrMoreNumber%isNumberedKFunctionOrKSuspendFunctionisNumberedKFunctionisPossibleExpectedCallableType#isBaseTypeForNumberedReferenceTypescreateKPropertyStarTypeparseLegacyPluginOptioncliPluginUsageStringgetPluginOptionStringparseModernPluginOptionwrongParametersDiagnosticunexpectedDiagnosticmissingDiagnostic*getPureArgumentsForFunctionalTypeOrSubtypeisNumberedFunctionClassFqName&withContextReceiversFunctionAnnotation,extractParameterNameFromFunctionTypeArgument&getValueParameterTypesFromFunctionType"getFunctionTypeArgumentProjectionscontextFunctionTypeParamsCountisBuiltinFunctionClasshasExtensionFunctionAnnotation"withoutExtensionFunctionAnnotation#extractFunctionalTypeFromSupertypesgetKFunctionDescriptorgetReturnTypeFromFunctionTypewithExtensionFunctionAnnotation0getValueParameterTypesFromCallableReflectionTypereplaceReturnTypegetReceiverTypeFromFunctionTypegetFunctionDescriptor'getContextReceiverTypesFromFunctionTypegetFunctionTypeKindregisterInProjectregisterExtensionsForTestregisterExtensionUnsafenewDiagnosticrenderCallableOwnergetCallDebugInfohasExplicitDefinitionOnlyOptiongetTypeOfCallunexpectedDiagnosticsgetTypeInforenderDiagnosticsByFactoryListsafeAdvancecompareDiagnosticsopenDiagnosticsStringaddDiagnosticMarkersToTextgetSortedDiagnosticDescriptors#getDiagnosticsIncludingSyntaxErrorsgroupDiagnosticsByTextRangerenderDiagnosticsparseDiagnosedRangesdiagnosticsDiffmissingDiagnosticscompareTextDiagnosticcloseDiagnosticStringgetDebugInfoDiagnostics$getActualSortedDiagnosticDescriptorsassertSameFile
appendListasMutableListapplyOptionsFromasTextDiagnosticcomputeInferenceCompatibilityparseDiagnosticextractDataBefore%createContainerForLazyResolveWithJava!initJvmBuiltInsForTopDownAnalysisconfigureJavaSpecificComponents initializeJavaSpecificComponentscreateTopDownAnalyzerForJscreateContainerForJSbytesToStringsstringsToBytesfqNameUnsafegetKSuspendFunctionNamegetKFunctionClassIdgetKFunctionFqNamecollectionsFqNamegetSuspendFunctionNamegetSuspendFunctionClassIdrangesFqNamegetFunctionClassIdgetKSuspendFunctionClassIdgetPrimitiveFqNameannotationNamewriteMultifileFacadeNamesgetMultifileFacadeShortNameIdgetMultifileFacadeNamewritePartsOutsidePackage
removePartaddMetadataPartwritePartsWithinPackageconfigureModule"configureStandardResolveComponents&configurePlatformIndependentComponentscreateContainerForLazyResolve-createContainerForLazyLocalClassifierAnalyzercreateContainerForBodyResolveconfigureIncrementalCompilation!createContainerForLazyBodyResolve)createContainerForLazyBodyResolve$defaultconfigureModule$defaultgetPropertyFlagsgetClassFlagstoNameResolvertoExpandedRecordsListserializeToByteArrayinternalNameOfgetPredefinedStringIndexreadVersionNumberemptyBinaryDataloadMultiFileFacadeInternalName	newerThan+lastSupportedVersionWithThisLanguageVersionisCompatibleInternalgetExtensionOrNullgetJvmMethodSignatureisMovedFromInterfaceCompanionreadNameResolverreadFunctionDataFromgetJvmConstructorSignaturewriteDataBytesreadPackageDataFromreadClassDataFromgetJvmFieldSignaturereadBuiltinsPackageFragment)isVersionRequirementTableWrittenCorrectlyisKotlin1Dot4OrLatertraverseIdsisAtMostparseVersionArrayisInstanceTypecontextReceiverTypesupperBoundsabbreviatedTypeinlineClassUnderlyingTypeexpandedTypehasReceiverunderlyingTypeflexibleUpperBoundcomputeMangleisJvmdeprecatedIsNativesubplatformsOfTypeisCommontoTargetPlatformserializeToStringisMultiPlatformisWasmlegacySerializeToStringsetCompilationCanceledStatusjvmPlatformByTargetVersionnativePlatformByTargetsnativePlatformBySingleTargetnativePlatformByTargetNames"typeStringsDifferOnlyInNullability$replacePrefixesInTypeRepresentationsshouldBeEscapedregisterSingletonregisterInstancetraverseClasscollectInterfacesRecursivegetDefaultImplementationgetSetterInfosgetConstructorInfogetInfogetClassInfouseInstanceIfNotNull	useImplIfcomposeContainertryGetServiceuseClashResolveruseInstanceuseImpl$runWithUnwrappingInvocationExceptionappendBeforeValueParametergetClassifierKindPrefixappendBeforeValueParametersappendAfterValueParametersappendAfterValueParameterrenderFunctionParametersbuildRegistrationMaptryGetEntryresolveClashesIfAnybindArgumentsbindToConstructorbindToMethodserializePackageFragmentregisterDisposableObjectdisposeImplqualifierNamequalifiedNameForSourceCodegetDescriptorsInDisposeOrdercomposeDescriptorscollectAdhocComponentsregisterDependency#inspectDependenciesAndRegisterAdhocinjectPropertiesgetImplicitlyDefinedDependencydisposeDescriptorinvertedcollectFromEffectcollectFromSchemafoldConditionsWithOrcomputeParameterstoESVariableequateValuesisSafeToProduceFalseequateCallAndConstanttoESTypeapplyWithDefaultapplyIfBothNotNullinvokeWithValueshouldBeSkippedresolveIterabletransformChildrentransformVoid	isReturnsisExportedDeclarationcomputeSignatureByDeclarationreferenceDeserializedSymboldeserializeIdSignatureisNullConstantreduceEffectsreduceEffect%isContractDescriptionCallPreciseCheckcheckFeatureEnabledcheckContractAndRecordIfPresentparseContractAndReportErrorsparseIdentityEqualsprocessEqualsparseConditionparseVariableparseEffect
parseValue$checkDuplicatedCallsEffectsAndReportparseContractparseConstantisValidEffectDeclarationtoInvocationKindrenderConstructorrenderValueParameterrenderMemberModifiersrenderPropertyAnnotationsrenderTypeAliascreateSignatureBuilderrenderSpaceIfNeededrenderNormalizedTypeAsIsrenderContextReceiversrenderSuperTypesrenderModalityrenderClassKindPrefixrenderOverride!implicitModalityWithoutExtensionsrenderReceiverAfterNamerenderValVarPrefixrenderMemberKindrenderNormalizedType renderAndSortAnnotationArguments&renderCapturedTypeParametersIfRequiredrenderSuspendModifierhasModifiersOrAnnotationsappendDefinedInarrowrenderPackageHeaderrenderDefaultTypeoverridesSomethingrenderModalityForCallableisParameterNamerenderPackageViewreportUnexpectedDescriptorrenderInitializerrenderClasscomputeSignaturerenderFunctionTyperenderWhereSuffixshouldRenderParameterNamesrenderVariablerenderVisibilityinFilerenderPossiblyInnerType shouldRenderAsPrettyFunctionTyperenderConstantrenderPackageFragmentvisitSimpleFunctionvisitPropertyAccessorDescriptor!renderTypeConstructorAndArgumentsrenderReceiverrenderCompanionObjectNamerenderAdditionalModifiersvisitEnumEntryrenderForReceivervisitConstructorappendTypeProjectionsrenderSimpleTyperenderAccessorModifiersrenderAbbreviatedTypeExpansionaddIdSignaturerenderKeywordrenderTypeParameterListequal
initAndAddnotEqual
notSubtypesubtypefireaddModuleReachableTopLevelisReturnsWildcardDescriptorisImpliesCallDescriptorisReturnsEffectDescriptorfirstArgumentAsExpressionOrNullisReturnsNotNullDescriptorisEffectDescriptorequalsDslDescriptorisFromContractDslisContractCallDescriptorisInvocationKindEnumisCallsInPlaceEffectDescriptorisEqualsDescriptorsetContractDescription!referencePropertyByLocalSignature deserializeReachableDeclarationsfileDeserializerssignatureDeserializerForFilecanBeRevisitedcanBeVisitedisDefinitelyVisited'referenceSimpleFunctionByLocalSignaturedeserializeDeclarationdeserializeIrSymbol"newDeclarationToDeclarationMapping,newDeclarationToDeclarationCollectionMapping	fromRangetoDataFlowInfotoDataFlowValueextractDataFlowStatementsdataFlowEqualsfindByGetterOrSetterrecordDefiniteInvocationsgetDataFlowInfoForFinishedCall extractDataFlowInfoFromConditiongetContextInfoWhengetDataFlowInfoWhenEqualsgetNonTrivialComputationisResolvedWithSamConversionshasJavaOriginInHierarchyisVisibleOutsidesyntheticVisibilitygetTypeSubstitutionextractOrGetCachedtoComputation	visitLoopgetCallArgumentsAsComputationsisCallWithUnsupportedReceiver	getScopescanBePropertyAccessorcreateLight"convertContractDescriptorToFunctorinterpretVariableinterpretConditioninterpretEffect
visitCatchisPassThroughcreatePreprocessedLightFilecreatePreprocessedFileisASpecialAnnotationhasSpecialAnnotation
visitBlockvisitTypeParameterrefineDeclarationModality(shouldConvertFirstSAMParameterToReceiverinterceptResolvedCandidatesinterceptCandidatescreateTranslatorsgetDispatchReceiverForBackend&getDispatchReceiverParameterForBackendgetSamFunctionsgetSamAdaptersFromConstructorssubstituteForReceiverTypeextensionForFunctionNotCachedrecordSamLookupsForParametersgetAllSamConstructorscreateJavaSamAdapterConstructorcomputeDefaultTypegetTypeAliasConstructorscollectSyntheticPropertiesfindOverriddencreateSyntheticPropertyHolder(syntheticPropertyHolderForBeanConvention$getSyntheticPropertyAndRecordLookupsisGoodGetMethodvisitAnonymousInitializer collectSyntheticPropertiesByNameisGoodSetMethod-syntheticPropertyDescriptorForRecordComponent!syntheticPropertyInClassNotCacheddeserializeConstant$deserializePossiblyConditionalEffectdeserializeSimpleEffectisNativeStdlibcreateIfAvailable$getTypeSubstitutorForUnderlyingClassvisitAnonymousInitializerNew&isEnumClassOrSpecializedEnumEntryClassloadIsRecordloadIsSealedloadGetPermittedSubclassesloadGetRecordComponentsgetDestructuringVariablesOrNull#createWithDestructuringDeclarationstoRuntimeFqNameloadGetTypeloadGetAccessortryLoadClassgetPackagePartScopecomposeAnnotationsprocessAnnotationArgumentsloadFieldAnnotationsprocessAnnotationArgumentValueloadMethodAnnotationsclassLiteralValueconstructorDesc	fieldDescloadParameterNamesshouldBeReturnedcreateDeprecatedAnnotationvisitScript	afterLoopclassActualTargets
beforeBody	afterBodycreateLoopTempVariable%storeProgressionParametersToLocalVarsconvertFromFlagsgetOtherAnnotationsgetAnnotationsForTargetoverridesEqualsFromAny%findContinuationClassDescriptorOrNullfindContinuationClassDescriptorisSupportedForCallableReferencegetContinuationOfTypeOrAnycontainingPackagegetTopLevelContainingClassifierresolveClassByFqName%findTypeAliasAcrossModuleDependencies%findNonGenericClassAcrossDependencieswithResolutionAnchor&findClassifierAcrossModuleDependencies computeConstructorTypeParameterscapturedCopyForInnerDeclarationisBackingFieldReferencenotifyModuleInvalidatedassignToLoopParametercreateTypeCheckerContextincrementAndCheckPostConditionassignLoopParametersNextValues
beforeLoopmoduleInvalidatedmapUnderlyingTypecheckEmptyLoopfromBoundedValueWithStepMinus1fromBoundedValueWithStep1storeRangeStartAndEndisVisibleIgnoringReceiverfindInvisibleMembercheckPreConditionisVisibleWithAnyReceivervalueClassLoweringKindcreateValueClassRepresentationpackageFragments*collectPackageFragmentsOptimizedIfPossiblecheckPostConditionAndIncrementjumpIfLessThanZerodependentDescriptorsleastPermissiveleastPermissiveDescriptorforVisibilitycreateNonDeprecatedcreateDeprecatedjumpIfGreaterOrEqual
asRendererdeduplicatingfromDiagnosticrenderKindWithName
renderKindcompareLocalContextDependentRendererRendererrenderAmbiguousTypeParameterhasUniqueNamewrapIntoQuotesrenderTypesrenderConstraintSystemrenderCallInforenderTypeBoundrenderParameterConstraintError,renderConflictingSubstitutionsInferenceError=renderUpperBoundViolatedInferenceErrorForTypeAliasConstructorrenderTypeVariable%renderCannotCaptureTypeParameterErrordebugMessage&renderUpperBoundViolatedInferenceErrorrenderExpressionType$renderNoInformationForParameterErrorrenderAmbiguousDescriptorsrenderTypeBoundsjumpIfLessOrEqualrelationtoVisibilitycollectClassifiersFqNames"collectMentionedClassifiersFqNameswithAnnotationsWhitelistjumpIfGreater
jumpIfLesscreateInExpressionGeneratorcheckPsiTypeConsistencyreportOnDeclaration,reportDiagnosticOnceWrtDiagnosticFactoryList%reportTypeMismatchDueToTypeProjection3reportTypeMismatchDueToScalaLikeNamedFunctionSyntaxreportFromPluginreportOnDeclarationAsisScalaLikeEqualsBlockreportDiagnosticOncereportOnDeclarationOrFailcreatePendingReportercreateReporterinitializeNameinitDefaultRendererwarning1warning3deprecationError4error1error0error3error2error4warning2warning0deprecationError3deprecationError1deprecationError2warning4deprecationError0requireSourceNotNull&createDestructuredPairForLoopGeneratorcreateForLoopGenerator createForInReversedLoopGenerator$createIntrinsicInExpressionGeneratorisIntrinsicInCallnonFillerFirstChildOrSelfisFillernonFillerLastChildOrSelfgetBoundedValuemapLineNumberhackyIsValidwarningMessageprojectionPositiongetReferencedTypeExpressionmodifierSetPosition
setDefaultgetChildrenArrayoperationReferenceinitKeywordfindLastChildByTypefindParentOfTypekeywordStrategy	ifKeywordcompanionKeyword	byKeyword
safeAccessfindExpressionDeep	lastChildvalueParameterListelseKeywordconstructorKeywordfindDescendantByTypedotOperatorlastChildExpressionreceiverTypeReferenceuserTypewhenKeywordfirstChildExpressionfieldKeywordsupertypesListtypeParametersListfindFirstDescendantoverrideModifiernameIdentifierinlineModifieraccessorNamePlaceholderfindChildByTypereturnKeywordfindLastDescendantgetAncestorstraverseDescendantsobjectKeywordfindDescendantByTypesvalOrVarKeywordhasVarrightParenthesisgettermodifierListreferencedTypeExpression	visitMaxsisSuppressedByAnnotatedisSuppressedByStringsgetOrCreateSuppressor	dominatesisTopLevelInJvmMultifileClassreportExceptiongetPartFqNameForDeserializedgetFacadeClassInternalNamegetFileClassInfoNoResolverememberClosure#getLiteralStringEntryFromAnnotationgetFieldNameForFoldinginstructionIndexserializeIrFilegetFieldForInlinefromByteArray
canProcessgetMethodNodecloseForTestfilterClassesToclassesFqNamesgetStorageOrCreateNewcreateTransformergetStorageIfExists	createMapcreateLazyStorageImplcreateLazyStoragecanRemoveAfterTransformationshouldRegeneratehasFinallyBlockstoPathstoFilesregisterMapforEachMapSafeclearOutputsForSource
getFqNames#rewritePluginDefinedOperationMarkergetDirtyOutputClassesnotDirtyisDirtygetPossibleModuleNamesForDirgetPossibleModuleNamesFromJargetHistoryForModuleNamesrecordPackageLookupfindReachableNodesisInaccessiblesnapshotKotlinClasssnapshotJavaClassisInProjectBuildDirtoProgramSymbolSettoLookupSymbolvalueIsAStrongReferenceupdateToSoftReferencevalueWasGarbageCollectedsetStrongReferencelastUsedcreateObjectTypecreateFromStringgetImpactingClassesgetLookupNamesInScopegetImpactedClassesgetImpactedClassMemberscomputeImpactedSymbolscreatePrimitiveTypeboxTypeloadContentsgetNonDuplicateClassSnapshots%removeDuplicateAndInaccessibleClassesshrinkAndSaveClasspathSnapshotgetClassIdToSupertypesMapgetClassIdToSubclassesMapflagEnabledgetAccessFlagsgetInnerClassesInfocollectClassMemberChangescollectClassChanges$computeFineGrainedKotlinClassChangescomputeKotlinClassChangescomputeClassChangescomputeClasspathChangescomputeChangedAndImpactedSet&computeCoarseGrainedKotlinClassChangestoProgramSymbolsaddPackageMembers
addClassesaddClassMembersaddClassMembergetKotlinClassHeadergenerateClosureBodyreportVerboseWithLimitgetEntryStateevictEntriesreadLocknewTimePeriod	writeLockgetOriginValuegetMergedValuetryApplygetLookupSymbols!findTransitivelyReferencedClassesfindReferencedClassesshrinkClasspathshrinkClassesrecordRemove	recordSetmapClassesFqNamesToFilesmakeCompileServicesgetChangedSymbolsfindSealedSupertypeswithSubtypesmakeModuleFilesanitizeJavaIdentifierupdateIncrementalCachemapLookupSymbolsToFilesgetChangedAndImpactedSymbols
hashToLonggetExtraInforemoveOutputForSourceFilesgetOutputForSourceFilesregisterOutputForSourceFilesgetProtoDatatoMutableLinkedSetaddByDirtySymbolsaddByDirtyClassescollectSignaturecollectRemovedMemberscollectAllFromClasscollectProtoChangesprotoDataRemovedaddChangedParentsgetSetcollectChangedParentscollectMemberIfValueWasChangedcollectAllFromPackagecollectChangedMembersprotoDataChangescollectRemovedMembercollectChangedMemberchangesgetNonPrivateNamesdeleteRecursivelyOrThrowdeleteDirectoryContentsgenerateImplreadAbiSnapshotwriteStringArraywriteAbiSnapshot writeMessageWithNameResolverImplwriteMessageWithJvmNameResolverreadStringArraycollectSuspensionPointscalcDifferenceForMemberscalcDifferenceForEqualHashescalcDifferenceForNamesaddFileIfNeededremoveLookupsFromremoveGarbageForTestsforceGCsnapshotClasssortClassMemberssnapshotMethodsnapshotClassExcludingMemberssnapshotField
emptyClasswithIncrementalCompilationmakeJvmIncrementallyregisterOutputForFilenonDirtyPackagePartsupdateSourceToOutputMaphasHeaderFilenonDirtyIrParts
toCallablegetOutputsBySourcetaintdumpCollectiondumpMapnamesgetConstantsgetCompanionObjectNameinScopecompareJarsInternaladdProtoInforeadDirtyDatareadDiffsFromFilewriteLookupswriteDirtyDatareadLookupsreadBuildDifferencewriteFqNamesreadFqNameswriteBuildDifferenceisStaticFinalmarkControlFlowMerge	mergeFromonMergeSuccessconvertToProto	runWithintoStringPropertiesaddLookupSymbolswithJsICmakeJsIncrementallycollectNewDirtySourcesregisterCachecreateDefaultPathConverteronMethodCallWithBoxedValuegetSortedCallableDescriptors
onAreEqualcloseCachesManager
onUnboxingcheckForExecutionExceptionconfigureSourceRootsFromSourcesconfigureBaseRoots	stashFileonNewBoxedValue&isFileRelocationIsAlreadyRegisteredForgetNextRelocatedFilePathonMergeFailcleanupStashrevertChangeswriteBytesWithSizereadBytesWithSizeaddToClassStorageonCompareTotypeConstValue
arrayValuehandleValue	longValueobjectValueaddDependentCacheremoveAllFromClassStorage processChangedUntrackedJavaClassforceExhaustiveWhentoChangeInfoListmethodValuecalculateSourcesToCompileImpl%processLookupSymbolsForAndroidLayoutsprocessChangedJavaintValue
shortValue	charValue	byteValueaaLoadValueuninitializedValuereadArrayOrNullcheckEqualsClassSupertypeId$checkEqualsClassSealedSubclassFqName#checkEqualsClassContextReceiverType&checkEqualsPropertyContextReceiverTypeoldGetIndexOfString checkEqualsFunctionTypeParameter4checkEqualsClassMultiFieldValueClassUnderlyingTypeId!checkEqualsFunctionValueParameter&checkEqualsTypeAliasVersionRequirementcheckEqualsClassFunctionoldGetTypeById2checkEqualsClassMultiFieldValueClassUnderlyingType%checkEqualsClassContextReceiverTypeId&checkEqualsFunctionContextReceiverTypecheckEqualsPackagePropertycheckEqualsClassProperty(checkEqualsFunctionContextReceiverTypeIdcheckEqualsClassNestedClassNamecheckEqualsPackageFunctionnewGetTypeByIdnewGetIndexOfClassIdcheckEqualsTypeAliasAnnotationcheckEqualsClassEnumEntry%checkEqualsFunctionVersionRequirement(checkEqualsPropertyContextReceiverTypeIdcheckEqualsTypeArgument-checkEqualsVersionRequirementTableRequirement$checkEqualsConstructorValueParameternewGetIndexOfStringcheckStringEquals!checkEqualsTypeAliasTypeParametercheckEqualsClassTypeAliascheckClassIdEquals"checkEqualsTypeParameterUpperBound"checkEqualsClassVersionRequirement checkEqualsExpressionAndArgumentcheckEqualsClassSupertypecheckEqualsContractEffectgetIndexOfString$checkEqualsTypeParameterUpperBoundId(checkEqualsConstructorVersionRequirementcheckEqualsClassTypeParametercheckEqualsExpressionOrArgumentcheckEqualsPackageTypeAliasgetIndexOfClassId checkEqualsPropertyTypeParametercheckEqualsAnnotationArgumentternaryOperationcheckEqualsClassConstructor*checkEqualsEffectEffectConstructorArgument2checkEqualsClassMultiFieldValueClassUnderlyingNameoldGetIndexOfClassId.checkEqualsAnnotationArgumentValueArrayElement%checkEqualsPropertyVersionRequirementscopeFqNameisJavaClassToTrackstoreModuleMappingaddPackagePartisMultifileFacadesaveFrontendClassToCachesaveJavaClassProtocollectClassChangesByFeMetadatasourceInCachesourcesByInternalNamesaveFileToCacheisPackagePartisJavaClassAlreadyInCachesaveClassToCacheisTrackedFileputAndCollectgetObsoleteJavaClassesgetAllPartsOfMultifileFacadedebugLogsaveModuleMappingToCacheclassesBySourcesserializeFragmentdeserializeVarsdeserializeLocalAliasdeserializeNoMetadatadeserializeCommentdeserializeCompositeBlockdeserializeParameterdeserializeJsImportedModuledeserializeFunctiondeserializeNoMetadataHelpercopyOperationserializeVarsserializeUnaryunaryOperationserializeParameternaryOperationmergeControlFlowEdge
initLocalsprocessChangesAfterBuildvisitOpInsncreateTransaction#createIncrementalCompilationContextvisitLookupSwitchInsnNodecompileNonIncrementallycollectMetricstraverseCfgvisitJumpInsnNodereportPerformanceDatacleanOrCreateDirectoriesgetClasspathAbiSnapshotgetLookupTrackerDelegategetRemovedClassesChangesinitDirtyFilestryCompileIncrementally*incrementalCompilationExceptionTransformerinitControlFlowAnalysismissingMetadatagetKjsmFilePath-createKotlinJavascriptPackageFragmentProvider	getFileIdloadResourceresolveUnresolvedType$createBuiltInPackageFragmentProvidergetBuiltInsFileNamegetBuiltInsFilePathappendPackageFragmentsserializedPackagesserializeMetadatagetSubPackagesFqNames	asLibraryserializeFilesreadDescriptors
writeProtoreadModuleAsProtocreateMessageCollectorcreateCloneablegetContainingFileAnnotations	readProtoloadValueClassRepresentation
visibility	classKindcreateSimpleSuspendFunctionTypecomputeTypeAliasDescriptorcomputeClassifierDescriptorloadTypeParameter-transformRuntimeFunctionTypeToSuspendFunction%computeLocalClassifierReplacementType-initializeWithCoroutinesExperimentalityStatusgetPropertyFieldAnnotationsgetReceiverParameterAnnotationsasProtoContainertoContextReceiver
memberKindcheckAssertionsvisitTableSwitchInsnNode#computeExceptionHandlersForEachInsnvisitControlFlowEdgegetFrameloopJumpletIf resolveValueAndCheckExpectedTypedoesValueConformToExpectedTypedebugFqNamegetAnnotationClassIdloadSimpleEffectloadExpressionloadPossiblyConditionalEffectgetPackageFqNameIndexgetClassIdIndex
buildProtonewArgumentsInstancegetArgumentStringValuetoArgumentStringspatchOpcodeputHiddenParamsIntoLocalsputValueIfNeededprocessHiddenParametersgenCallgenCallInnercomputeAllNonDeclaredPropertiesputCapturedValueOnStackgenValueAndPut#computeNonDeclaredPropertiesForNamegetTypeAliasByNamepackToByteArray"computeNonDeclaredFunctionsForName
mapToNamescomputeAllNonDeclaredFunctionscomputeNonDeclaredDescriptorsnewOperationcreateImplementationcomputeTypeAliases
addMembersaddFunctionsAndPropertiesTogetOuterReceiverExpressiongroupByNamemapWithDeserializertoGeneratedFileunwrapToKtPsiSourceElementgetKotlinBlockImbalanceCountgetOperationSymboltoKtPsiSourceElementfakeElementrealElementtoKtLightSourceElementcomputePrimaryConstructorfindEnumEntrycomputeConstructorscomputeEnumMemberNamesputReceiver computeCompanionObjectDescriptorgetValueClassPropertyTypecomputeSubclassesForSealedClasscomputeSecondaryConstructorshasNestedClassafterFunction
afterClassafterPropertyafterConstructorafterTypealiasreadSourceFileWithMappingtoSourceLinesMappinggenConstructor
createNodeisReparseableBlock
isParsablecreateCompositeNodeparseContentsisAllowedParentNodegetErrorsCount&isAnnotatedWithContainerMetaAnnotationcollectSuppressAnnotationKeysdisposeChildrenatFirstValidFromhasAnnotations&shouldSerializeHasStableParameterNamesallTypesFromSignatureperformTransformationsclassForInnerClassRecordgenerateSyntheticPartsAfterBodygetBuildWorkResultinjectableServicesOfcalculateOwnValuecalculateExecutionTimeValue createFlowParametersInstantiatorcreateFlowProviderscreateBuildFlowScopecreateFlowSchedulerwritePropertyTracestackTraceStringOf
beginArrayjsonObjectListjsonList
beginModelkeyForsimpleStringendModel	endObject
jsonObjectcommaendArraybeginObject
jsonStringendReportDatabeginHtmlReport generateSyntheticPartsBeforeBodyendHtmlReportbeginReportDatawriteConfigurationsreadVariantsreadConfigurationreadConfigurationsconfigurationsToPersistwriteConfigurationwriteVariantsvisitProjectslocateCachedValueloadOrCreateValuerestoreFromCacheEntryprojectPathFromtaskPathFrompropertyDescriptionFortypeFromfirstTypeFromsimplePropertyDescriptionrequireResourcemapLocation	exceptiondocumentationSectionreadHtmlTemplateclickableUrlForappendSummaryHeaderbuildSummaryReportLinktextForConsolereorderArgumentsIfNeededgenerateVarargconsoleComparatorbeforeCompletecountersummaryTextincompatibleTasksSummaryprojectStateStatsoutputDirectoryForhasTooManyProblemsrequestedTasksOrDefault#failingBuildDueToSerializationErrordiscardStateDueToProblemscapitalizeddirectoryChildrenNamesHashfileSystemEntryTypeparametersTypeOfsetBuildWorkResultconfigureParametersForschedulePendingActionstoDefaultLowerCasefilterKeysByPrefixjvmFingerprintcoerceRightToPrimitiveconfigurationCacheLinkForunsafeWrite jumpIfCanCompareTopWithPrimitivegetBroadcasterreadPropertyValue
consumedByvisitEntriesForProjectscountUpToDatePrefixOfentryForcheckInitScriptsAreUpToDatehasDirectoryChangedbuildLogicInputFailedbuildLogicInputHasChangedcheckFingerprintValueIsUpToDatehasFileChangedwriteNextPropertynewBeanWithId	maybeInitnewConstructorForSerializationconstructorForSerializationconventionValueOfdebugFrameNamegetConventionValuegenerateBodyapplyConventionMappingTorelevantTypeHierarchyOfrelevantStateOfisNotAbstractTaskFieldunsupportedFieldTypeFormakeAccessiblereportUnsupportedFieldTypeisRelevantDeclaringClassconventionAwareFieldsOfrelevantFieldsOfsingleThreadExecutoronInputmodifyStatemoveSpoolFileTocloseHtmlReportwriteReportFileTohtmlReportSpoolFileshutdownAndAwaitTermination
reportHashcondJumpcommitReportToonDiagnostic	forObjectserializationMethodHierarchy	invokeAlldecodingBeanWithIdputIdentityreadObjectMethodHierarchyFromisReadResolvefirstMatchingMethodOrNull#firstAccessibleMatchingMethodOrNull
allMethods
readNBytesreadUnsharedregisterValidationreadAllBytesreadObjectOverride
readFields	available	readFullyreadUTFreadUnsignedShortreadUnsignedBytedefaultReadObjectreadCharmarkSupported
transferTouseProtocolVersionplayback	writeCharwriteUTFwriteFieldsdefaultWriteObjectwriteObjectOverride
writeChars	putFieldswriteUnsharedquotedappendStringOfunpackTransformStepsunpackTransformStepwriteObjectMethodHierarchyFromwriteReplaceMethodFromcalculateEncodingencodingForwriteReplaceEncodingForreadResolveMethodFromreadResolveEncodingForwriteObjectEncodingForreadObjectEncodingForcleanupOnNullReceivernestedProviderCodecuserTypesCodecworkNodeCodecForcompleteWithReentrantBeanCodecinternalTypesCodecfingerprintTypesCodec	baseTypesproviderTypesfileCollectionTypes!nestedProviderCodecForFingerprintwriteEnumValueOf
readBeanOfwriteBeanOfunsupportedFileTreeserviceTyperecreateDependenciesreadTaskreadRequiredServicesreadUpToDateSpecwriteUpToDateSpecreadDestroyablesOfwriteRequiredServiceswriteDestroyablesOf	writeTaskreadReasonNotToTrackStatereadLocalStateOfwriteLocalStateOfwriteReasonNotToTrackStateflagRead/reportUniqueEnvironmentVariablesPrefixedByInputreportUniqueFileInput reportUniqueFileSystemEntryInput)reportEnvironmentVariablesPrefixedByInputcaptureDirectoryChildrenreportExternalProcessOutputReadbeforeValueObtainedinputFileSystemEntry	inputFilereportSystemPropertyInputonChangingModuleResolvereportEnvironmentVariableInput%reportSystemPropertiesPrefixedByInputscriptSourceObservednewField*addSystemPropertiesPrefixedByToFingerprintonChangingValuereportDirectoryContentInputreportUniqueSystemPropertyInputcaptureRemoteScriptreportValueSourceInputcaptureFileSystemEntryvalueObtainedcaptureWorkInputs+reportUniqueSystemPropertiesPrefixedByInputreportUniqueValueSourceInputfileCollectionObservedlocationForreportFileSystemEntryInputsimplifyaddEnvVariableToFingerprintafterValueObtainedonDynamicVersionSelectioncaptureFile	onExecute&addEnvVariablesPrefixedByToFingerprint
currentKeyindexSegmentsink"reportUniqueDirectoryChildrenInput$reportUniqueEnvironmentVariableInputinitScriptsaddSystemPropertyToFingerprintreportFileInputonScriptFileResolvedwriteSuccessorReferences
writeNodeswriteNodeGroupwriteSuccessorReferencesOf	writeWork	readNodesreadSuccessorReferencesreadNodeGroupreadSuccessorReferencesOfreadWorkreadNodescriptReferencedwriteReferencefindOwningScriptreadReferenceproducerForSubtypesOfstartFinalizationwithPreviousgetComponentIdwithNextjavaTimeTypes$readObjectMethodHierarchyForDecodingobjectInputStreamAdapterForrecordWritingOfwriteRegisteredPropertiesOfreadRegisteredPropertiesOfreadInputPropertiesOfcollectRegisteredInputsOfwithTaskReferencesAllowed
withTaskOfpackcollectRegisteredOutputsOfreadOutputPropertiesOfisTaskReferencesAllowedcannotCreateSpecForfromSpectoSpecOrNull
rootSpecOfcheckForComodificationresolveScriptsForProjectcheckHasNextcheckNextWasInvokedpausecommitFingerprintTo#collectFingerprintForReusedProjects
maybeStartpullLastBufferFromRootcloseStreamsstopCollectingFingerprint	setInRootmaybeStartCollectingFingerprintremoveFromRootAtillegalStateForreadPatternSetwritePatternSetcollectionCodecmapCodecoverridesHashCode-readCollectionCheckingForCircularElementsInto*writeCollectionCheckingForCircularElementsgetTransformStepgetTargetAttributesgetPreviousgetTransformChainpushFilledTailasTransformedasDescribable	getSchemaremoveFromTailAtgetOverriddenAttributes	bufferFordecodeContentsencodeContentsinsertIntoRootpullLastBuffervisitFailurerequireArtifactFilesendVisitCollectioninsertIntoTaildecodeValueSourceencodeValueSourceunsupportedTypesbuildServiceRegistryOfwithFlowActionIsolateverifiedIsolateOwnerreadAttributeValuewriteAttributeswriteAttributeValuereadManagedreadAttributewriteManagedwriteAttributereadAttributesUsingtaggedEncodingForcomputeEncodingtransformedExternalArtifactstransformedProjectArtifactspushTaildependenciesForrootSizecreateEntries
getEntriesgetLoadedPropertyOldValue
toTrackingemptyOftoRestoringModesetModetoRestoringgetCachedStatetoTrackingModeaddElementsencodeProviderdecodeValuedecodeProviderencodeValue!logUnsupportedLambdaParameterType'checkLambdaCapturedArgTypesAreSupportedcanReadSystemPropertycanReadFilescanReadEnvironmentVariablecanAccessConventionsisIgnoredBeanFieldisBuildScanPlugincanStartExternalProcessescallStackHasElementwithWorkaroundsForcanAccessProjectAtExecutionTime shouldDisableInputWorkaroundsForisEnterpriseConventionsPluginrunWriteOperationrunReadOperationrunToCompletionlogNotImplementedlogPropertyProblemwithDebugFrame
getIsolategetCodecremoveEntryAtIndex
decodeBeanwithImmediateModewithGradleIsolatewithBeanTracedecodePreservingIdentityencodePreservingIdentityOfdecodePreservingSharedIdentity encodePreservingSharedIdentityOfreadNonNullwithIsolate
encodeBean	withCodecnextSequenceNumberinitProjectProvider	readScopereadSmallLongreadNullableSmallIntinitClassLoaderfilterRootsreadSmallIntfinishgetFullResolvedListloadPackageFragmentreadHashCode
readBinarydecodeChunkedskipChunkedreadNullableStringcreateResolvedgetInternalStringgetInternalFlaggetTransformmarkNeededForLinkisInteropLibraryreadMapInto	reentrantdecodeUsingJavaSerializationreadTransformedClassPath	singletonreadClassPathreadClassArraycodecreadCollectionIntowriteMapEntrieswriteStringsreadCollectionreadDefaultClassPathwriteClassPathencodeUsingJavaSerializationwriteClassArrayreadMapEntriesIntowriteTransformedClassPathwriteMapreadEnum	writeEnumreadClassOfwriteDefaultClassPathownerServicewriteNullableStringwriteSmallLongwriteSmallInt
writeScopewriteHashCodewriteNullableSmallIntencodeChunkedwriteBinaryonTaskExecutionAccessProblematConfigurationTimeisBuildSrcBuildlocationForTasklistenerRegistrationProblemonExternalProcessStartedproblemsListenerForonUnsafeCredentialsdisableForCurrentThreadrestoreForCurrentThreadisEnabledForCurrentThreadhasChildrenisLocalProjectrelevantProjectsprojectStateOfdecryptingInputStreamproduceSecretKeycacheBuilderForencryptingOutputStreamshouldEncryptStreamsnewEncryptionSessionassertKeyLengthsecretKeySourcesecretKeyFromkeyStoreFilerelativeChildPathOrNullputBuildScanappendRequestedTasksputCacheKeyComponentsthrowUnsupportednagUserAboutshouldNagFor	shouldNagshouldReportInContextwithDynamicCallcreateKeyStoreAndGenerateKey!loadSecretKeyFromExistingKeystoregenerateKeynormalizeFilePatternnormalizeActualInputPathmaybeRelativizewildcardsToRegexPatternString maybeCreateJointRegexForPatternssubstituteUserHomenotifyTaskDependenciesAccesscurrentTasknotifyProjectAccessnotifyConventionAccessreadContextForcollectRootDirsreaderContextForreadIncludedBuildStateFromwriterContextForwriteContextForreadModelFromwriteModelTowithReadContextForwriteCacheEntryDetailsTocodecsloggingTracerLogLevelreadRootBuildStateFromreadCacheEntryDetailsFromloggingTracerForwriteRootBuildStateToreadConfigurationCacheStatewriteIncludedBuildStateTo#createCachedPackageFragmentProvidercreateDescriptordirectoryContentObservedsystemPropertyQueriedexternalProcessStarted createDescriptorOptionalBuiltInscreateDescriptorAndNewBuiltInsenvVariableQueriedcheckForCoupledProjectsonTaskDependencyUsage'reportProjectIsolationProblemOnApiUsagewithStoreOperationwithLoadOperationwithOperationreadBuildCacheConfiguration$writeBuildOutputCleanupRegistrationsreadFileSystemDefaultExcludesreadBuildStatereadCacheConfigurationsrootBuildStatereadIncludedBuildDefinitionapplyProjectStateswriteFileSystemDefaultExcludeswriteChildBuildsreadBuildContentbuildEventListenersOfwriteBuildContentreadPreviewFlagswriteBuildSrcBuildreadGradleStateconvertProjectreadBuildWithNoWorkreadRequiredBuildServicesOfreadRootBuildwriteStartParameterOfbuildFlowScopeOfreadProjects!readGradleEnterprisePluginManager#readBuildOutputCleanupRegistrationswriteBuildCacheConfigurationreadCachedEnvironmentStatewriteBuildStatewriteCachedEnvironmentStatereadBuildsInTreewriteBuildsInTreestateFileForworkNodeCodecwritePreviewFlagsreadRootBuildStatewriteBuildTreeScopedStatewriteBuildDefinition"writeGradleEnterprisePluginManagerreadWorkGraphwriteProjectswriteWorkGraphOfcollectProjectsisRelevantBuildEventListenerconvertProjectswriteIncludedBuildwriteGradleStateidentifyBuildreadIncludedBuild#writeBuildEventListenerSubscriptionreadFlowScopeOfreadBuildTreeStatereadChildBuildsreadStartParameterOfcalculateRootTaskGraph"readBuildEventListenerSubscriptionwriteRequiredBuildServicesOfwriteCacheConfigurationswriteFlowScopeOfwriteRootBuildStatewriteRootBuildreadBuildSrcBuildwriteBuildWithNoWorkfinishBuildTreetrackingProjectAccesssetResolveStrategysetDelegategetMaximumNumberOfParametersprofileNameFor	loadModeldoneWithWorkunloadGradlePropertiescreateSyntheticPackageFragmentsprepareConfigurationTimeBarrier"createDeserializedPackageFragmentscreateCachedPackageFragments"writeConfigurationCacheFingerprintcheckFingerprintsaveToCachereadFingerprintFiledetermineCacheActionloadWorkGraph	saveModel"runWorkThatContributesToCacheEntryloadFromCache'checkFingerprintAgainstLoadedPropertiescrossConfigurationTimeBarriersaveWorkGraphprepareForWorklibraryResolver!registerWatchableBuildDirectories cacheFingerprintWriterContextForlogBootstrapSummarystartCollectingCacheFingerprintcreateExecutionAccessCheckerhttpResourceConnectorFrom createIgnoredConfigurationInputs!createRemoteScriptUpToDateCheckerregisterBuildSessionServiceshasIgnoredPathsregisterBuildTreeServices createTaskExecutionAccessChecker createBuildTreeWorkGraphPreparerservicesForBuildTreeservicesForNestedBuildTreecreateWorkPreparercreateModelCreatorscheduleRequestedTasksgetLoadedSettingsmaybeLoadFromCachegetEdgePositioncreateRootProjectrootProjectDescriptor$isCompiledToJvmDefaultWithProperModecreateProjectforceResolveImportforceResolveNonDefaultImportsgetReferencedDescriptorreplaceTypeArgumentssetCandidateDescriptorsetAnalyzedResultshasInferredReturnType setSmartCastDispatchReceiverType,updateExtensionReceiverWithSmartCastIfNeededisCompletedgetValueArgumentsByIndexcollectMembersgetArgumentMappinggetDataFlowInfoForArgumentsmayDataBeApplicablecreateInvokeProcessorsimpleProcess getSmartCastDispatchReceiverType containsOnlyOnlyInputTypesErrorsargumentToParameterMapgetExplicitReceiverKindsetResultingSubstitutorupdateExtensionReceiverTypeupdateContextReceiverTypesupdateDispatchReceiverTypegetCandidateDescriptorrecordLookupsgetResultingCallsgetResultingCallgetAllCandidatesgetResultingDescriptorgetResultCodegetResolvedCallgetCallcheckArgumenttransformToWarninggetImplicitReceiverfactoryForVariablefactoryForInvoketransformCandidate(reportAdditionalDiagnosticIfNoCandidatesisProperTypeForFixationapproximateCapturedTypesisStrong$substituteNotNullTypeWithConstructorgetNestedArgumentsaddResolvedKtPrimitivegetSubResolvedAtomsgetEmptyIntersectionTypeKind#asPostponedArgumentsAnalyzerContext2putBuiltFunctionalExpectedTypeForPostponedArgumentmarkPostponedVariableregisterVariablegetProperSuperTypeConstructorsisPostponedTypeVariablecloseTransactionunmarkPostponedVariablesubstituteFixedVariables3markCouldBeResolvedWithUnrestrictedBuilderInference2getBuiltFunctionalExpectedTypeForPostponedArgumentremovePostponedVariablesconvertParameterType&conversionIsNeededBeforeSubtypingCheckconversionDefinitelyNotNeeded%conversionIsNeededAfterSubtypingCheckgetLhsResultaddExpectedTypeConstraint+removePostponedTypeVariablesFromConstraintsaddOtherSystemhasUpperOrEqualUnitConstraintbuildCurrentSubstitutor!bindingStubsForPostponedVariablesgetTypeBoundsgetNestedTypeVariablesaddEqualityConstraintisMyTypeVariableaddConstraintaddMissedConstraintscreateTypeArgumentcreateErrorTyperesolveForkPointsConstraintscreateDataFlowValueForProperty$createDataFlowValueForStableReceivergetStableTypesgetCollectedNullabilitygetStableNullability	disequateclearValueInfoestablishSubtypingequategetCollectedTypes	nullValueextractDslMarkerFqNamesaddVariableDescriptortakeSnapshotaddFunctionDescriptoraddClassifierDescriptorcheckBeforeAddingToScopehandleConflictingOverloadshandleRedeclarationkinddiagnosticFor
extraCheck
boxedValueevaluateUnaryAndCheckevaluateBinaryAndCheckisStandaloneOnlyConstantgetBuiltInsisSuppressedByExtensiongetSuppressionAnnotationshasOnlyInputTypesAnnotationfindImplicitOuterClassArgumentsfindEnumEntriesClasscheckClassHeadervisitDeclarationinheritanceConflictoverrideConflictcomputeSealedSubclassescheckTypeReferenceisProperTypewrongNumberOfTypeArgumentswriteOnlyStubsinitializeLambdaisComputinggetBinaryRootsgetModuleLibrariesScopedeclarationsByAnnotationannotationsOnDeclarationgetKotlinOnlySubPackagesFqNamesdoesKotlinOnlyPackageExistdoesPackageExist doesPlatformSpecificPackageExist%getPlatformSpecificSubPackagesFqNamesgetAllClassesByClassId3getTopLevelKotlinClassLikeDeclarationNamesInPackage!getTopLevelCallableNamesInPackagefindInternalFilesForFacade getClassLikeDeclarationByClassIdgetTopLevelCallableFilesgetAllTypeAliasesByClassIdgetTopLevelPropertiesgetTopLevelFunctionscreatePackageProvidervisitTypeAliasvisitPropertycreateDeclarationProvidercreateAnnotationResolvergetResolutionScopefindDeclarationInCompiledFilecreateLazyValueWithPostComputecreateNullableLazyValue(createRecursionTolerantNullableLazyValueaddOwnDataTocreateCacheWithNullableValues createRecursionTolerantLazyValuecreateCacheWithNotNullValuescreateMemoizedFunction(createMemoizedFunctionWithNullableValues&createNullableLazyValueWithPostComputegetSliceContentsisConstructor&createLibrariesWideModificationTracker.createProjectWideOutOfBlockModificationTrackerincrementModificationsCountcreateModuleStateTracker<createModuleWithoutDependenciesOutOfBlockModificationTrackerindexDescriptorgetStubBuildercreateFileViewProviderbuildDecompiledTextresolveDeclarationsInFacadegetModifierscreateValueParameterListcreateModifierListStubdoCreateCallableStubcreateTypeAliasesStubsbuildFileStubgetStubVersionmodulesWhoseInternalsAreVisiblesdkDependencytryGetResolverForModulebuiltInsForModuledescriptorForModuleresolverForModuleDescriptordiagnoseUnknownModuleInfomoduleInfoForModuleDescriptormodulesContent%getPlatformDependentDeclarationFiltermapJavaToKotlin
isReadOnlyisErrorreportUnresolvedWithTargetreportDynamicCallreportMissingUnresolvedreportElementWithErrorTypecreateDiagnosticstringTemplateValueenhanceInferenceCompatibilitycreateTableBuilderisLocalClassNamegetQualifiedClassNameisJsinvokeWithReturningEffectsinvokeWithConstantregisterClashResolversregisterDescriptorsresolveMultiplebooleanValue
visitEqualvisitConstantvisitIsvisitVariablevisitReceivervisitNot	isImpliesinvokeWithArgumentsdoInvocationtryParseEffectrenderValueParametersrenderClassifierNamerenderFqName
renderNamerenderTypeProjectioncontractNotAllowedunsupportedFeatureflushDiagnosticsaddFallbackErrorIfNecessarybadDescriptiongetContractDescriptionnegatedvisitBooleanExpression
visitValuevisitVariableReferencevisitLogicalAndvisitBooleanConstantDescriptorvisitBooleanVariableReferencevisitLogicalOrtryInterpret
getFunctorinterpretConstant"interceptFunctionLiteralDescriptorinterceptTyperegisterExtensionPointinterceptFunctionCandidates"interceptResolvedCallAtomCandidateinterceptVariableCandidatesgetSyntheticConstructors,getRefinedUnsubstitutedMemberScopeIfPossiblegetRefinedMemberScopeIfPossiblegetUseSiteTargetedAnnotationsvisibleFromPackageshouldCreateClass"getAllContributedClassesIfPossibleforceResolveAllContentscustomEffectiveVisibilitycontainerRelationeffectiveVisibilityaccept	isReifiedgetVariancecontainsPropertyWithNamegetPropertyTypeByNamemustCheckInImportsrenderTypeConstructorcommaSeparatedmarkKtDiagnosticchooseFactoryhasSyntaxErrorsmarkElementmarkSingleElement	markRangemarkModifierisSuppressedgetFileClassInternalNameremoveValuesasFqNameasNamedumpKey	createNilabiSnapshotgetBuildHistoryFilesForJarhistoryFilesForChangedFilesgetBuildHistoryForDirgetUnixStyleRelativePathsgetReverseResolvergetResolverresetInMemoryChangesinvokekeyscompareAndUpdatemd5toProtoDatamarkAsSuccessfulregisterInMemoryStorageWrapperupdateComplementaryFilesgetSourceFileIfClassgetComplementaryFilesRecursiveclassesFqNamesBySources	markDirtygetSubtypesOfgetSupertypesOftoChangesEitherregisterAddedOrChangedFilegetNonPrivateMembers
differencecheckEquals	dumpValueclearCacheForRemovedClassesembedSourcesperformWorkAfterCompilationupdateCachesadditionalDirtyLookupSymbolsperformWorkBeforeCompilationrunCompilerrunWithNoDirtyKotlinSourcesdestinationDircalculateSourcesToCompilemakeServicesadditionalDirtyFilescreateCacheManagersetupJarDependenciescreatePackageFragmentProviderhasTopLevelClassgetStringIndexerrorcreateAnnotationSerializergetFunctionNameshasClassgetClassifierNamesgetTypeConstructorcreateClassIdgetConstructorsgetNonDeclaredClassifierNamesgetNonDeclaredFunctionNamesgetContributedClassifieraddEnumEntryDescriptorsisDeclaredFunctionAvailablegetNonDeclaredVariableNamesisDenotablegetContentsAsStream"getClosestAnnotatedAncestorElementgetLineByOffsetgetLineAndColumnByOffsetgetLineStartOffsetvariance
projectiongetParameterswriteDiagnosticprojectPathForKeystackTraceStringForproblemlocationForCallerforIncompatibleTaskdocumentationLinkForpropertiesFilegetVariablesbyNamePrefixgetSystemPropertieswriteStateOfisAssignableToreadStateOfnewBeanillegalStatedoDecodedoEncodesystemPropertiesPrefixedByenvVariablesPrefixedByencodingForTypevisitFileTreeBackedByFile
startVisitcollectFingerprintForProjectfingerprintOf hashCodeOfDirectoryChildrenNames
hashCodeOfdisplayNameOfreportInputvisitExternalArtifactsvisitTransformSourcesgetRequestedAttributes
component7getRegistrationsgetConfigurationIdentityfinalizeIfNotAlreadycreatevisitDependenciesselectedArtifactscomputeArtifactsisSystemPropertyLoadedisSystemPropertyMutatedprepareForVisitvisitCollectionlogUnsupportedforIncompatibleTypewithPropertyTrace	onProblem	readClassputInstance
newIsolatewhenThirdPartyAgentPresentgetValue
component6
component5
component4
component3onTaskDependenciesAccess onBuildScopeListenerRegistrationonConventionAccessonProjectAccessisFileSystemCheckIgnoredForsystemPropertiesClearedloadOrScheduleRequestedTasksloadOrCreateProjectMetadatainitializeCacheEntryloadOrCreateModelmaybePrepareModelwriteConfigurationCacheStateattachRootBuildloadGradlePropertiesloadRequestedTasksfinalizeCacheEntry
component2
component1leaveDynamicCallenterDynamicCallunreportedProblemInCurrentCallregisterRootProjectcreateBuildaddIncludedBuildvisitBuildsgetBuildSrcOfregisterProjectcreateProjectsscheduleAndRunRequestedTasksserviceprepareToScheduleTasks getConfigurationTargetIdentifiergetIdentityPathgetProjectEvaluationBroadcastergetClassLoaderScopegetServicescopyshouldReportExecutionTimeAccess,disallowedAtExecutionInjectedServiceAccessedonAccesscreateControllercreateRootBuildControllergetConfiguredModelgetProjectDescriptorsettingsDircreateSettingsgenerateStaticFunctionsbeforeTasksfromBuildModelgenerateNestedClassclassloaderCreatedchildScopeCreatedgenerateMethodssetIncludedBuildssetDefaultProjectisRootBuildgetDefaultProjectbaseProjectClassLoaderScopegetBuildListenerBroadcastergetPublicBuildPathmaybeWrapListenergetProjectRegistrycontextualize withCrossProjectModelAccessCheck!withCrossProjectModelAccessChecksincludedBuildssetClassLoaderScopeattachSettingssetRootProjectsetBaseProjectClassLoaderScope&withCrossProjectModelGradleAccessChecknewDetachedResolverbindAllModelRulesgetStaticFunctionNamesfireDeferredConfigurationmodifyFieldgetNestedClassNamesgetParentIdentifiergetConfigurationActionsgetInternalStatusidentityPathgetBuildScriptSourcestepEvaluationListenergetSourceForArgumentaddRuleBasedPluginListenergetChildProjectsUncheckedgetServiceRegistryFactorytaskDependencyUsageTrackerdiagnoseDescriptorNotFoundaccessimportsForNamegetDependencyMetaDataProvidergetModelRegistrygetStandardOutputCaptureisRootScriptgetBaseClassLoaderScopeprepareForRuleBasedPluginsgetFileResolverisPluginContextgetInheritedScope"parentProjectDynamicInheritedScope	setScripttaskGraphForProjectgetTaskDependencyFactorygradleInstanceForProjectgetBuildPathshouldNotBeUsedprojectPathdoCreateIndexaddDeferredConfiguration$maybeReportProjectIsolationViolationtryGetPropertymethodMissingExceptiontryInvokeMethodsetMissingPropertygetFileScopesgetMissingProperty getTopLevelClassifierDescriptors	hasMethodtrySetProperty#getPackageFragmentOrDiagnoseFailurecreateDynamicLookupRoutinecreateCrossProjectModelAccess1createDynamicCallProjectIsolationProblemReportingservicesForBuildcreateLocalComponentRegistrycreateBuildLifecycleControllercreateProjectEvaluatorcreateGradleModelcreateBuildModelController removeTaskExecutionGraphListeneraddTaskExecutionGraphListenercheckCrossProjectTaskAccessgetFilteredTasksvisitScheduledNodesgraphPopulatedreportProjectIsolationProblemremoveTaskExecutionListenerpopulateaddTaskExecutionListenerreportCrossProjectTaskAccessresolveLocalDeclarationhasTask$observingTasksMaybeFromOtherProjectsreportCoupledProjectsgetNonDeclaredFunctions	whenReadylocateBuilderForTargetgetNonDeclaredClasses	getTargetmarkAccessed
baseDirForfileForchmodforKeywithOnDemandLockMode	stateFileincludedBuildFileForwithLruCacheCleanupwithExclusiveAccessToCachefileForReadcallMethodsapproveCallhandleDestroy
drainQueuedispatchAndEnqueuecanRunnonNullCausesetViewTreeLifecycleOwnerfindViewTreeLifecycleOwnergetAdapterNameresolveObserverCallbackTypeisLifecycleParentcreateGeneratedAdapterlifecycleEventObservergeneratedConstructorgetObserverConstructorTypewhenStartedwhenStateAtLeastwhenCreatedwhenResumedgetApplicationfindViewTreeViewModelStoreOwnersetViewTreeViewModelStoreOwnerattachToLifecycleonActivitySaveInstanceStatedispatchCreateonResumeonPausesetProcessListeneronActivityDestroyedonActivityPrePausedonActivityResumedonActivityPreStoppedonActivityStartedonActivityPostCreated
registerIn	onDestroyonStoponActivityStoppedinjectIfNeededIndispatchStartonActivityPostResumedonActivityPostStartedonActivityPreDestroyedonActivityPausedonActivityCreatedaddInitializerviewModelFactory	onChangedlaunchWhenCreatedupFromlaunchWhenStarteddownFromlaunchWhenResumedattachHandleIfNeededtryToAddRecreatorbackwardPasshandleLifecycleEventcreateUnsafemoveToStateforwardPassaddObservercalculateTargetStateremoveObserverdispatchEventenforceMainThreadIfNeeded	markStatepopParentStatepushParentStatecreateSavedStateHandleenableSavedStateHandlesfindMatchingConstructordefaultCreationExtras	onRequerydefaultFactoryonCreatecreateHandlegetLiveDataInternalvalidateValuegetLiveDatasavedStateProvidersetSavedStateProviderclearSavedStateProvidergetStateFlowdetachonStateChanged	saveStateconsumeRestoredStateForKeyonRecreatedreversedAnyforEachReversedIndexed
forEachKeyforEachValuefindKeyIndexperformAttachperformRestoreperformSavewriteToTestStoragecaptureRegionToBitmapAsynccaptureRegionToBitmapforceRedrawGlobalWindowViewstakeScreenshotNoSynctakeScreenshotcanTakeScreenshottakeScreenshotOnNextFramefindInsertIndexremoveValueAt	findIndexlaunchFuturecommonContainsValuecommonRemoveAt
commonSizecommonRemovecommonSetValueAtcommonContainsKeycommonValueAtcommonPutAllcommonIndexOfKeycommonClearcommonKeyAtcommonPutIfAbsent	commonPutcommonIsEmptycommonAppend	commonGetcommonToStringcommonIndexOfValuecommonReplaceremoveIffloatFromBits
arrayMapOfsynchronizedImplidealIntArraySizeidealByteArraySizeidealLongArraySizevalueIteratorkeyIteratorpackInts
packFloatsgenerateBitmapFromPixelCopygenerateBitmapFromDrawcaptureToBitmapAsync
getSurfacegetBoundsInWindowcaptureToBitmap reflectivelyGetLocationInSurface&generateBitmapFromSurfaceViewPixelCopygetBoundsInSurfacegenerateBitmapgetControlledLooperforceRedrawremoveAtRangeindexOfValue
indexOfKeykeyAt
setValueAtcreateCountsizeOflruCacheentryRemovedputCountmaxSizeevictAllevictionCount	missCountresize
safeSizeOfhitCountretainAllInternalcontainsAllInternalensureCapacityInternalisEmptyInternalremoveInternalclearInternalindexOfNullindexOfInternalbinarySearchInternalvalueAttoStringInternalhashCodeInternaladdInternal
arraySetOfequalsInternalremoveAllInternalvalueAtInternalallocArraysremoveFromEndremoveFromStartdoubleCapacitypopFirstmutableIntSetOfemptyIntSetintSetOfcreateIndexOutOfBoundsException
floatSetOfemptyFloatSetmutableFloatSetOffindElementIndexremoveDeletedMarkers	longSetOfmutableLongSetOfremoveElementAtresizeStorageforEachIndexfindAbsoluteInsertIndexadjustStorageemptyLongSetinitializeMetadatafindFirstAvailableSlotinitializeStorageinitializeGrowthaddition_isCorrectuseAppContextonActivegetItemCountloadVideoInWebViewonCreateViewHolderloadVideoListonBindViewHoldergetVideoThumbnailcheckAndRequestPermissionsreflectiveNewemptyIntListmutableIntListOf	intListOf
longListOfemptyLongListmutableLongListOffloatListOfmutableFloatListOfemptyFloatListemptyIntIntMapmutableIntIntMapOfintIntMapOfasDebugStringmutableIntLongMapOfemptyIntLongMapintLongMapOfgetSavedStateProviderrunOnNextRecreationregisterSavedStateProviderunregisterSavedStateProviderasSetmutableScatterSetOfemptyScatterSetscatterSetOflongIntMapOfmutableLongIntMapOfemptyLongIntMapmutableObjectListOf
checkIndexobjectListOfcheckSubIndexemptyObjectListemptyIntFloatMapmutableIntFloatMapOfintFloatMapOfemptyFloatIntMapmutableFloatIntMapOffloatIntMapOfreadRawMetadata	maskEmptymutableScatterMapOflowestBitSetemptyScatterMapmaskEmptyOrDeletednormalizeCapacitynextCapacityunloadedCapacityloadedCapacity	isDeletedh1writeRawMetadatah2emptyLongLongMaplongLongMapOfmutableLongLongMapOfemptyFloatLongMapmutableFloatLongMapOffloatLongMapOfmutableIntObjectMapOfintObjectMapOfemptyIntObjectMaplongFloatMapOfmutableLongFloatMapOfemptyLongFloatMapobjectIntMapOfmutableObjectIntMapOfobjectIntMapemptyObjectIntMapgetOrDefaultInternalemptyFloatFloatMapfloatFloatMapOfmutableFloatFloatMapOfemptyLongObjectMapmutableLongObjectMapOflongObjectMapOfobjectLongMapmutableObjectLongMapOfobjectLongMapOfemptyObjectLongMapemptyFloatObjectMapfloatObjectMapOfmutableFloatObjectMapOfmutableObjectFloatMapOfemptyObjectFloatMapobjectFloatMapobjectFloatMapOf"setViewTreeSavedStateRegistryOwner#findViewTreeSavedStateRegistryOwnergccommonRemoveAtRangeasMutableMapasMutableSetcommonGetInternalcommonGconDrawcancelOnRejection'updateChoreographerAndPostFrameCallback	asHandlerpostFrameCallback
awaitFrame
preHandlerbundleOf
postAtTimeputSizeFputSizesetSynchronizedcurrentLengthcreateSafeConstructortryCopyAndVerify
foldCopieshasCopyableElementsgetAndUpdateupdateAndGettryAllocateWorkeraddAndTryDispatchingcheckParallelismdispatchInternal%enhanceStackTraceWithThreadDumpAsJson%dumpCoroutinesInfoAsJsonAndReferencestoStringWithQuotesdispatcherFailureonTextChangedbeforeTextChangedafterTextChangedonAnimationRepeatonAnimationCancelonAnimationResumeonAnimationPauseonAnimationStartonAnimationEndonLayoutChangeonViewDetachedFromWindowonViewAttachedToWindowonTransitionEndonTransitionResumeonTransitionStartonTransitionPauseonTransitionCancelcreateFromParcelonBackInvokedensureItemIteratordecrementAndGetfindSegmentAndMoveForwardmoveForwardaddConditionallyprepareNextdestinationinitialValuecolor	underlinebackgroundColorsuperscriptinSpansbuildSpannedStringstrikeThroughasAndroidXConsumertoPersistableBundlepersistableBundleOf
putBooleanputBooleanArraycreatePersistableBundleputValue
asConsumerremoveItemAtsetBlendModetransactioncontentValuesOfedit
toDrawabletoIcontoAdaptiveIcongetSystemServicewithStyledAttributesgetIntOrNullgetFloatOrNullgetLongOrNullgetShortOrNullgetBlobOrNullgetDoubleOrNulldoOnTextChangeddoAfterTextChangedaddTextChangedListenerdoBeforeTextChangedtranslationMatrixrotationMatrixscaleMatrix
toXfermodetoColorFilterdecodeDrawabledecodeBitmaptoBitmapupdateBoundstoBitmapOrNulltoPointtoPointFcreateBitmapapplyCanvasscaleupdateMarginsprepareNextIteratorupdateMarginsRelative
setMarginsgetIntOrThrowgetIntegerOrThrowgetTextOrThrowgetFontOrThrowcheckAttributegetTextArrayOrThrowgetDimensionPixelOffsetOrThrowgetResourceIdOrThrowgetColorStateListOrThrowgetStringOrThrowgetDimensionPixelSizeOrThrowgetBooleanOrThrowgetDimensionOrThrowgetFontgetColorOrThrowgetFloatOrThrowgetDrawableOrThrowwithRotation	withScale
withMatrixwithSavewithClipwithTranslationwithSkewaddPauseListener
doOnRepeattoRegiontoRectFtoRect
doOnAttachdoOnPreDrawupdatePaddingdrawToBitmap
doOnDetach
setPadding
doOnLayoutupdateLayoutParamsdoOnNextLayoutupdatePaddingRelativepostOnAnimationDelayed	doOnStart	doOnPause
doOnCanceldoOnEnd
doOnResume	convertTotoColorLong
toColorInttoColoronActivityResultPickVisualMediaRequestsetMediaTypedispatchOnContextAvailableclearAvailableContextpeekAvailableContextwithContextAvailableaddOnContextAvailableListeneronContextAvailable removeOnContextAvailableListenertouchYprogresstoBackEventtouchXcreateOnBackEvent	swipeEdge'setViewTreeOnBackPressedDispatcherOwner(findViewTreeOnBackPressedDispatcherOwner#findViewTreeFullyDrawnReporterOwner"setViewTreeFullyDrawnReporterOwnersetFillInIntentsetFlagswriteToParceldescribeContentshandleOnBackStartedaddCancellablehandleOnBackProgressedhandleOnBackCancelledremoveCancellableinitializeViewTreeOwnersaddContentViewsetContentViewaddOnReportDrawnListenerreportWhenCompleteaddReporterpostWhenReportersAreDoneremoveOnReportDrawnListenerfullyDrawnReportedremoveReportergetScrimWithEnforcedContrastdarkautogetScrimenableEdgeToEdgelightonBackPressedaddCallbacksetOnBackInvokedDispatcheraddCancellableCallbackonBackProgressedunregisterOnBackInvokedCallbackdispatchOnBackCancelledonBackCancelledhandleOnBackPresseddispatchOnBackStartedcreateOnBackInvokedCallbackupdateBackInvokedCallbackStatecreateOnBackAnimationCallbackupdateEnabledCallbackshasEnabledCallbacksregisterOnBackInvokedCallbackdispatchOnBackProgressedonBackStartedgetGmsPickerisGmsPickerAvailablegetSynchronousResultcreateIntentisSystemFallbackPickerAvailableparseResultgetVisualMimeTypegetClipDataUrisgetMaxItemsisSystemPickerAvailableisPhotoPickerAvailablegetSystemFallbackPickercalculateInputDircalculateOutputDircalculateDefaultRootDirinstantiateApplicationinstantiateActivityisVersionCodeAtLeastPonWrongFragmentContainerpenaltyDeathonSetUserVisibleHint
penaltyLoglogIfDebuggingEnabledonSetTargetFragmentUsageonViolationonSetRetainInstanceUsageonGetRetainInstanceUsagedetectSetUserVisibleHintdetectTargetFragmentUsageonPolicyViolationdetectFragmentReusehandlePolicyViolationgetNearestPolicyallowViolation#onGetTargetFragmentRequestCodeUsageshouldHandlePolicyViolationdetectRetainInstanceUsageonFragmentTagUsagedetectWrongFragmentContainerrunOnHostThreadpenaltyListeneronGetTargetFragmentUsageonFragmentReusedetectFragmentTagUsagesetOnApplyWindowInsetsListenersetDrawDisappearingViewsLastremoveViewsdispatchDrawgetFragment	drawChildremoveAllViewsInLayoutaddViewonApplyWindowInsetssetLayoutTransitionremoveViewAtaddDisappearingFragmentViewremoveViewInLayoutstartViewTransitionendViewTransitionremoveViewsInLayout
removeViewdispatchApplyWindowInsetscalcNextfilterToList	isIdleNowregisterIdleTransitionCallbackaddViewDatagetViews
getActions	addScreenresetTraversalgetLocalizedMessagemergeForChildcopyForChildinitializeDefaultDelayshutdownForTestsshutdownErrorplatformAutoreleasePoollimitedParallelismaddOnNewIntentListenerremoveOnNewIntentListenerisAtLeastOMR1
isAtLeastU
isAtLeastVisAtLeastPreReleaseCodenameisAtLeastSv2getExtensionVersion
isAtLeastT
isAtLeastS
isAtLeastQ
isAtLeastPisAtLeastNMR1
isAtLeastN
isAtLeastR
isAtLeastOdispatchKeyShortcutEventdispatchKeyEventshouldDumpInternalStategetExtraDatasuperDispatchKeyEventputExtraDataonSaveInstanceStatesetSamplingFrequencyHzsetBufferFillPolicy	getParamsregisterForAllProfilingResultssetTaggetProfilingTyperequestProfilingsetDurationMssetCancellationSignalsetSamplingIntervalBytes unregisterForAllProfilingResultssetTrackJavaAllocationssetBufferSizeKbgetThisremoveOnUserLeaveHintListeneraddOnUserLeaveHintListener&removeOnMultiWindowModeChangedListener#addOnMultiWindowModeChangedListener(addOnPictureInPictureModeChangedListener+removeOnPictureInPictureModeChangedListenerisInPoolremoveOnTrimMemoryListeneraddOnTrimMemoryListener$removeOnConfigurationChangedListener!addOnConfigurationChangedListener
htmlEncodeasOutcomeReceiveronResultparseAsHtmltoHtmltrimmedLengthisDigitsOnlygetSpans	toSpannedtoHalf
clearSpanstoSpannabletoAndroidPairtoAndroidXPairtoKotlinPair
asRunnabletoRangetoClosedRangetryWriteitalicrequestStackSamplingdoSomethingWithFailuredoSomethingWithMyFile$registerForAllProfilingResultsSample(registerForAllProfilingResultsFlowSamplerequestHeapProfilerequestSystemTracerequestJavaHeapDumpbold                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     